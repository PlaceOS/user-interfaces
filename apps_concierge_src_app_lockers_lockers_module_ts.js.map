{"version":3,"file":"apps_concierge_src_app_lockers_lockers_module_ts.js","mappings":"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","names":["LockersStateService","AsyncHandler","nextPage","this","_call_next_page","next","Date","now","constructor","_org","_dialog","_settings","super","_filters","BehaviorSubject","_locker_bookings","_loading","levels","level_list","pipe","map","_","get","blds","buildingsForRegion","bld_ids","bld","id","list","filter","lvl","includes","parent_id","display_name","find","building","loading","asObservable","filters","_next_page","Subject","_all_zones_keys","setup_paging","combineLatest","initialised","debounceTime","tap","loaded","date","zones","some","z","region","queryPagedBookings","period_start","getUnixTime","startOfDay","period_end","endOfDay","type","join","include_checked_out","paged_bookings","distinctUntilChanged","a","b","switchMap","next_page","action","data","reset","of","total","scan","acc","shareReplay","has_more_pages","length","bookings","i","subscribe","setFilters","levelsForBuilding","getValue","refresh","timeout","checkinLocker","locker","state","_asyncToGenerator","console","log","status","checkinBooking","toPromise","catch","failed","error","notifyError","notifySuccess","user_name","approveLocker","approveBooking","format","approved","rejected","rejectLocker","rejectBooking","giveAccess","_this","success","saveBooking","Booking","access","rejectAllLockers","_this2","notifyInfo","resp","openConfirmModal","title","content","icon","class","reason","Promise","all","close","static","t","i0","i1","i2","i3","core","jDH","factory","ɵfac","providedIn","tmp_3_0","level_r1","LockersTopbarComponent_mat_option_4_div_2_Template","ctx_r1","use_region","name","_r3","manageRestrictions","LockersTopbarComponent","_lockers","_route","_router","manage","is_map","setDate","o","updateZones","navigate","relativeTo","queryParams","zone_ids","ngOnInit","first","subscription","queryParamMap","params","has","split","level","levelWithID","buildings","approve","reject","url","events","open","BookingRulesModalComponent","booking","showBooking","_this3","i4","i5","VBU","selectors","features","decls","vars","consts","template","rf","ctx","$event","LockersTopbarComponent_mat_option_4_Template","LockersTopbarComponent_button_6_Template","search","tmp_0_0","LockersComponent","_state","e","NavigationEnd","url_parts","path","parts","ngOnDestroy","attrs","_c0","LockersComponent_mat_progress_bar_13_Template","_c1","_c2","_c3","date_r2","row_r3","ctx_r3","time_format","end","LockerBookingsComponent_ng_template_6_ng_container_0_ng_container_1_Template","LockerBookingsComponent_ng_template_6_ng_container_0_ng_container_2_Template","all_day","LockerBookingsComponent_ng_template_6_ng_container_0_Template","LockerBookingsComponent_ng_template_6_ng_container_1_Template","deleted","row_r5","asset_name","asset_id","row_r6","user_email","LockerBookingsComponent_ng_template_10_div_3_Template","booked_by_name","booked_by_email","row_r8","_r7","row","statusMenu_r9","row_r11","_r10","checkin","data_r12","checkinMenu_r13","_r14","loadMore","LockerBookingsComponent","duration","rejectAll","d","s","runMethod","checked_in","fn","LockerBookingsComponent_ng_template_4_Template","LockerBookingsComponent_ng_template_6_Template","LockerBookingsComponent_ng_template_8_Template","LockerBookingsComponent_ng_template_10_Template","LockerBookingsComponent_ng_template_12_Template","LockerBookingsComponent_ng_template_14_Template","LockerBookingsComponent_button_16_Template","_r1","_c8","date_template_r15","period_template_r16","user_template_r18","_c4","locker_template_r17","_c5","_c6","status_template_r19","_c7","option_template_r20","tmp_10_0","menu_r21","NewLockersComponent_mat_option_14_div_2_Template","_r4","ROUTES","component","NewLockersComponent","queryParamsHandling","NewLockersComponent_mat_option_14_Template","NewLockersComponent_ng_container_17_Template","NewLockersComponent_ng_container_18_Template","NewLockersComponent_mat_progress_bar_21_Template","tmp_1_0","children","redirectTo","LockersModule","$C","G2t","CommonModule","FormsModule","MatTabsModule","ReactiveFormsModule","UIModule","SharedExploreModule","SharedBookingsModule","FormFieldsModule","MatRadioModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/lockers/locker-state.service.ts","./apps/concierge/src/app/lockers/locker-topbar.component.ts","./apps/concierge/src/app/lockers/lockers.component.ts","./apps/concierge/src/app/lockers/locker-bookings.component.ts","./apps/concierge/src/app/lockers/new-lockers.component.ts","./apps/concierge/src/app/lockers/lockers.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    scan,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { endOfDay, format, getUnixTime, startOfDay } from 'date-fns';\n\nimport {\n    approveBooking,\n    Booking,\n    checkinBooking,\n    queryPagedBookings,\n    rejectBooking,\n    saveBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifyInfo,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { QueryResponse } from '@placeos/ts-client/dist/esm/resources/functions';\n\nexport interface LockerFilters {\n    date?: number;\n    zones?: string[];\n    show_map?: boolean;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersStateService extends AsyncHandler {\n    private _filters = new BehaviorSubject<LockerFilters>({});\n    // private _new_lockers = new BehaviorSubject<Locker[]>([]);\n    private _locker_bookings: Booking[] = [];\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter((lvl) => bld_ids.includes(lvl.parent_id));\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter((lvl) => lvl.parent_id === this._org.building.id);\n        })\n    );\n\n    // public readonly new_lockers = this._new_lockers.asObservable();\n\n    // public get new_locker_count() {\n    //     return this._new_lockers.getValue()?.length || 0;\n    // }\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    // public readonly lockers: Observable<Locker[]> = this._filters.pipe(\n    //     debounceTime(500),\n    //     switchMap((filters) => {\n    //         const zones = filters.zones || [];\n    //         return zones && !zones.includes('All')\n    //             ? showMetadata(zones[0], 'lockers').pipe(map((m) => m.details))\n    //             : listChildMetadata(this._org.building?.id, {\n    //                   name: 'lockers',\n    //               }).pipe(\n    //                   map((m) =>\n    //                       m\n    //                           .map((i) => i.metadata.lockers.details)\n    //                           .reduce((c: any[], i: any[]) => [...c, ...i], [])\n    //                   )\n    //               );\n    //     }),\n    //     catchError((_) => []),\n    //     map((list) => {\n    //         if (!(list instanceof Array)) list = [];\n    //         list.sort((a, b) => a.name?.localeCompare(b.name));\n    //         return list.map((i) => new Locker({ ...i, qr_code: '' }));\n    //     }),\n    //     shareReplay(1)\n    // );\n\n    private _next_page = new Subject<() => QueryResponse<Booking>>();\n    private _call_next_page = new Subject<string>();\n    private _all_zones_keys = ['All', -1, '-1'];\n    public readonly setup_paging = combineLatest([\n        this._filters,\n        this._org.initialised,\n    ]).pipe(\n        debounceTime(500),\n        tap(([filters, loaded]) => {\n            if (!loaded) return;\n            const date = filters.date || Date.now();\n            const zones =\n                !filters.zones ||\n                filters.zones.some((z) => this._all_zones_keys.includes(z))\n                    ? this._settings.get('app.use_region')\n                        ? [this._org.region.id]\n                        : [this._org.building.id]\n                    : filters.zones;\n            this._next_page.next(() =>\n                queryPagedBookings({\n                    period_start: getUnixTime(startOfDay(date)),\n                    period_end: getUnixTime(endOfDay(date)),\n                    type: 'locker',\n                    zones: zones.join(','),\n                    include_checked_out: true,\n                })\n            );\n            this._call_next_page.next(`RESET_${Date.now()}`);\n        })\n    );\n\n    public readonly paged_bookings = combineLatest([\n        this._next_page,\n        this._call_next_page,\n    ]).pipe(\n        distinctUntilChanged((a, b) => a[1] === b[1]),\n        switchMap(([next_page, action]) => {\n            this._loading.next(true);\n            if (!next_page) {\n                return of({\n                    data: [],\n                    total: 0,\n                    next: null,\n                    reset: action.includes('RESET'),\n                });\n            }\n            // If reset is true, start over\n            if (action.includes('RESET')) {\n                return next_page().pipe(\n                    map((data: any) => ({ ...data, reset: true }))\n                );\n            }\n            return next_page().pipe(\n                map((data: any) => ({ ...data, reset: false }))\n            );\n        }),\n        scan(\n            (acc, { data, total, next, reset }) => {\n                const list = data;\n                this._next_page.next(next); // Set the next page function\n                if (reset) return { list, total }; // Reset the items array\n                return {\n                    list: [...acc.list, ...list],\n                    total,\n                };\n            },\n            { list: [], total: 0 }\n        ),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly has_more_pages = this.paged_bookings.pipe(\n        map((_) => _.list.length < _.total)\n    );\n    public readonly bookings = this.paged_bookings.pipe(map((i) => i.list));\n\n    public nextPage() {\n        this._call_next_page.next(`NEXT_${Date.now()}`);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.setup_paging.subscribe();\n    }\n\n    public setFilters(filters: LockerFilters) {\n        if (filters.zones?.includes('All')) {\n            filters.zones = [\n                'All',\n                ...this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((lvl) => lvl.id),\n            ];\n        } else if (\n            filters.zones &&\n            this._filters.getValue()?.zones?.includes('All')\n        ) {\n            filters.zones = [];\n        }\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public refresh() {\n        this._loading.next(true);\n        this.timeout('poll', () => this.setFilters(this._filters.getValue()));\n    }\n\n    // public addLockers(list: Locker[]) {\n    //     this._new_lockers.next(this._new_lockers.getValue().concat(list));\n    // }\n\n    // public clearNewLockers() {\n    //     this._filters.next(this._filters.getValue());\n    //     this._new_lockers.next([]);\n    // }\n\n    public async checkinLocker(locker: Booking, state: boolean = true) {\n        console.log('Check-in:', locker);\n        const status: any = await checkinBooking(locker.id, state ?? true)\n            .toPromise()\n            .catch((_) => ({ failed: true, error: _ }));\n        if (status.failed) {\n            notifyError(\n                status.error\n                    ? `Error: ${status.error}`\n                    : `Error checking ${state ? 'in' : 'out'} locker booking`\n            );\n            throw status.error;\n        }\n        notifySuccess(`Checked ${state ? 'in' : 'out'} ${locker.user_name}.`);\n    }\n\n    public async approveLocker(locker: Booking) {\n        const success = await approveBooking(locker.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        if (success === 'failed') {\n            return notifyError('Error approving in locker booking');\n        }\n        notifySuccess(\n            `Approved locker booking for ${locker.user_name} on ${format(\n                locker.date,\n                'MMM do'\n            )}.`\n        );\n        (locker as any).approved = true;\n        (locker as any).rejected = false;\n    }\n\n    public async rejectLocker(locker: Booking) {\n        const success = await rejectBooking(locker.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        if (success === 'failed') {\n            return notifyError('Error rejecting in locker booking');\n        }\n        notifySuccess(\n            `Rejected locker booking for ${locker.user_name} on ${format(\n                locker.date,\n                'MMM do'\n            )}.`\n        );\n        (locker as any).approved = false;\n        (locker as any).rejected = true;\n    }\n\n    public async giveAccess(locker: Booking) {\n        const success = await saveBooking(\n            new Booking({ ...locker, access: true })\n        )\n            .toPromise()\n            .catch((_) => 'failed');\n        if (success === 'failed')\n            return notifyError('Error giving building access booking host');\n        notifySuccess(\n            `Successfully gave building access to ${locker.user_name} for locker booking.`\n        );\n        this._locker_bookings = [...this._locker_bookings, success] as any;\n    }\n\n    public async rejectAllLockers() {\n        const list = this._locker_bookings || [];\n        if (list.length <= 0)\n            return notifyInfo('No lockers to reject for the selected date');\n        const resp = await openConfirmModal(\n            {\n                title: 'Cancel all locker bookings',\n                content:\n                    'Are you sure you want to cancel all bookings for the selected date?',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Rejecting all lockers for selected date...');\n        await Promise.all(\n            list.map((locker) => rejectBooking(locker.id).toPromise())\n        );\n        notifySuccess(\n            'Successfully rejected all locker bookings for selected date.'\n        );\n        resp.close();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, map, take } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { LockersStateService } from './locker-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'lockers-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"w-60\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>{{ level.display_name || level.name }}</div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <!-- <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-36\"\n                matTooltip=\"New Locker Booking\"\n                (click)=\"newLockerBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newLocker()\"\n                matTooltip=\"New Locker\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Lockers CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Locker CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button> -->\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Locker Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class LockersTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._lockers.levels;\n    /** List of levels for the active building */\n    public readonly filters = this._lockers.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._lockers.setFilters({ date });\n    public readonly setFilters = (o) => this._lockers.setFilters(o);\n    /** Update active zones for lockers */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._lockers.setFilters({ zones: z });\n    };\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _lockers: LockersStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    // public newLocker() {\n    //     this._lockers.addLockers([\n    //         new Locker({ id: `locker-${randomInt(999_999)}` }),\n    //     ]);\n    //     notifySuccess(\n    //         'New locker added to local data. Make sure to save the locker before using it.'\n    //     );\n    // }\n\n    // public newLockerBooking() {\n    //     this._dialog.open(LockerBookModalComponent, {});\n    // }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'locker' },\n        });\n    }\n\n    // public async loadCSVData(event: InputEvent) {\n    //     const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n    //         notifyError(m);\n    //         throw e;\n    //     });\n    //     try {\n    //         const list = csvToJson(data) || [];\n    //         this._lockers.addLockers(\n    //             list.map(\n    //                 (_) =>\n    //                     new Locker({\n    //                         ..._,\n    //                         id: _.id || `locker-${randomInt(999_999)}`,\n    //                     })\n    //             )\n    //         );\n    //     } catch (e) {\n    //         console.error(e);\n    //     }\n    // }\n\n    // public downloadTemplate() {\n    //     const locker: any = new Locker({\n    //         id: 'locker-123',\n    //         name: 'Test Locker',\n    //         bookable: true,\n    //         groups: ['test-locker-group', 'locker-bookers'],\n    //         features: ['Standing Locker', 'Dual Monitor'],\n    //     }).toJSON();\n    //     const data = jsonToCsv([locker]);\n    //     downloadFile('locker-template.csv', data);\n    // }\n\n    /**\n     * Aprrove a locker booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._lockers.approveLocker(booking);\n        }\n    }\n\n    /**\n     * Reject a locker booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._lockers.rejectLocker(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { LockersStateService } from './locker-state.service';\n\n@Component({\n    selector: '[app-lockers]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-200 overflow-hidden\"\n        >\n            <lockers-topbar class=\"w-full\"></lockers-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'lockers', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'lockers', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'lockers', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Lockers\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class LockersComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: LockersStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { LockersStateService } from './locker-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'locker-bookings',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div class=\"overflow-auto h-full w-full px-4 pb-4\">\n            <simple-table\n                class=\"min-w-[76rem] block text-sm w-full\"\n                [data]=\"bookings\"\n                [columns]=\"[\n                    { key: 'date', name: 'Date', content: date_template },\n                    { key: 'period', name: 'Period', content: period_template },\n                    {\n                        key: 'user_name',\n                        name: 'Person',\n                        content: user_template\n                    },\n                    { key: 'group', name: 'Group' },\n                    {\n                        key: 'asset_name',\n                        name: 'Locker',\n                        content: locker_template\n                    },\n                    { key: 'approver_name', name: 'Approver' },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem'\n                    },\n                    {\n                        key: 'checked_in',\n                        name: 'Checked In',\n                        content: option_template,\n                        size: '5.5rem'\n                    }\n                ]\"\n                [sortable]=\"true\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching locker bookings'\n                        : 'There are no locker booking for the currently selected date.'\n                \"\n            ></simple-table>\n            <ng-template #date_template let-date=\"data\">\n                <div\n                    class=\"flex flex-col items-center justify-center w-full px-4 py-2\"\n                >\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <ng-container *ngIf=\"row.status !== 'declined' && !row.deleted\">\n                    <ng-container *ngIf=\"!row.all_day\">\n                        {{ row.date | date: time_format }} &ndash;\n                        {{ row.end | date: time_format }}\n                    </ng-container>\n                    <ng-container *ngIf=\"row.all_day\">All Day</ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"row.status === 'declined' || row.deleted\">\n                    <div\n                        class=\"text-xs py-1 px-2 bg-error rounded-2xl text-white\"\n                    >\n                        Expired\n                    </div>\n                </ng-container>\n            </ng-template>\n            <ng-template #locker_template let-row=\"row\">\n                <div class=\"p-4\">\n                    {{ row.asset_name || row.asset_id }}\n                </div>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center px-4 py-2\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <button\n                    matRipple\n                    [matMenuTriggerFor]=\"statusMenu\"\n                    class=\"rounded-3xl px-2 py-1 flex items-center space-x-2 capitalize\"\n                    [class.bg-success]=\"row.approved\"\n                    [class.text-white]=\"row.approved || row.rejected\"\n                    [class.bg-warning]=\"!row.approved && !row.rejected\"\n                    [class.text-black]=\"!row.approved && !row.rejected\"\n                    [class.bg-error]=\"row.rejected\"\n                >\n                    <div class=\"ml-2\">\n                        {{\n                            row.approved\n                                ? 'Approved'\n                                : row.rejected\n                                ? 'Declined'\n                                : 'Tentative'\n                        }}\n                    </div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #statusMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Approve Locker</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Decline Locker</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl px-2 py-1 text-white flex items-center space-x-2\"\n                    [matMenuTriggerFor]=\"checkinMenu\"\n                    [class.bg-neutral-600]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    [class.opacity-30]=\"row.status === 'ended'\"\n                    [disabled]=\"row.status === 'ended'\"\n                    [matTooltip]=\"\n                        row.status === 'ended'\n                            ? 'Locker booking has ended'\n                            : 'Check-in or check-out locker'\n                    \"\n                >\n                    <div class=\"ml-2\">{{ data ? 'Yes' : 'No' }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class LockerBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllLockers();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinLocker(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveLocker(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectLocker(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: LockersStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { LockersStateService } from './locker-state.service';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: '[app-new-lockers]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Locker Bookings</h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <!-- <button\n                        btn\n                        matRipple\n                        class=\"space-x-2\"\n                        (click)=\"newLockerBooking()\"\n                    >\n                        <div>New Booking</div>\n                        <app-icon>add</app-icon>\n                    </button> -->\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <!-- <div class=\"border-l h-full !ml-8 !mr-4\"></div> -->\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <!-- <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"newLocker()\"\n                            matTooltip=\"New Locker\"\n                        >\n                            <app-icon>add</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary relative text-white rounded\"\n                            matTooltip=\"Upload Lockers CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Locker CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button> -->\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Locker Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewLockersComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    /** Update active zones for lockers */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: LockersStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    // public newLockerBooking() {\n    //     const ref = this._dialog.open(LockerBookModalComponent, {});\n    //     ref.afterClosed().subscribe((_) => {\n    //         this._state.refresh();\n    //     });\n    // }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'locker' },\n        });\n    }\n\n    // public newLocker() {\n    //     this._state.addLockers([\n    //         new Locker({ id: `locker-${randomInt(999_999)}` }),\n    //     ]);\n    //     notifySuccess(\n    //         'New locker added to local data. Make sure to save the locker before using it.'\n    //     );\n    // }\n\n    // public downloadTemplate() {\n    //     const locker: any = new Locker({\n    //         id: 'locker-123',\n    //         name: 'Test Locker',\n    //         bookable: true,\n    //         groups: ['test-locker-group', 'locker-bookers'],\n    //         features: ['Standing Locker', 'Dual Monitor'],\n    //     }).toJSON();\n    //     const data = jsonToCsv([locker]);\n    //     downloadFile('locker-template.csv', data);\n    // }\n\n    // public async loadCSVData(event: InputEvent) {\n    //     const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n    //         notifyError(m);\n    //         throw e;\n    //     });\n    //     try {\n    //         const list = csvToJson(data) || [];\n    //         this._state.addLockers(\n    //             list.map(\n    //                 (_) =>\n    //                     new Locker({\n    //                         ..._,\n    //                         id: _.id || `locker-${randomInt(999_999)}`,\n    //                     })\n    //             )\n    //         );\n    //     } catch (e) {\n    //         console.error(e);\n    //     }\n    // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { LockersComponent } from './lockers.component';\nimport { LockerBookingsComponent } from './locker-bookings.component';\nimport { LockersTopbarComponent } from './locker-topbar.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewLockersComponent } from './new-lockers.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewLockersComponent,\n        children: [\n            { path: 'events', component: LockerBookingsComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: LockersComponent,\n        children: [\n            { path: 'events', component: LockerBookingsComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewLockersComponent,\n        LockersComponent,\n        LockerBookingsComponent,\n        LockersTopbarComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class LockersModule {}\n"],"x_google_ignoreList":[]}