{"version":3,"sources":["./apps/concierge/src/app/desks/desk-list-modal.component.ts","./node_modules/vanillaqr/VanillaQR.module.js","./libs/common/src/lib/qr-code.ts","./apps/concierge/src/app/desks/desks-state.service.ts"],"names":["filter$","DeskListModalComponent","_data","_dialog_ref","building","this","level","desks$","BehaviorSubject","desks","desk_list","combineLatest","pipe","map","details","filter","desk","name","toLowerCase","includes","id","data","getValue","i","format","csv","display_name","split","join","event","target","file","files","loading","reader","FileReader","readAsText","onload","processCSV","result","onerror","evt","description","toPromise","catch","e","message","close","next","VanillaQR","customize","scope","revision","imageTypes","toTable","domElement","document","createElement","url","size","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","version","width","neccblk1","neccblk2","datablkw","eccblkwid","strinbuf","eccbuf","qrframe","framask","rlens","genpoly","setmask","x","y","bt","putalign","j","modnn","appendrs","dlen","ecbuf","eclen","fb","gexp","glog","ismasked","applymask","m","r3x","r3y","badruns","length","runsbad","N1","N3","badcheck","h","b","b1","thisbad","bw","N2","big","count","N4","genframe","instring","k","t","v","eccblocks","slice","adelta","vpat","charCodeAt","fmtword","init","qf","tableWrite","canvasWrite","prototype","getContext","lineWidth","px","Math","round","offset","canvas","height","clearRect","fillStyle","fillRect","tdWidth","borderWidth","sideBorderWidth","tdStyle","table","style","cssText","elem","tr","td","cloneTD","cloneNode","createTDLight","appendSideBorders","row","insertNode","firstChild","insertBefore","appendChild","currentRow","darkTd","lightTD","appendBorders","innerHTML","console","log","toImage","type","dataType","Error","image","Image","src","toDataURL","generateQRCode","code","DesksStateService","_org","_dialog","super","_filters","_desk_bookings","_desks","_loading","asObservable","filters","debounceTime","switchMap","zones","metadata","reduce","c","catchError","_","list","Array","sort","a","localeCompare","qr_code","encodeURIComponent","shareReplay","bookings","date","Date","z","levelsForBuilding","period_start","floor","startOfDay","valueOf","period_end","endOfDay","extension_data","checkin_qr_code","asset_id","lvl","warn","delay","interval","setFilters","clearInterval","user_name","success","access","ref","open","title","content","icon","class","Promise","resolve","reject","componentInstance","first","reason","subscribe","all","afterClosed","levelWithID","level_list"],"mappings":"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G,GAAI,GACtD,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GACvD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GACrD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACtD,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACxD,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACvD,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACxD,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GACxD,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GACxD,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GACzD,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GACzD,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAC1D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,EAAG,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAC1D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAIhEpE,EAAU0C,KAAO,CACb,IAAM,EAAM,EAAM,GAAM,EAAM,GAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,GAAM,IAC1F,EAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,EAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC1F,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAC1F,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAC1F,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,KAI9F1C,EAAUyC,KAAO,CACb,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1F,IAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC1F,GAAM,IAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAC1F,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,GAAM,GAC1F,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,EAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAC1F,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAC1F,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,I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","file":"default-apps_concierge_src_app_desks_desks-state_service_ts.js","sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { updateMetadata } from '@placeos/ts-client';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Building, BuildingLevel, Desk } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DeskListModalData {\n    building: Building;\n    level: BuildingLevel;\n    desks: Desk[];\n}\n\n@Component({\n    selector: 'desk-list-modal',\n    template: `\n        <header class=\"flex items-center\">\n            <h2 style=\"margin-right: 1rem;\">\n                <strong>List of Desks</strong> -\n                {{ building.display_name || building.name }},\n                {{ level.display_name || level.name }}\n            </h2>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"flex flex-col\">\n                <div\n                    class=\"flex items-center p-2 space-x-2 w-full border-b border-gray-300\"\n                >\n                    <searchbar\n                        [model]=\"filter$ | async\"\n                        (modelChange)=\"filter$.next($event)\"\n                    ></searchbar>\n                    <div class=\"flex-1 w-0\"></div>\n                    <button mat-button class=\"relative\">\n                        Upload List\n                        <input\n                            type=\"file\"\n                            class=\"absolute inset-0 opacity-0\"\n                            (change)=\"upload($event)\"\n                        />\n                    </button>\n                    <button mat-button (click)=\"download()\">\n                        Download List\n                    </button>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full\">\n                    <div\n                        class=\"flex items-center p-2 border-b border-gray-300 font-medium\"\n                    >\n                        <div class=\"w-40 p-1 flex-1\" flex>ID</div>\n                        <div class=\"w-32 p-1\">Name</div>\n                        <div class=\"w-24 p-1\">Bookable</div>\n                        <div class=\"w-52 p-1\">Groups</div>\n                    </div>\n                    <div table class=\"flex-1 overflow-auto\">\n                        <div\n                            class=\"flex item-center p-2 border-b border-gray-200\"\n                            *ngFor=\"let desk of desk_list | async\"\n                        >\n                            <div class=\"w-40 p-1 flex-1\" flex>\n                                {{ desk.id }}\n                            </div>\n                            <div class=\"w-32 p-1\">{{ desk.name }}</div>\n                            <div class=\"w-24 p-1\">\n                                <mat-checkbox\n                                    [(ngModel)]=\"desk.bookable\"\n                                ></mat-checkbox>\n                            </div>\n                            <div class=\"w-52\">\n                                <item-list-field\n                                    hide-outline no-wrapper\n                                    [(ngModel)]=\"desk.groups\"\n                                ></item-list-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n            <footer\n                class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-300\"\n            >\n                <button mat-button class=\"w-32\" (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 mx-auto flex flex-col items-center justify-center\"\n            >\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                max-height: 65vh;\n            }\n\n            [table] {\n                height: 1px;\n                max-height: 50vh;\n            }\n        `,\n    ],\n})\nexport class DeskListModalComponent {\n    public readonly building = this._data.building;\n    public readonly level = this._data.level;\n    public readonly desks$ = new BehaviorSubject(this._data.desks);\n    public readonly filter$ = new BehaviorSubject('');\n\n    public loading: string;\n\n    public desk_list = combineLatest([this.filter$, this.desks$]).pipe(\n        map((details) => {\n            const [filter, desks] = details;\n            return desks.filter(\n                (desk) =>\n                    desk.name.toLowerCase().includes(filter.toLowerCase()) ||\n                    desk.id.toLowerCase().includes(filter.toLowerCase())\n            );\n        })\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskListModalData,\n        private _dialog_ref: MatDialogRef<DeskListModalComponent>\n    ) {}\n\n    /** Download Desks list */\n    public download() {\n        const data = this.desks$.getValue().map((i) => i.format());\n        const csv = jsonToCsv(data);\n        const name = this.level.display_name.split(' ').join('-').toLowerCase();\n        downloadFile(`desks_${name}.csv`, csv);\n    }\n\n    /** Upload Desks list from csv */\n    public upload(event) {\n        if (event.target) {\n            const file = event.target.files[0];\n            if (file) {\n                this.loading = 'Uploading...';\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.onload = () => {\n                    this.processCSV(reader.result as string);\n                    this.loading = '';\n                };\n                reader.onerror = (evt) => {\n                    this.loading = '';\n                    notifyError('Error reading file.');\n                };\n            }\n        }\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        await updateMetadata(this.level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: this.desks$.getValue(),\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this.loading = '';\n        this._dialog_ref.close();\n    }\n\n    /** Process csv */\n    private processCSV(csv: string) {\n        const data = csvToJson(csv);\n        this.desks$.next(data.map((i) => new Desk(i)));\n        notifySuccess(\n            'Upload was sucessful. Click Save Button to save the changes'\n        );\n    }\n}\n","//https://github.com/chuckfairy/VanillaQR.js\n//VanillaQR Function constructor\n//pass an object with customizable options\n//url, colorLight, colorDark, width, height\nfunction VanillaQR ( customize ) {\n\n    var scope = this;\n\n    customize = typeof(customize) === \"object\" ? customize : {};\n\n    /********************PUBLICS********************/\n\n    scope.revision = 3;\n\n    //canvas output types\n    scope.imageTypes = {\n        \"bmp\"    : \"image/bmp\",\n        \"gif\"    : \"image/gif\",\n        \"jpeg\"   : \"image/jpeg\",\n        \"jpg\"    : \"image/jpg\",\n        \"png\"    : \"image/png\",\n        \"svg+xml\": \"image/svg+xml\",\n        \"tiff\"   : \"image/tiff\",\n        \"webp\"   : \"image/webp\",\n        \"x-icon\" : \"image/x-icon\"\n    };\n\n    //toTable use will default if no canvas support\n    scope.toTable = customize.toTable;\n\n    //qr active domElement\n    scope.domElement = (scope.toTable) ?\n        document.createElement(\"div\"):\n        document.createElement(\"canvas\");\n\n    //QR url\n    scope.url = customize.url || \"\";\n\n    //Canvas and qr width and height\n    scope.size  = (customize.size  || 280);\n\n    //QR context\n    scope.qrc = false;\n\n    //QR colors\n    scope.colorLight = customize.colorLight || '#fff';\n    scope.colorDark = customize.colorDark || \"#000\";\n\n    //Correction level\n    scope.ecclevel = customize.ecclevel || 1;\n\n    //Border related\n    scope.noBorder = customize.noBorder;\n    scope.borderSize = customize.borderSize || 4;\n\n\n    /********************PRIVATES********************/\n\n\t// Set data values\n\t// Working buffers:\n\tvar strinbuf = [];\n\tvar eccbuf   = [];\n\tvar qrframe  = [];\n\tvar framask  = [];\n\tvar rlens    = [];\n\tvar genpoly  = [];\n\n\t// Control values - width is based on version, last 4 are from table.\n\tvar ecclevel;\n\tvar version;\n\tvar width;\n\tvar neccblk1;\n\tvar neccblk2;\n\tvar datablkw;\n\tvar eccblkwid;\n\n\n    /********************QR Creator API********************/\n\n    // set bit to indicate cell in qrframe is immutable\n    var setmask = function ( x, y ) {\n\n        var bt;\n        if (x > y) {\n            bt = x;\n            x = y;\n            y = bt;\n        }\n        // y*y = 1+3+5...\n        bt = y;\n        bt *= y;\n        bt += y;\n        bt >>= 1;\n        bt += x;\n        framask[bt] = 1;\n\n    };\n\n    //black to qrframe, white to mask (later black frame merged to mask)\n    var putalign = function ( x, y ) {\n\n        var j;\n\n        qrframe[x + width * y] = 1;\n        for (j = -2; j < 2; j++) {\n            qrframe[(x + j) + width * (y - 2)] = 1;\n            qrframe[(x - 2) + width * (y + j + 1)] = 1;\n            qrframe[(x + 2) + width * (y + j)] = 1;\n            qrframe[(x + j + 1) + width * (y + 2)] = 1;\n        }\n        for (j = 0; j < 2; j++) {\n            setmask(x - 1, y + j);\n            setmask(x + 1, y - j);\n            setmask(x - j, y - 1);\n            setmask(x + j, y + 1);\n        }\n    }\n\n    //Bit shift modnn\n    var modnn = function(x) {\n\n        while (x >= 255) {\n            x -= 255;\n            x = (x >> 8) + (x & 255);\n        }\n\n        return x;\n\n    };\n\n    // Calculate and append ECC data to data block.  Block is in strinbuf, indexes to buffers given.\n    var appendrs = function ( data, dlen, ecbuf, eclen ) {\n\n        var i, j, fb;\n        var gexp = VanillaQR.gexp;\n        var glog = VanillaQR.glog;\n\n        for (i = 0; i < eclen; i++)\n            strinbuf[ecbuf + i] = 0;\n        for (i = 0; i < dlen; i++) {\n            fb = glog[strinbuf[data + i] ^ strinbuf[ecbuf]];\n            if (fb != 255)     /* fb term is non-zero */\n                for (j = 1; j < eclen; j++)\n                    strinbuf[ecbuf + j - 1] = strinbuf[ecbuf + j] ^ gexp[modnn(fb + genpoly[eclen - j])];\n            else\n                for( j = ecbuf ; j < ecbuf + eclen; j++ )\n                    strinbuf[j] = strinbuf[j + 1];\n            strinbuf[ ecbuf + eclen - 1] = fb == 255 ? 0 : gexp[modnn(fb + genpoly[0])];\n        }\n\n    };\n\n    // check mask - since symmetrical use half.\n    var ismasked = function(x, y) {\n\n        var bt;\n        if (x > y) {\n            bt = x;\n            x = y;\n            y = bt;\n        }\n        bt = y;\n        bt += y * y;\n        bt >>= 1;\n        bt += x;\n        return framask[bt];\n\n    };\n\n    //  Apply the selected mask out of the 8.\n    var applymask = function(m) {\n\n        var x, y, r3x, r3y;\n\n        switch (m) {\n        case 0:\n            for (y = 0; y < width; y++)\n                for (x = 0; x < width; x++)\n                    if (!((x + y) & 1) && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n            break;\n        case 1:\n            for (y = 0; y < width; y++)\n                for (x = 0; x < width; x++)\n                    if (!(y & 1) && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n            break;\n        case 2:\n            for (y = 0; y < width; y++)\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3)\n                        r3x = 0;\n                    if (!r3x && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            break;\n        case 3:\n            for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y == 3)\n                    r3y = 0;\n                for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3)\n                        r3x = 0;\n                    if (!r3x && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            }\n            break;\n        case 4:\n            for (y = 0; y < width; y++)\n                for (r3x = 0, r3y = ((y >> 1) & 1), x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3) {\n                        r3x = 0;\n                        r3y = !r3y;\n                    }\n                    if (!r3y && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            break;\n        case 5:\n            for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y == 3)\n                    r3y = 0;\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3)\n                        r3x = 0;\n                    if (!((x & y & 1) + !(!r3x | !r3y)) && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            }\n            break;\n        case 6:\n            for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y == 3)\n                    r3y = 0;\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3)\n                        r3x = 0;\n                    if (!(((x & y & 1) + (r3x && (r3x == r3y))) & 1) && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            }\n            break;\n        case 7:\n            for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y == 3)\n                    r3y = 0;\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                    if (r3x == 3)\n                        r3x = 0;\n                    if (!(((r3x && (r3x == r3y)) + ((x + y) & 1)) & 1) && !ismasked(x, y))\n                        qrframe[x + y * width] ^= 1;\n                }\n            }\n            break;\n        }\n\n    };\n\n    // Using the table of the length of each run, calculate the amount of bad image\n    // - long runs or those that look like finders; called twice, once each for X and Y\n    var badruns = function(length) {\n\n        var i;\n        var runsbad = 0;\n        for (i = 0; i <= length; i++)\n            if (rlens[i] >= 5)\n                runsbad += VanillaQR.N1 + rlens[i] - 5;\n        // BwBBBwB as in finder\n        for (i = 3; i < length - 1; i += 2)\n            if (rlens[i - 2] == rlens[i + 2]\n                && rlens[i + 2] == rlens[i - 1]\n                && rlens[i - 1] == rlens[i + 1]\n                && rlens[i - 1] * 3 == rlens[i]\n                // white around the black pattern? Not part of spec\n                && (rlens[i - 3] == 0 // beginning\n                    || i + 3 > length  // end\n                    || rlens[i - 3] * 3 >= rlens[i] * 4 || rlens[i + 3] * 3 >= rlens[i] * 4)\n               )\n                runsbad += VanillaQR.N3;\n        return runsbad;\n\n    };\n\n    // Calculate how bad the masked image is - blocks, imbalance, runs, or finders.\n    var badcheck = function() {\n\n        var x, y, h, b, b1;\n        var thisbad = 0;\n        var bw = 0;\n\n        // blocks of same color.\n        for (y = 0; y < width - 1; y++) {\n            for (x = 0; x < width - 1; x++) {\n                if ((qrframe[x + width * y] && qrframe[(x + 1) + width * y]\n                     && qrframe[x + width * (y + 1)] && qrframe[(x + 1) + width * (y + 1)]) // all black\n                    || !(qrframe[x + width * y] || qrframe[(x + 1) + width * y]\n                         || qrframe[x + width * (y + 1)] || qrframe[(x + 1) + width * (y + 1)])) // all white\n                    thisbad += VanillaQR.N2;\n            }\n        }\n\n        // X runs\n        for (y = 0; y < width; y++) {\n            rlens[0] = 0;\n            for (h = b = x = 0; x < width; x++) {\n                if ((b1 = qrframe[x + width * y]) == b)\n                    rlens[h]++;\n                else\n                    rlens[++h] = 1;\n                b = b1;\n                bw += b ? 1 : -1;\n            }\n\n            thisbad += badruns(h);\n\n        }\n\n        // black/white imbalance\n        if (bw < 0)\n            bw = -bw;\n\n        var big = bw;\n        var count = 0;\n        big += big << 2;\n        big <<= 1;\n        while (big > width * width)\n            big -= width * width, count++;\n        thisbad += count * VanillaQR.N4;\n\n        // Y runs\n        for (x = 0; x < width; x++) {\n            rlens[0] = 0;\n            for (h = b = y = 0; y < width; y++) {\n                if ((b1 = qrframe[x + width * y]) == b)\n                    rlens[h]++;\n                else\n                    rlens[++h] = 1;\n                b = b1;\n            }\n            thisbad += badruns(h);\n        }\n\n        return thisbad;\n\n    };\n\n    //Generate QR frame array\n    scope.genframe = function(instring) {\n\n        var eccblocks = VanillaQR.eccblocks;\n        var gexp = VanillaQR.gexp;\n        var glog = VanillaQR.glog;\n\n        var x, y, k, t, v, i, j, m;\n\n    // find the smallest version that fits the string\n        t = instring.length;\n        version = 0;\n        do {\n            version++;\n            k = (ecclevel - 1) * 4 + (version - 1) * 16;\n            neccblk1 = eccblocks[k++];\n            neccblk2 = eccblocks[k++];\n            datablkw = eccblocks[k++];\n            eccblkwid = eccblocks[k];\n            k = datablkw * (neccblk1 + neccblk2) + neccblk2 - 3 + (version <= 9);\n            if (t <= k)\n                break;\n        } while (version < 40);\n\n    // FIXME - insure that it fits insted of being truncated\n        width = 17 + 4 * version;\n\n    // allocate, clear and setup data structures\n        v = datablkw + (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;\n        for( t = 0; t < v; t++ )\n            eccbuf[t] = 0;\n        strinbuf = instring.slice(0);\n\n        for( t = 0; t < width * width; t++ )\n            qrframe[t] = 0;\n\n        for( t = 0 ; t < (width * (width + 1) + 1) / 2; t++)\n            framask[t] = 0;\n\n    // insert finders - black to frame, white to mask\n\n        for (t = 0; t < 3; t++) {\n            k = 0;\n            y = 0;\n            if (t == 1)\n                k = (width - 7);\n            if (t == 2)\n                y = (width - 7);\n            qrframe[(y + 3) + width * (k + 3)] = 1;\n            for (x = 0; x < 6; x++) {\n                qrframe[(y + x) + width * k] = 1;\n                qrframe[y + width * (k + x + 1)] = 1;\n                qrframe[(y + 6) + width * (k + x)] = 1;\n                qrframe[(y + x + 1) + width * (k + 6)] = 1;\n            }\n            for (x = 1; x < 5; x++) {\n                setmask(y + x, k + 1);\n                setmask(y + 1, k + x + 1);\n                setmask(y + 5, k + x);\n                setmask(y + x + 1, k + 5);\n            }\n            for (x = 2; x < 4; x++) {\n                qrframe[(y + x) + width * (k + 2)] = 1;\n                qrframe[(y + 2) + width * (k + x + 1)] = 1;\n                qrframe[(y + 4) + width * (k + x)] = 1;\n                qrframe[(y + x + 1) + width * (k + 4)] = 1;\n            }\n        }\n\n    // alignment blocks\n        if (version > 1) {\n\n            t = VanillaQR.adelta[version];\n            y = width - 7;\n            for (;;) {\n                x = width - 7;\n                while (x > t - 3) {\n                    putalign(x, y);\n                    if (x < t)\n                        break;\n                    x -= t;\n                }\n                if (y <= t + 9)\n                    break;\n                y -= t;\n                putalign(6, y);\n                putalign(y, 6);\n            }\n        }\n\n    // single black\n        qrframe[8 + width * (width - 8)] = 1;\n\n    // timing gap - mask only\n        for (y = 0; y < 7; y++) {\n            setmask(7, y);\n            setmask(width - 8, y);\n            setmask(7, y + width - 7);\n        }\n        for (x = 0; x < 8; x++) {\n            setmask(x, 7);\n            setmask(x + width - 8, 7);\n            setmask(x, width - 8);\n        }\n\n    // reserve mask-format area\n        for (x = 0; x < 9; x++)\n            setmask(x, 8);\n        for (x = 0; x < 8; x++) {\n            setmask(x + width - 8, 8);\n            setmask(8, x);\n        }\n        for (y = 0; y < 7; y++)\n            setmask(8, y + width - 7);\n\n    // timing row/col\n        for (x = 0; x < width - 14; x++)\n            if (x & 1) {\n                setmask(8 + x, 6);\n                setmask(6, 8 + x);\n            }\n            else {\n                qrframe[(8 + x) + width * 6] = 1;\n                qrframe[6 + width * (8 + x)] = 1;\n            }\n\n    // version block\n        if (version > 6) {\n            t = VanillaQR.vpat[version - 7];\n            k = 17;\n            for (x = 0; x < 6; x++)\n                for (y = 0; y < 3; y++, k--)\n                    if (1 & (k > 11 ? version >> (k - 12) : t >> k)) {\n                        qrframe[(5 - x) + width * (2 - y + width - 11)] = 1;\n                        qrframe[(2 - y + width - 11) + width * (5 - x)] = 1;\n                    }\n            else {\n                setmask(5 - x, 2 - y + width - 11);\n                setmask(2 - y + width - 11, 5 - x);\n            }\n        }\n\n    // sync mask bits - only set above for white spaces, so add in black bits\n        for (y = 0; y < width; y++)\n            for (x = 0; x <= y; x++)\n                if (qrframe[x + width * y])\n                    setmask(x, y);\n\n    // convert string to bitstream\n    // 8 bit data to QR-coded 8 bit data (numeric or alphanum, or kanji not supported)\n        v = strinbuf.length;\n\n    // string to array\n        for( i = 0 ; i < v; i++ )\n            eccbuf[i] = strinbuf.charCodeAt(i);\n        strinbuf = eccbuf.slice(0);\n\n    // calculate max string length\n        x = datablkw * (neccblk1 + neccblk2) + neccblk2;\n        if (v >= x - 2) {\n            v = x - 2;\n            if (version > 9)\n                v--;\n        }\n\n    // shift and repack to insert length prefix\n        i = v;\n        if (version > 9) {\n            strinbuf[i + 2] = 0;\n            strinbuf[i + 3] = 0;\n            while (i--) {\n                t = strinbuf[i];\n                strinbuf[i + 3] |= 255 & (t << 4);\n                strinbuf[i + 2] = t >> 4;\n            }\n            strinbuf[2] |= 255 & (v << 4);\n            strinbuf[1] = v >> 4;\n            strinbuf[0] = 0x40 | (v >> 12);\n        }\n        else {\n            strinbuf[i + 1] = 0;\n            strinbuf[i + 2] = 0;\n            while (i--) {\n                t = strinbuf[i];\n                strinbuf[i + 2] |= 255 & (t << 4);\n                strinbuf[i + 1] = t >> 4;\n            }\n            strinbuf[1] |= 255 & (v << 4);\n            strinbuf[0] = 0x40 | (v >> 4);\n        }\n    // fill to end with pad pattern\n        i = v + 3 - (version < 10);\n        while (i < x) {\n            strinbuf[i++] = 0xec;\n            // buffer has room    if (i == x)      break;\n            strinbuf[i++] = 0x11;\n        }\n\n    // calculate and append ECC\n\n    // calculate generator polynomial\n\n\n        genpoly[0] = 1;\n        for (i = 0; i < eccblkwid; i++) {\n            genpoly[i + 1] = 1;\n            for (j = i; j > 0; j--)\n                genpoly[j] = genpoly[j]\n                ? genpoly[j - 1] ^ gexp[modnn(glog[genpoly[j]] + i)] : genpoly[j - 1];\n            genpoly[0] = gexp[modnn(glog[genpoly[0]] + i)];\n        }\n        for (i = 0; i <= eccblkwid; i++)\n            genpoly[i] = glog[genpoly[i]]; // use logs for genpoly[] to save calc step\n\n    // append ecc to data buffer\n        k = x;\n        y = 0;\n        for (i = 0; i < neccblk1; i++) {\n            appendrs(y, datablkw, k, eccblkwid);\n            y += datablkw;\n            k += eccblkwid;\n        }\n        for (i = 0; i < neccblk2; i++) {\n            appendrs(y, datablkw + 1, k, eccblkwid);\n            y += datablkw + 1;\n            k += eccblkwid;\n        }\n\n    // interleave blocks\n        y = 0;\n        for (i = 0; i < datablkw; i++) {\n            for (j = 0; j < neccblk1; j++)\n                eccbuf[y++] = strinbuf[i + j * datablkw];\n            for (j = 0; j < neccblk2; j++)\n                eccbuf[y++] = strinbuf[(neccblk1 * datablkw) + i + (j * (datablkw + 1))];\n        }\n        for (j = 0; j < neccblk2; j++)\n            eccbuf[y++] = strinbuf[(neccblk1 * datablkw) + i + (j * (datablkw + 1))];\n        for (i = 0; i < eccblkwid; i++)\n            for (j = 0; j < neccblk1 + neccblk2; j++)\n                eccbuf[y++] = strinbuf[x + i + j * eccblkwid];\n        strinbuf = eccbuf;\n\n    // pack bits into frame avoiding masked area.\n        x = y = width - 1;\n        k = v = 1;         // up, minus\n        /* inteleaved data and ecc codes */\n        m = (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;\n        for (i = 0; i < m; i++) {\n            t = strinbuf[i];\n            for (j = 0; j < 8; j++, t <<= 1) {\n                if (0x80 & t)\n                    qrframe[x + width * y] = 1;\n                do {        // find next fill position\n                    if (v)\n                        x--;\n                    else {\n                        x++;\n                        if (k) {\n                            if (y != 0)\n                                y--;\n                            else {\n                                x -= 2;\n                                k = !k;\n                                if (x == 6) {\n                                    x--;\n                                    y = 9;\n                                }\n                            }\n                        }\n                        else {\n                            if (y != width - 1)\n                                y++;\n                            else {\n                                x -= 2;\n                                k = !k;\n                                if (x == 6) {\n                                    x--;\n                                    y -= 8;\n                                }\n                            }\n                        }\n                    }\n                    v = !v;\n                } while (ismasked(x, y));\n            }\n        }\n\n    // save pre-mask copy of frame\n        strinbuf = qrframe.slice(0);\n        t = 0;           // best\n        y = 30000;         // demerit\n    // for instead of while since in original arduino code\n    // if an early mask was \"good enough\" it wouldn't try for a better one\n    // since they get more complex and take longer.\n        for (k = 0; k < 8; k++) {\n\n            // returns black-white imbalance\n            applymask(k);\n            x = badcheck();\n\n            if (x < y) { // current mask better than previous best?\n                y = x;\n                t = k;\n            }\n            if (t == 7)\n                break;       // don't increment i to a void redoing mask\n            qrframe = strinbuf.slice(0); // reset for next pass\n        }\n        if (t != k)         // redo best mask - none good enough, last wasn't t\n            applymask(t);\n\n    // add in final mask/ecclevel bytes\n        y = VanillaQR.fmtword[t + ((ecclevel - 1) << 3)];\n        // low byte\n        for (k = 0; k < 8; k++, y >>= 1)\n            if (y & 1) {\n                qrframe[(width - 1 - k) + width * 8] = 1;\n                if (k < 6)\n                    qrframe[8 + width * k] = 1;\n                else\n                    qrframe[8 + width * (k + 1)] = 1;\n            }\n        // high byte\n        for (k = 0; k < 7; k++, y >>= 1)\n            if (y & 1) {\n                qrframe[8 + width * (width - 7 + k)] = 1;\n                if (k)\n                    qrframe[(6 - k) + width * 8] = 1;\n                else\n                    qrframe[7 + width * 8] = 1;\n            }\n\n    // return image\n        return qrframe;\n    };\n\n    //Initialize QR Code\n    scope.init = function() {\n\n        ecclevel = scope.ecclevel;\n        var qf = scope.genframe(scope.url);\n\n        if(scope.toTable) {\n\n            scope.tableWrite(qf, width);\n\n        } else {\n\n            scope.canvasWrite(qf, width);\n\n        }\n\n    };\n\n    //Auto initialize\n    scope.init();\n\n}\n\n//Get canvas 2D Context\nVanillaQR.prototype = {\n\n    //Canvas create\n    canvasWrite: function(qf, width) {\n\n        var scope = this;\n\n        //Get context and proceed if it is allowed\n        if(!scope.qrc) {\n\n            scope.qrc = scope.getContext(scope.domElement);\n\n            //No canvas support default to Table\n            if(!scope.qrc) {\n                scope.toTable = true;\n                scope.domElement = document.createElement(\"div\");\n                scope.tableWrite(qf, width);\n                return;\n            }\n\n        }\n\n        //Setup canvas context\n        var size = scope.size;\n        var qrc = scope.qrc;\n\n        qrc.lineWidth=1;\n\n        var px = size;\n        px /= width + 10;\n        px=Math.round(px - 0.5);\n\n        var offset = 4;\n\n        if (scope.noBorder) {\n            qrc.canvas.width = qrc.canvas.height = px * width;\n            offset = 0;\n        }\n        else {\n            qrc.canvas.width = qrc.canvas.height = size;\n        }\n\n        //Fill canvas with set colors\n        qrc.clearRect( 0, 0, size, size );\n        qrc.fillStyle = scope.colorLight;\n        qrc.fillRect(0, 0, px*(width+8), px*(width+8));\n        qrc.fillStyle = scope.colorDark;\n\n        //Write boxes per row\n        for( var i = 0; i < width; i++ ) {\n\n            for( var j = 0; j < width; j++ ) {\n                if( qf[j*width+i] ) {\n                    qrc.fillRect(px*(offset+i),px*(offset+j),px,px);\n                }\n             }\n\n         }\n\n    },\n\n    //Table write qr code\n    tableWrite: function(qf, width) {\n\n        var scope = this;\n\n        //Table style\n        var collapseStyle = \"border:0;border-collapse:collapse;\";\n        var tdWidth = Math.round((this.size / width) - 3.5) + \"px\";\n        var borderWidth = width + ( ( scope.noBorder ) ? 0 : ( scope.borderSize * 2 ) );\n        var sideBorderWidth = scope.borderSize;\n        var tdStyle = \"width:\" + tdWidth + \";height:\" + tdWidth + \";\";\n\n        var colorLight = scope.colorLight;\n        var colorDark = scope.colorDark;\n\n        //Table elements\n        var table = document.createElement(\"table\");\n        table.style.cssText = collapseStyle;\n\n        var tr = document.createElement(\"tr\");\n        var td = document.createElement(\"td\");\n\n        //Cloning and creating table Elements\n        var cloneTD = function() { return td.cloneNode(); };\n\n        var createTDDark = function() {\n            var elem = cloneTD();\n            elem.style.cssText = tdStyle + \"background:\" + colorDark;\n            return elem;\n        };\n\n        var createTDLight = function() {\n            var elem = cloneTD();\n            elem.style.cssText = tdStyle + \"background:\" + colorLight;\n            return elem;\n        }\n\n\n        //Regular borders appending\n        var appendBorders = function( table ) {\n\n            var insertNode = table.firstChild;\n\n            for( var i = 0; i < scope.borderSize; i ++ ) {\n\n                var row = tr.cloneNode();\n\n                for( var t = 0; t < borderWidth; t++ ) {\n                    var lightTD = createTDLight();\n                    row.appendChild(lightTD);\n                }\n\n                table.appendChild( row );\n                table.insertBefore( row.cloneNode( true ), insertNode );\n\n            }\n\n        }\n\n\n        //Create side border\n        var appendSideBorders = function( row ) {\n\n            var insertNode = row.firstChild;\n\n            for( var i = 0; i < sideBorderWidth; i ++ ) {\n\n                row.insertBefore( createTDLight(), insertNode );\n\n                row.appendChild(createTDLight());\n\n            }\n\n        };\n\n        //Write boxes per row\n        for( var i = 0; i < width; i++ ) {\n\n            var currentRow = tr.cloneNode();\n            table.appendChild(currentRow);\n\n            for( var j = 0; j < width; j++ ) {\n\n                //Is a dark color\n                if( qf[ (i*width) + j ] === 1 ) {\n                    var darkTd = createTDDark();\n                    currentRow.appendChild(darkTd);\n                }\n\n                //Light color\n                else {\n                    var lightTD = createTDLight();\n                    currentRow.appendChild(lightTD);\n                }\n\n            }\n\n            if( !scope.noBorder ) {\n\n                appendSideBorders(currentRow);\n\n            }\n\n        }\n\n        if( !scope.noBorder ) {\n\n            appendBorders( table );\n\n        }\n\n         scope.domElement.innerHTML = \"\";\n         scope.domElement.appendChild(table);\n\n    },\n\n    //get domElement 2D  Context\n    getContext: function(domElement) {\n\n        //try to get 2d context error\n        if(!(domElement.getContext && domElement.getContext('2d'))) {\n\n            console.log(\"Browser does not have 2d Canvas support\");\n            return false;\n\n        }\n\n        return domElement.getContext('2d');\n\n    },\n\n    //QR frame to image type\n    toImage: function(type) {\n\n        if(!this.qrc) {return;}\n\n        //Check image output type\n        var dataType = this.imageTypes[type];\n        if(!dataType) {\n            throw new Error(type + \" is not a valid image type \");\n        }\n\n        //create image with src of QR code\n    \tvar image = new Image;\n    \timage.src = this.domElement.toDataURL(dataType);\n    \treturn image;\n\n    }\n\n};\n\n\n// Private variables\n// alignment pattern\nVanillaQR.adelta = [\n  0, 11, 15, 19, 23, 27, 31, // force 1 pat\n  16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\n  26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\n];\n\n// version block\nVanillaQR.vpat = [\n    0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d,\n    0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9,\n    0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75,\n    0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64,\n    0x541, 0xc69\n];\n\n// final format bits with mask: level << 3 | mask\nVanillaQR.fmtword = [\n    0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,    //L\n    0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,    //M\n    0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,    //Q\n    0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b    //H\n];\n\n// 4 per version: number of blocks 1,2; data width; ecc width\nVanillaQR.eccblocks = [\n    1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17,\n    1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28,\n    1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22,\n    1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16,\n    1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22,\n    2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28,\n    2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26,\n    2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26,\n    2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24,\n    2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28,\n    4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24,\n    2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28,\n    4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22,\n    3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24,\n    5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24,\n    5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30,\n    1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28,\n    5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28,\n    3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26,\n    3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28,\n    4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30,\n    2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24,\n    4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30,\n    6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30,\n    8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30,\n    10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30,\n    8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30,\n    3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30,\n    7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30,\n    5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30,\n    13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30,\n    17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30,\n    17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30,\n    13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30,\n    12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30,\n    6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30,\n    17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30,\n    4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30,\n    20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30,\n    19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30\n];\n\n// Galois field log table\nVanillaQR.glog = [\n    0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\n    0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\n    0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\n    0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\n    0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\n    0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\n    0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\n    0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\n    0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\n    0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\n    0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\n    0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\n    0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\n    0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\n    0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\n    0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\n];\n\n// Galios field exponent table\nVanillaQR.gexp = [\n    0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\n    0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\n    0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\n    0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\n    0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\n    0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\n    0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\n    0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\n    0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\n    0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\n    0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\n    0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\n    0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\n    0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\n    0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\n    0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\n];\n\n// Badness coefficients.\nVanillaQR.N1 = 3;\nVanillaQR.N2 = 3;\nVanillaQR.N3 = 40;\nVanillaQR.N4 = 10;\n\n/**\n * Module loading footer\n */\n\nexport default VanillaQR;\n","import VanillaQR from 'vanillaqr/VanillaQR.module';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string) {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight: '#ffffff',\n        colorDark: '#000000',\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nimport {\n    approveBooking,\n    Booking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    saveBooking,\n} from '@placeos/bookings';\nimport {\n    BaseClass,\n    notifyError,\n    notifyInfo,\n    notifySuccess,\n} from '@placeos/common';\nimport { listChildMetadata, showMetadata } from '@placeos/ts-client';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmModalComponent } from '@placeos/components';\nimport { DeskListModalComponent } from './desk-list-modal.component';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nexport interface DeskFilters {\n    date?: number;\n    zones?: string[];\n    show_map?: boolean;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksStateService extends BaseClass {\n    private _filters = new BehaviorSubject<DeskFilters>({});\n    private _desk_bookings: Booking[] = [];\n    private _desks: Desk[] = [];\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly desks: Observable<Desk[]> = this._filters.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            const zones = filters.zones || [];\n            return !zones.includes('All')\n                ? showMetadata(zones[0], {\n                      name: 'desks',\n                  }).pipe(map((m) => m.details))\n                : listChildMetadata(this._org.building?.id, {\n                      name: 'desks',\n                  }).pipe(\n                      map((m) =>\n                          m\n                              .map((i) => i.metadata.desks.details)\n                              .reduce((c: any[], i: any[]) => [...c, ...i], [])\n                      )\n                  );\n        }),\n        catchError((_) => []),\n        map((list) => {\n            if (!(list instanceof Array)) list = [];\n            list.sort((a, b) => a.name.localeCompare(b.name));\n            this._desks = list.map(\n                (i) =>\n                    new Desk({\n                        ...i,\n                        qr_code: generateQRCode(\n                            `/workplace/#/book/code?checkin=${encodeURIComponent(\n                                i.id\n                            )}`\n                        ),\n                    })\n            );\n            return this._desks;\n        }),\n        shareReplay()\n    );\n\n    public readonly bookings = this._filters.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            let zones = (filters.zones || []).filter(\n                (z: any) => z !== -1 && z !== '-1' && z !== 'All'\n            );\n            if (!zones?.length) {\n                zones = this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((i) => i.id);\n            }\n            return queryBookings({\n                period_start: Math.floor(startOfDay(date).valueOf() / 1000),\n                period_end: Math.floor(endOfDay(date).valueOf() / 1000),\n                type: 'desk',\n                zones: (zones || []).join(','),\n            });\n        }),\n        map((list) => {\n            list.sort((a, b) => a.date - b.date);\n            this._desk_bookings = list.map(\n                (_) =>\n                    new Booking({\n                        ..._,\n                        extension_data: {\n                            ..._.extension_data,\n                            checkin_qr_code: generateQRCode(\n                                `/workplace/#/book/code?checkin=${encodeURIComponent(\n                                    _.asset_id\n                                )}`\n                            ),\n                        },\n                    })\n            );\n            this._loading.next(false);\n            return list;\n        }),\n        shareReplay()\n    );\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public setFilters(filters: DeskFilters) {\n        if (filters.zones?.includes('All')) {\n            filters.zones = [\n                'All',\n                ...this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((lvl) => lvl.id),\n            ];\n        } else if (\n            filters.zones &&\n            this._filters.getValue()?.zones?.includes('All')\n        ) {\n            filters.zones = [];\n        }\n        console.warn('Filters:', filters);\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval(\n            'poll',\n            () => this.setFilters(this._filters.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkinDesk(desk: Booking) {\n        const success = await checkinBooking(desk.id, true)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error checking in desk booking')\n            : notifySuccess(`Checked in ${desk.user_name}.`);\n    }\n\n    public async approveDesk(desk: Booking) {\n        const success = await approveBooking(desk.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error approving in desk booking')\n            : notifySuccess(\n                  `Approved desk booking for ${desk.user_name} on ${format(\n                      desk.date,\n                      'MMM Do'\n                  )}.`\n              );\n    }\n\n    public async rejectDesk(desk: Booking) {\n        const success = await rejectBooking(desk.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error rejecting in desk booking')\n            : notifySuccess(\n                  `Rejected desk booking for ${desk.user_name} on ${format(\n                      desk.date,\n                      'MMM Do'\n                  )}.`\n              );\n    }\n\n    public async giveAccess(desk: Booking) {\n        const success = await saveBooking(\n            new Booking({ ...desk, access: true })\n        )\n            .toPromise()\n            .catch((_) => 'failed');\n        if (success === 'failed')\n            return notifyError('Error giving building access booking host');\n        notifySuccess(\n            `Successfully gave building access to ${desk.user_name} for desk booking.`\n        );\n        this._desk_bookings = [...this._desk_bookings, success] as any;\n    }\n\n    public async rejectAllDesks() {\n        const list = this._desk_bookings || [];\n        if (list.length > 0) {\n            const ref = this._dialog.open(ConfirmModalComponent, {\n                data: {\n                    title: 'Cancel all desk bookings',\n                    content:\n                        'Are you sure you want to cancel all bookings for the selected date?',\n                    icon: {\n                        type: 'icon',\n                        class: 'material-icons',\n                        content: 'delete',\n                    },\n                },\n            });\n            return new Promise(async (resolve, reject) => {\n                let success = false;\n                ref.componentInstance.event\n                    .pipe(first((_) => _.reason === 'done'))\n                    .subscribe(async () => {\n                        ref.componentInstance.loading =\n                            'Rejecting all desks for selected date...';\n                        success = true;\n                        await Promise.all(\n                            list.map((desk) =>\n                                rejectBooking(desk.id).toPromise()\n                            )\n                        );\n                        resolve('');\n                        notifySuccess(\n                            'Successfull rejected all desk bookings for selected date.'\n                        );\n                        ref.close();\n                    });\n                await ref.afterClosed().toPromise();\n                if (!success) {\n                    reject();\n                }\n            });\n        } else {\n            notifyInfo('No desks to reject for the selected date');\n        }\n    }\n\n    public async updateDesks() {\n        const ref = this._dialog.open(DeskListModalComponent, {\n            data: {\n                level:\n                    this._org.levelWithID(this._filters.getValue().zones) ||\n                    this._org.level_list[0],\n                building: this._org.building,\n                desks: this._desks,\n            },\n        });\n        await ref.afterClosed().toPromise();\n        this._desks = ref.componentInstance.desks$.getValue();\n    }\n}\n"],"sourceRoot":"webpack:///"}