{"version":3,"sources":["./src/app/day-view/booking-modal.component.ts","./src/app/day-view/events-state.service.ts","./src/app/day-view/event-form.component.ts"],"names":[],"mappings":"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","file":"default~day-view-day-view-module~facilities-facilities-module.js","sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CalendarService } from '@user-interfaces/calendar';\nimport { DialogEvent, notifyError, notifySuccess } from '@user-interfaces/common';\nimport {\n    CalendarEvent,\n    EventsService,\n    generateEventForm,\n} from '@user-interfaces/events';\n\nexport interface BookingModalData {\n    event?: CalendarEvent;\n}\n\n@Component({\n    selector: 'booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\" class=\"overflow-auto p-4\">\n            <event-form [form]=\"form\"></event-form>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-center items-center p-2 border-t border-gray-200\"\n        >\n            <button mat-button (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [`\n        main {\n            width: 32rem;\n            max-height: 65vh;\n            max-width: calc(100vw - 4rem);\n        }\n    `],\n})\nexport class BookingModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public form: FormGroup;\n    public loading: string;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData,\n        private _calendar: CalendarService,\n        private _event: EventsService,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.form = generateEventForm(\n            new CalendarEvent(this._data.event || {})\n        );\n        this.form.controls.host.setValue(null);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid || !this.form.value.resources?.length) {\n            return notifyError('Some form fields are invalid');\n        }\n        const value = this.form.value;\n        this.loading = 'Check space availability...';\n        const spaces = await this._calendar\n            .availability({\n                period_start: Math.floor(new Date(value.date).valueOf() / 1000),\n                period_end:\n                    Math.floor(new Date(value.date).valueOf() / 1000) +\n                    value.duration * 60,\n                system_ids: value.resources.map((space) => space.id).join(','),\n            })\n            .catch((_) => []);\n        if (spaces.length < value.resources.length) {\n            this.loading = '';\n            return notifyError(\n                'Some of the selected spaces are not available for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating calendar event...';\n        value.system = value.resources[0];\n        const booking = await this._event\n            .save(new CalendarEvent(value).toJSON())\n            .catch((_) => null);\n        this.loading = '';\n        if (!booking) {\n            return notifyError('Error creating booking.');\n        }\n        this.event.emit({ reason: 'done', metadata: booking });\n        notifySuccess('Successfully created booking.');\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    startOfDay,\n    endOfDay,\n    startOfWeek,\n    endOfWeek,\n    startOfMonth,\n    endOfMonth,\n    format,\n} from 'date-fns';\nimport { BehaviorSubject, of, combineLatest } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    catchError,\n    filter,\n    first,\n} from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    flatten,\n    timePeriodsIntersect,\n    unique,\n} from '@user-interfaces/common';\nimport {\n    CalendarEvent,\n    EventsService,\n    replaceBookings,\n} from '@user-interfaces/events';\nimport { SpacesService } from '@user-interfaces/spaces';\nimport { BookingModalComponent } from './booking-modal.component';\nimport { ConfirmModalComponent } from '@user-interfaces/components';\n\nexport type BookingType =\n    | 'internal'\n    | 'client'\n    | 'external'\n    | 'setup'\n    | 'training'\n    | 'interview'\n    | 'declined';\n\nexport interface BookingFilters {\n    /** List of zone ids to get bookings for */\n    zone_ids?: string[];\n    space_emails?: string[];\n    hide_type?: BookingType[];\n}\n\nexport interface BookingUIOptions {\n    /** Whether to show setup and breakdown times for events */\n    show_overflow?: boolean;\n    /** Whether to show cleaning status of the events */\n    show_cleaning?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventsStateService extends BaseClass {\n    /** List of bookings */\n    private _poll = new BehaviorSubject<boolean>(false);\n    /** List of bookings */\n    private _long_poll = new BehaviorSubject<'month' | 'week' | ''>('');\n    /** List of bookings */\n    private _bookings = new BehaviorSubject<CalendarEvent[]>([]);\n    /** Filter details for bookings */\n    private _filters = new BehaviorSubject<BookingFilters>({});\n    /** Filter details for bookings */\n    private _ui_options = new BehaviorSubject<BookingUIOptions>({});\n    /** Currently active date */\n    private _date = new BehaviorSubject<number>(new Date().valueOf());\n    /** Currently displayed zone */\n    private _zones = new BehaviorSubject<string[]>([]);\n    /** Whether booking data is being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Observable for filter and booking list changes */\n    private _state = combineLatest(\n        this._bookings,\n        this._filters,\n        this._date,\n        this._zones\n    );\n    /** Event currently being viewed */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n\n    /** Observable for list of bookings */\n    public readonly bookings = this._bookings.asObservable();\n    /** Observable for active date */\n    public readonly date = this._date.asObservable();\n    /** Observable for active zone */\n    public readonly zones = this._zones.asObservable();\n    /** Observable for UI display options */\n    public readonly ui_options = this._ui_options.asObservable();\n    /** Observable for loading state of bookings */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for viewed event */\n    public readonly event = this._event.asObservable();\n    /** Obsevable for filtered list of bookings */\n    public readonly filtered = this._state.pipe(\n        map(() => {\n            const start = startOfDay(new Date(this._date.getValue()));\n            const end = endOfDay(start);\n            return this.filterEvents(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings of the active week */\n    public readonly filtered_week = this._state.pipe(\n        map(() => {\n            const start = startOfWeek(new Date(this._date.getValue()));\n            const end = endOfWeek(start);\n            return this.filterEvents(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings for active month */\n    public readonly filtered_month = this._state.pipe(\n        map(() => {\n            const start = startOfMonth(new Date(this._date.getValue()));\n            const end = endOfMonth(start);\n            return this.filterEvents(start, end);\n        })\n    );\n\n    /** Active filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n\n    constructor(\n        private _events: EventsService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        /** Generate observable for updating bookings */\n        const search = combineLatest([\n            this._poll,\n            this._zones,\n            this._date,\n        ]).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap(() => {\n                const fzones = this._zones.getValue();\n                if (!fzones || !fzones.length) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = startOfDay(new Date(this._date.getValue()));\n                const end = endOfDay(start);\n                return this._events.query({\n                    zone_ids: fzones.join(','),\n                    period_start: Math.floor(start.valueOf() / 1000),\n                    period_end: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Generate observable for updating bookings */\n        const search_long = combineLatest([\n            this._long_poll,\n            this._zones,\n            this._date,\n        ]).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap((props) => {\n                const type = props[0];\n                const fzones = props[1];\n                if (!fzones || !fzones.length) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = (type === 'week' ? startOfWeek : startOfMonth)(\n                    new Date(props[2])\n                );\n                const end = (type === 'week' ? endOfWeek : endOfMonth)(start);\n                return this._events.query({\n                    zone_ids: fzones.join(','),\n                    period_start: Math.floor(start.valueOf() / 1000),\n                    period_end: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Subscribe to update observable */\n        search.subscribe((events) => {\n            this.processBookings(events);\n            this._loading.next(false);\n        });\n        search_long.subscribe((events) => {\n            this.processBookings(events, this._long_poll.getValue() as any);\n            this._loading.next(false);\n        });\n    }\n\n    /**\n     * Update the booking filters\n     * @param details\n     */\n    public setFilters(details: BookingFilters) {\n        this._filters.next(details);\n    }\n\n    /**\n     * Update the booking date\n     * @param details\n     */\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setZones(zones: string[]) {\n        this._zones.next(zones);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setEvent(event: CalendarEvent) {\n        this._event.next(event);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setUIOptions(options: BookingUIOptions) {\n        const old_options = this._ui_options.getValue();\n        this._ui_options.next({ ...old_options, ...options });\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPolling(delay: number = 10 * 1000) {\n        this._poll.next(true);\n        this.interval('polling', () => this._poll.next(true), delay);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingWeek(delay: number = 30 * 1000) {\n        this._long_poll.next('week');\n        this.interval(\n            'polling_long',\n            () => this._long_poll.next('week'),\n            delay\n        );\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingMonth(delay: number = 5 * 60 * 1000) {\n        this._long_poll.next('month');\n        this.interval(\n            'polling_long',\n            () => this._long_poll.next('month'),\n            delay\n        );\n    }\n\n    /**\n     * Stop polling to update bookings;\n     */\n    public stopPolling() {\n        this._poll.next(false);\n        this.clearInterval('polling');\n        this._long_poll.next('');\n        this.clearInterval('polling_long');\n    }\n\n    public async newBooking(event?: CalendarEvent) {\n        const ref = this._dialog.open(BookingModalComponent, {\n            data: {\n                event,\n            },\n        });\n        const booking: CalendarEvent | null = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (booking instanceof CalendarEvent) {\n            this.replace(booking);\n        }\n    }\n\n    public async removeBooking(event: CalendarEvent) {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Delete meeting?',\n                content: `Are you sure you want to delete the meeting at ${format(\n                    new Date(event.date),\n                    'dd MMM yyyy, h:mma'\n                )}<br> in ${event.location}?`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n        });\n        const done: boolean | null = await Promise.race([\n            ref.componentInstance.event\n                .pipe(\n                    first((_) => _.reason === 'done'),\n                    map((_) => true)\n                )\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (done) {\n            ref.componentInstance.loading = 'Deleting booking...';\n            await this._events.delete(event.id, { system_id: event.system?.id });\n            this.remove(event);\n            ref.close();\n        }\n    }\n\n    /**\n     * Add booking to bookings listing\n     * @param booking\n     */\n    public add(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Update booking in the bookings list\n     * @param booking\n     */\n    public replace(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings\n            .filter((bkn) => bkn.id !== booking.id)\n            .concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Remove booking in the bookings list\n     * @param booking\n     */\n    public remove(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.filter((bkn) => bkn.id !== booking.id);\n        this._bookings.next(new_bookings);\n    }\n\n    private processBookings(\n        events: CalendarEvent[],\n        period: 'day' | 'week' | 'month' = 'day'\n    ) {\n        const start = (period === 'month'\n            ? startOfMonth\n            : period === 'week'\n            ? startOfWeek\n            : startOfDay)(new Date(this._date.getValue()));\n        const end = (period === 'month'\n            ? endOfMonth\n            : period === 'week'\n            ? endOfWeek\n            : endOfDay)(start);\n        let bookings = this._bookings.getValue();\n        const space_list = unique(\n            flatten(events.map((event) => event.resources)),\n            'email'\n        );\n        space_list.forEach((space) => {\n            bookings = replaceBookings(\n                bookings,\n                events\n                    .filter((bkn) =>\n                        bkn.resources.find((s) => s.email === space.email)\n                    )\n                    .map((bkn) => new CalendarEvent(bkn)),\n                {\n                    space: space.email,\n                    from: start.valueOf(),\n                    to: end.valueOf(),\n                }\n            );\n        });\n        this._bookings.next(bookings);\n    }\n\n    private filterEvents(start: Date, end: Date) {\n        const filters = this._filters.getValue();\n        const bookings = this._bookings.getValue();\n        const fzones = this._zones.getValue();\n        return bookings.filter((bkn) => {\n            const intersects = timePeriodsIntersect(\n                start.valueOf(),\n                end.valueOf(),\n                bkn.date,\n                bkn.date + bkn.duration * 60 * 1000\n            );\n            const in_zone = !!bkn.resources\n                .map((r) => this._spaces.find(r.id))\n                .find((space) => fzones.find((z) => space.zones.includes(z)));\n            const has_space =\n                !filters.space_emails?.length ||\n                !!bkn.resources.find((space) =>\n                    filters.space_emails.includes(space.email)\n                );\n            const in_zones =\n                !filters.zone_ids?.length ||\n                !!bkn.resources.find((space) =>\n                    space.zones.find((zone) => filters.zone_ids.includes(zone))\n                );\n            const type = bkn.has_visitors\n                ? 'external'\n                : bkn.status === 'cancelled'\n                ? 'cancelled'\n                : 'internal';\n            const show =\n                !filters.hide_type?.length ||\n                !filters.hide_type.includes(type as any);\n            return intersects && has_space && in_zone && in_zones && show;\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent } from '@user-interfaces/common';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from '@user-interfaces/spaces';\nimport { first, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'event-form',\n    template: `\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"flex flex-col\">\n                <label for=\"title\">Title<span>*</span>:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        formControlName=\"title\"\n                        placeholder=\"Meeting Title\"\n                    />\n                    <mat-error>A valid title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"date\">Date<span>*</span>:</label>\n                <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n            </div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"start-time\">Start Time<span>*</span>:</label>\n                    <a-time-field\n                        name=\"start-time\"\n                        formControlName=\"date\"\n                        style=\"margin-top: .3rem\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"duration\">Duration<span>*</span>:</label>\n                    <a-duration-field\n                        name=\"duration\"\n                        [time]=\"form.controls.date.value\"\n                        formControlName=\"duration\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"organiser\">Host<span>*</span>:</label>\n                <a-user-search-field\n                    name=\"organiser\"\n                    formControlName=\"organiser\"\n                ></a-user-search-field>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"attendees\">Attendees<span>*</span>:</label>\n                <a-user-list-field\n                    name=\"attendees\"\n                    formControlName=\"attendees\"\n                ></a-user-list-field>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"space\">Space<span>*</span>:</label>\n                <an-action-field\n                    name=\"space\"\n                    [placeholder]=\"spaces\"\n                    (onAction)=\"selectSpace()\"\n                ></an-action-field>\n            </div>\n        </form>\n    `,\n    styles: [``],\n})\nexport class EventFormComponent {\n    @Input() public form: FormGroup;\n\n    public get spaces() {\n        return (\n            this.form.controls.resources?.value\n                ?.map((i) => i.display_name || i.name)\n                .join(', ') || 'Select a space'\n        );\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public async selectSpace() {\n        const ref = this._dialog.open<\n            SpaceSelectModalComponent,\n            SpaceSelectModalData\n        >(SpaceSelectModalComponent, {\n            data: {\n                spaces: this.form.controls.resources.value,\n                date: this.form.controls.date.value,\n                duration: this.form.controls.duration.value,\n            },\n        });\n        const success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (success) {\n            this.form.controls.resources.setValue(success.metadata);\n        }\n        ref.close();\n    }\n}\n"],"sourceRoot":"webpack:///"}