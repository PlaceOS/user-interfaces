{"version":3,"sources":["./src/app/day-view/events-state.service.ts"],"names":[],"mappings":"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","file":"default~day-view-day-view-module~facilities-facilities-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { startOfDay, endOfDay, startOfWeek, endOfWeek, startOfMonth, endOfMonth } from 'date-fns';\nimport { BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { map, switchMap, debounceTime, catchError, filter } from 'rxjs/operators';\n\nimport { BaseClass, flatten, timePeriodsIntersect, unique } from '@user-interfaces/common';\nimport { CalendarEvent, EventsService, replaceBookings } from '@user-interfaces/events';\nimport { SpacesService } from '@user-interfaces/spaces';\n\nexport type BookingType =\n    | 'internal'\n    | 'client'\n    | 'external'\n    | 'setup'\n    | 'training'\n    | 'interview'\n    | 'declined';\n\nexport interface BookingFilters {\n    /** List of zone ids to get bookings for */\n    zone_ids?: string[];\n    space_emails?: string[];\n    hide_type?: BookingType[];\n}\n\nexport interface BookingUIOptions {\n    /** Whether to show setup and breakdown times for events */\n    show_overflow?: boolean;\n    /** Whether to show cleaning status of the events */\n    show_cleaning?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventsStateService extends BaseClass {\n    /** List of bookings */\n    private _poll = new BehaviorSubject<boolean>(false);\n    /** List of bookings */\n    private _long_poll = new BehaviorSubject<'month' | 'week' | ''>('');\n    /** List of bookings */\n    private _bookings = new BehaviorSubject<CalendarEvent[]>([]);\n    /** Filter details for bookings */\n    private _filters = new BehaviorSubject<BookingFilters>({});\n    /** Filter details for bookings */\n    private _ui_options = new BehaviorSubject<BookingUIOptions>({});\n    /** Currently active date */\n    private _date = new BehaviorSubject<number>(new Date().valueOf());\n    /** Currently displayed zone */\n    private _zones = new BehaviorSubject<string[]>([]);\n    /** Whether booking data is being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Observable for filter and booking list changes */\n    private _state = combineLatest(this._bookings, this._filters, this._date, this._zones);\n    /** Event currently being viewed */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n\n    /** Observable for list of bookings */\n    public readonly bookings = this._bookings.asObservable();\n    /** Observable for active date */\n    public readonly date = this._date.asObservable();\n    /** Observable for active zone */\n    public readonly zones = this._zones.asObservable();\n    /** Observable for UI display options */\n    public readonly ui_options = this._ui_options.asObservable();\n    /** Observable for loading state of bookings */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for viewed event */\n    public readonly event = this._event.asObservable();\n    /** Obsevable for filtered list of bookings */\n    public readonly filtered = this._state.pipe(\n        map(() => {\n            const start = startOfDay(new Date(this._date.getValue()));\n            const end = endOfDay(start);\n            return this.filterEvents(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings of the active week */\n    public readonly filtered_week = this._state.pipe(\n        map(() => {\n            const start = startOfWeek(new Date(this._date.getValue()));\n            const end = endOfWeek(start);\n            return this.filterEvents(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings for active month */\n    public readonly filtered_month = this._state.pipe(\n        map(() => {\n            const start = startOfMonth(new Date(this._date.getValue()));\n            const end = endOfMonth(start);\n            return this.filterEvents(start, end);\n        })\n    );\n\n    /** Active filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n\n    constructor(private _events: EventsService, private _spaces: SpacesService) {\n        super();\n        /** Generate observable for updating bookings */\n        const search = combineLatest([this._poll, this._zones, this._date]).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap(() => {\n                const fzones = this._zones.getValue();\n                if (!fzones || !fzones.length) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = startOfDay(new Date(this._date.getValue()));\n                const end = endOfDay(start);\n                return this._events.query({\n                    zone_ids: fzones.join(','),\n                    period_start: Math.floor(start.valueOf() / 1000),\n                    period_end: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Generate observable for updating bookings */\n        const search_long = combineLatest([this._long_poll, this._zones, this._date]).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap((props) => {\n                const type = props[0];\n                const fzones = props[1];\n                if (!fzones || !fzones.length) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = (type === 'week' ? startOfWeek : startOfMonth)(new Date(props[2]));\n                const end = (type === 'week' ? endOfWeek : endOfMonth)(start);\n                return this._events.query({\n                    zone_ids: fzones.join(','),\n                    period_start: Math.floor(start.valueOf() / 1000),\n                    period_end: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Subscribe to update observable */\n        search.subscribe((events) => {\n            this.processBookings(events);\n            this._loading.next(false);\n        });\n        search_long.subscribe((events) => {\n            this.processBookings(events, this._long_poll.getValue() as any);\n            this._loading.next(false);\n        });\n    }\n\n    /**\n     * Update the booking filters\n     * @param details\n     */\n    public setFilters(details: BookingFilters) {\n        this._filters.next(details);\n    }\n\n    /**\n     * Update the booking date\n     * @param details\n     */\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setZones(zones: string[]) {\n        this._zones.next(zones);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setEvent(event: CalendarEvent) {\n        this._event.next(event);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setUIOptions(options: BookingUIOptions) {\n        const old_options = this._ui_options.getValue();\n        this._ui_options.next({ ...old_options, ...options });\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPolling(delay: number = 10 * 1000) {\n        this._poll.next(true);\n        this.interval('polling', () => this._poll.next(true), delay);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingWeek(delay: number = 30 * 1000) {\n        this._long_poll.next('week');\n        this.interval('polling_long', () => this._long_poll.next('week'), delay);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingMonth(delay: number = 5 * 60 * 1000) {\n        this._long_poll.next('month');\n        this.interval('polling_long', () => this._long_poll.next('month'), delay);\n    }\n\n    /**\n     * Stop polling to update bookings;\n     */\n    public stopPolling() {\n        this._poll.next(false);\n        this.clearInterval('polling');\n        this._long_poll.next('');\n        this.clearInterval('polling_long');\n    }\n\n    /**\n     * Add booking to bookings listing\n     * @param booking\n     */\n    public add(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Update booking in the bookings list\n     * @param booking\n     */\n    public replace(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.filter((bkn) => bkn.id !== booking.id).concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Remove booking in the bookings list\n     * @param booking\n     */\n    public remove(booking: CalendarEvent) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.filter((bkn) => bkn.id !== booking.id);\n        this._bookings.next(new_bookings);\n    }\n\n    private processBookings(events: CalendarEvent[], period: 'day' | 'week' | 'month' = 'day') {\n        const start = (period === 'month'\n            ? startOfMonth\n            : period === 'week'\n            ? startOfWeek\n            : startOfDay)(new Date(this._date.getValue()));\n        const end = (period === 'month' ? endOfMonth : period === 'week' ? endOfWeek : endOfDay)(\n            start\n        );\n        let bookings = this._bookings.getValue();\n        const space_list = unique(flatten(events.map((event) => event.resources)), 'email');\n        space_list.forEach((space) => {\n            bookings = replaceBookings(\n                bookings,\n                events\n                    .filter((bkn) => bkn.resources.find((s) => s.email === space.email))\n                    .map((bkn) => new CalendarEvent(bkn)),\n                {\n                    space: space.email,\n                    from: start.valueOf(),\n                    to: end.valueOf(),\n                }\n            );\n        });\n        this._bookings.next(bookings);\n    }\n\n    private filterEvents(start: Date, end: Date) {\n        const filters = this._filters.getValue();\n        const bookings = this._bookings.getValue();\n        const fzones = this._zones.getValue();\n        return bookings.filter((bkn) => {\n            const intersects = timePeriodsIntersect(\n                start.valueOf(),\n                end.valueOf(),\n                bkn.date,\n                bkn.date + bkn.duration * 60 * 1000\n            );\n            const in_zone = !!bkn.resources\n                .map((r) => this._spaces.find(r.id))\n                .find((space) => fzones.find((z) => space.zones.includes(z)));\n            const has_space =\n                !filters.space_emails?.length ||\n                !!bkn.resources.find((space) => filters.space_emails.includes(space.email));\n            const in_zones =\n                !filters.zone_ids?.length ||\n                !!bkn.resources.find((space) =>\n                    space.zones.find((zone) => filters.zone_ids.includes(zone))\n                );\n            const type = bkn.has_visitors ? 'external' : bkn.status === 'cancelled' ? 'cancelled' : 'internal';\n            const show = !filters.hide_type?.length || !filters.hide_type.includes(type as any);\n            return intersects && has_space && in_zone && in_zones && show;\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}