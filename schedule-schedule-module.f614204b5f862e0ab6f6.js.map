{"version":3,"sources":["./src/app/schedule/schedule-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/isToday/index.js","./src/app/schedule/event-list/event-list-item.component.ts","./src/app/schedule/event-list/event-list.component.ts","./src/app/schedule/event-list/event-view.component.ts","./src/app/schedule/schedule.component.ts","./src/app/schedule/view-event/booking-details/booking-details.component.ts","./src/app/schedule/view-event/event-details/event-details.component.html","./src/app/schedule/view-event/event-details/event-details.component.ts","./src/app/schedule/view-event/view-event.component.ts","./src/app/schedule/schedule.routes.ts","./src/app/schedule/schedule.module.ts"],"names":["ScheduleStateService","_events","_bookings","_calendars","_dialog","_router","super","_loading","BehaviorSubject","_poll","_active_item","_event_list","_options","date","Date","valueOf","loading","this","asObservable","events","options","calendars","calendar_list","active_item","pipe","switchMap","id","show","calendar","getValue","catchError","_","of","map","_item","shareReplay","filtered_events","combineLatest","filter","e","subscription","debounceTime","next","start","startOfDay","duration","dirtyDate","requiredArgs","arguments","isSameDay","now","isToday","end","endOfDay","addDays","Promise","all","query","period_start","Math","floor","period_end","type","bookings","concat","subscribe","event_list","list","item","find","i","sort","a","b","console","log","delay","interval","clearInterval","details","title","content","icon","is_event","method","delete","err","catch","close","statusText","message","navigate","queryParamsHandling","ScheduleEventListItemComponent","isAfter","event","status","isBefore","addMinutes","location","has_visitors","all_day","format","ScheduleEventListComponent","ScheduleEventViewComponent","_state","_el","end_of_week","mapping","count","length","min_date","setDate","d","setOptions","setCalendar","startPolling","ngOnDestroy","stopPolling","day_lists","Array","prototype","slice","call","nativeElement","querySelectorAll","scroll_top","target","scrollTop","active_day","el","offsetTop","getAttribute","timeout","querySelector","scrollIntoView","behavior","inline","scrollTo","onScroll","ScheduleComponent","show_menu","BookingDetailsComponent","when","add","isSame","deleteEvent","toPromise","space","name","map_id","asset_id","zones","open","width","maxWidth","maxHeight","data","EventDetailsComponent","_users","last_start","resources","creator","current","email","can_edit","subtract","spaces","reduce","v","emit","checked_in","localStorage","booking","setItem","JSON","stringify","ROUTES","path","component","children","ScheduleViewEventComponent","_route","_location","o","setID","paramMap","queryParamMap","param","queryParam","has","get","back","redirectTo","ScheduleModule","forChild"],"mappings":"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","file":"schedule-schedule-module.f614204b5f862e0ab6f6.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, BookingsService } from '@user-interfaces/bookings';\nimport { CalendarService } from '@user-interfaces/calendar';\nimport { BaseClass, notifyError, notifySuccess, openConfirmModal, timePeriodsIntersect } from '@user-interfaces/common';\nimport { CalendarEvent, EventsService } from '@user-interfaces/events';\nimport { addDays, endOfDay, isToday, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, debounceTime, map, shareReplay, switchMap } from 'rxjs/operators';\n\nexport interface ScheduleOptions {\n    date: number;\n    calendar?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _loading = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject<boolean>(false);\n\n    private _active_item = new BehaviorSubject<string>('');\n\n    private _event_list = new BehaviorSubject<(CalendarEvent | Booking)[]>([]);\n\n    private _options = new BehaviorSubject<ScheduleOptions>({\n        date: new Date().valueOf(),\n    });\n\n    private _item: CalendarEvent | Booking;\n\n    public readonly loading = this._loading.asObservable();\n    public readonly events = this._event_list.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly calendars = this._calendars.calendar_list;\n\n    public readonly active_item = this._active_item.pipe(\n        switchMap((id) =>\n            this._bookings.show(id, {\n                calendar: this._options.getValue().calendar,\n            })\n        ),\n        catchError((_) => this._events.show(this._active_item.getValue())),\n        catchError((_) => of(null)),\n        map((_: CalendarEvent | Booking | null) => {\n            this._item = _;\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._options,\n        this._event_list,\n    ]).pipe(\n        map(([options, events]) => {\n            return events.filter(\n                (e) =>\n                    (options.calendar && e instanceof CalendarEvent) ||\n                    ((!options.calendar || options.calendar === 'desks') && e instanceof Booking)\n            );\n        })\n    );\n\n    public get date() {\n        return this._options.getValue().date;\n    }\n\n    constructor(\n        private _events: EventsService,\n        private _bookings: BookingsService,\n        private _calendars: CalendarService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n        this.subscription(\n            'event_list',\n            combineLatest([this._options, this._poll])\n                .pipe(\n                    debounceTime(1000),\n                    switchMap(([options]) => {\n                        this._loading.next(' ');\n                        const start = startOfDay(options.date).valueOf();\n                        let duration = isToday(start) ? 6 : 4;\n                        const end = endOfDay(addDays(start, duration)).valueOf();\n                        return Promise.all([\n                            this._events.query({\n                                period_start: Math.floor(start / 1000),\n                                period_end: Math.floor(end / 1000),\n                                calendars: options.calendar,\n                            }),\n                            this._bookings.query({\n                                period_start: Math.floor(start / 1000),\n                                period_end: Math.floor(end / 1000),\n                                type: 'desk',\n                            }),\n                        ]);\n                    }),\n                    map(([events, bookings]) =>\n                        (events as any[]).concat(bookings)\n                    ),\n                    catchError(_ => [])\n                )\n                .subscribe((event_list) => {\n                    const start = startOfDay(\n                        this._options.getValue().date\n                    ).valueOf();\n                    const end = endOfDay(addDays(start, 6)).valueOf();\n                    let list = this._event_list.getValue().filter((item) => {\n                        return (\n                            !timePeriodsIntersect(\n                                start,\n                                end,\n                                item.date,\n                                item.date + item.duration * 60 * 1000\n                            ) && !event_list.find((i) => i.id === item.id)\n                        );\n                    });\n                    list = list.concat(event_list)\n                    list.sort((a, b) => a.date - b.date);\n                    this._event_list.next(list);\n                    this._loading.next('');\n                })\n        );\n    }\n\n    public setOptions(options: Partial<ScheduleOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setItem(id: string) {\n        console.log('Set ID:', id);\n        this._active_item.next(id);\n    }\n\n    public startPolling(delay: number = 15 * 1000) {\n        this._poll.next(!this._poll.getValue());\n        this.interval(\n            'poll',\n            () => this._poll.next(!this._poll.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async deleteEvent() {\n        if (!this._item) return;\n        const details = await openConfirmModal({\n            title: 'Cancel Meeting',\n            content: `Are you sure you want to cancel this meeting: ${this._item.title}`,\n            icon: { content: 'delete' }\n        }, this._dialog);\n        if (!details) return;\n        const is_event = this._item instanceof CalendarEvent;\n        details.loading(`Cancelling ${is_event ? 'meeting' : 'desk booking'}...`);\n        const method = is_event ? this._events.delete : this._bookings.delete\n        const err = await method(this._item.id).catch(_ => _);\n        details.close();\n        if (err) return notifyError(`Error unable to cancel ${is_event ? 'meeting' : 'desk booking'}. Error: ${err.statusText || err.message || err}`);\n        notifySuccess(`Successfully cancelled ${is_event ? 'meeting' : 'desk booking'}.`);\n        this._router.navigate(['/schedule', 'listing'], { queryParamsHandling: 'preserve' });\n    }\n}\n","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import { Component, HostListener, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { addMinutes, format, isAfter, isBefore } from 'date-fns';\n\nimport { Booking } from '@user-interfaces/bookings';\nimport { CalendarEvent } from '@user-interfaces/events';\n\n@Component({\n    selector: 'schedule-event-item',\n    template: `\n        <a\n            matRipple\n            [routerLink]=\"['/schedule', 'view', this.event.id]\"\n            [queryParams]=\"query\"\n            class=\"flex mb-1\"\n        >\n            <div\n                [class]=\"\n                    'h-20 w-20 flex flex-col items-center justify-center ' +\n                    status\n                \"\n                [class.done]=\"is_done\"\n            >\n                <div class=\"icon\" [ngSwitch]=\"event.status\">\n                    <app-icon *ngSwitchCase=\"'cancelled'\">cancel</app-icon>\n                    <app-icon *ngSwitchDefault>forum</app-icon>\n                </div>\n                <div>{{ time }}</div>\n                <label *ngIf=\"event.status === 'cancelled'\">(Cancelled)</label>\n            </div>\n            <div\n                class=\"flex flex-col h-20 flex-1 w-1/2 bg-white p-2 justify-center\"\n            >\n                <div class=\"text-lg font-medium capitalize pl-1 truncate\">\n                    {{ event.title }}\n                </div>\n                <div class=\"flex items-center\">\n                    <app-icon\n                        *ngIf=\"!!location\"\n                        [icon]=\"{\n                            type: 'icon',\n                            class: 'material-icons',\n                            content: 'place'\n                        }\"\n                    ></app-icon>\n                    <div class=\"truncate pl-1\">{{ location || 'No location' }}</div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            .confirmed,\n            .approved {\n                background: #388e3c;\n                color: #fff;\n            }\n\n            .tentative {\n                background: #ffa000;\n                color: #000;\n            }\n\n            .declined,\n            .cancelled {\n                background: #d32f2f;\n                color: #fff;\n            }\n\n            .done {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventListItemComponent {\n    /** Booking to display */\n    @Input() public event: CalendarEvent | Booking;\n\n    public get isFuture(): boolean {\n        return isAfter(this.event.date, new Date());\n    }\n\n    public get status(): string {\n        return this.event.status;\n    }\n\n    public get is_done(): boolean {\n        return isBefore(\n            addMinutes(this.event.date, this.event.duration),\n            new Date()\n        );\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'No location';\n        }\n        return this.event.location;\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'block';\n        }\n        if (this.event instanceof CalendarEvent && this.event.has_visitors) {\n            return 'external';\n        }\n        return 'book_room';\n    }\n\n    public get time(): string {\n        return this.event.all_day || this.event.duration > 23 * 60\n            ? 'All Day'\n            : format(this.event.date, 'h:mm a');\n    }\n\n    public get query() {\n        return {\n            calendar: (this.event as CalendarEvent).calendar,\n            type: this.event.type,\n        };\n    }\n\n    constructor(private _router: Router) {}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from '@user-interfaces/bookings';\nimport { CalendarEvent } from '@user-interfaces/events';\n\n@Component({\n    selector: 'schedule-event-date-list',\n    template: `\n        <div class=\"text-xl mb-4\">\n            {{ date | date: 'fullDate' }}\n        </div>\n        <ng-container *ngIf=\"events?.length; else empty_state\">\n            <schedule-event-item\n                id=\"{{ i }}\"\n                *ngFor=\"let item of events; let i = index\"\n                [event]=\"item\"\n            ></schedule-event-item>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"p-8\">No events for {{ date | date }}</div>\n        </ng-template>\n        <div class=\"mb-4\"></div>\n    `,\n    styles: [`\n    `],\n})\nexport class ScheduleEventListComponent {\n    @Input() public date: number;\n    @Input() public events: (CalendarEvent | Booking)[];\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, timePeriodsIntersect } from '@user-interfaces/common';\nimport { ScheduleStateService } from '../schedule-state.service';\nimport {\n    addDays,\n    endOfDay,\n    format,\n    isBefore,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'schedule-event-list',\n    template: `\n        <div\n            class=\"flex p-2 items-center bg-white border-b border-gray-200 shadow space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"h-12\">\n                <mat-select\n                    name=\"calendars\"\n                    [ngModel]=\"(options | async).calendar\"\n                    (ngModelChange)=\"setCalendar($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let cal of calendars | async\"\n                        [value]=\"cal.id\"\n                    >\n                        {{ cal.summary }}\n                    </mat-option>\n                    <mat-option value=\"desks\">Desks</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <button mat-button class=\"clear\" [matMenuTriggerFor]=\"legend\">\n                Legend\n            </button>\n            <mat-menu #legend=\"matMenu\">\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-success h-2 w-2 rounded-full mr-4\"></div>\n                    Approved\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-pending h-2 w-2 rounded-full mr-4\"></div>\n                    Tentative\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-error h-2 w-2 rounded-full mr-4\"></div>\n                    Declined\n                </div>\n            </mat-menu>\n            <button mat-icon-button class=\"relative\" #dateMenu>\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event' }\"\n                ></app-icon>\n                <input\n                    matInput\n                    class=\"opacity-0 absolute inset-0\"\n                    [ngModel]=\"(options | async)?.date\"\n                    (ngModelChange)=\"setDate($event); scrollTo($event)\"\n                    [matDatepicker]=\"picker\"\n                    [min]=\"min_date\"\n                />\n\n                <mat-datepicker-toggle\n                    class=\"opacity-0 absolute inset-0\"\n                    matSuffix\n                    [for]=\"picker\"\n                ></mat-datepicker-toggle>\n            </button>\n            <mat-datepicker #picker ></mat-datepicker>\n        </div>\n        <main class=\"w-full flex-1 h-1/2 flex flex-col\">\n            <div\n                class=\"flex-1 w-full h-1/2 overflow-auto p-4\"\n                (scroll)=\"onScroll($event)\"\n            >\n                <schedule-event-date-list\n                    *ngFor=\"let details of events | async | keyvalue\"\n                    [attr.date]=\"details.key | date: 'yyyy-MM-dd'\"\n                    [date]=\"details.key\"\n                    [events]=\"details.value\"\n                ></schedule-event-date-list>\n            </div>\n            <mat-progress-bar\n                mode=\"indeterminate\"\n                *ngIf=\"loading | async\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventViewComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly calendars = this._state.calendars;\n\n    public readonly events = combineLatest([\n        this._state.filtered_events,\n        this._state.options,\n    ]).pipe(\n        map(([events, options]) => {\n            let start = startOfDay(new Date());\n            const end_of_week = addDays(options.date || start, 12);\n            const mapping = {};\n            let count = 0;\n            while (count < events.length || isBefore(start, end_of_week)) {\n                const end = endOfDay(start);\n                const list = events.filter((e) =>\n                    timePeriodsIntersect(\n                        start.valueOf(),\n                        end.valueOf(),\n                        e.date,\n                        e.date + e.duration * 60 * 1000\n                    )\n                );\n                count += list.length;\n                mapping[start.valueOf()] = list;\n                start = addDays(start, 1);\n            }\n            return mapping;\n        })\n    );\n\n    public readonly min_date = startOfDay(new Date());\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    public readonly setCalendar = (d) =>\n        this._state.setOptions({ calendar: d });\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._state.stopPolling();\n    }\n\n    public onScroll(event): void {\n        const day_lists = Array.prototype.slice.call(\n            this._el?.nativeElement.querySelectorAll(\n                'schedule-event-date-list'\n            ) || []\n        );\n        if (!day_lists?.length) return;\n        const scroll_top = event.target.scrollTop;\n        let active_day: HTMLElement = null;\n        for (const el of day_lists) {\n            if (el.offsetTop - scroll_top > 0) {\n                active_day = el;\n                break;\n            }\n        }\n        if (!active_day) return;\n        const date = new Date(active_day.getAttribute('date'));\n        if (!isSameDay(date, this._state.date)) {\n            console.log('Date:', format(date, 'dd MMM yyyy'));\n            this.setDate(date.valueOf());\n        }\n    }\n\n    public scrollTo(date: number) {\n        this.timeout(\n            'scroll_to',\n            () => {\n                const el: HTMLElement = this._el?.nativeElement.querySelector(\n                    `[date=\"${format(date, 'yyyy-MM-dd')}\"]`\n                );\n                if (!el) return;\n                el.scrollIntoView({ behavior: 'smooth', inline: 'center' });\n            },\n            1000\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n        <router-outlet></router-outlet>\n        <a-footer-menu class=\"w-full\"></a-footer-menu>\n        <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {\n    /** Name of the page to render */\n    public page: string;\n    /** Whether to show menu */\n    public show_menu = false;\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { Booking } from '@user-interfaces/bookings';\nimport { Space } from '@user-interfaces/spaces';\n\nimport { ScheduleStateService } from '../../schedule-state.service';\nimport { ViewRoomModalComponent } from '../../../overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'schedule-booking-details',\n    template: `\n        <div>\n            <div class=\"flex flex-col items-center mb-4\">\n                <div class=\"text-xl capitalize mb-2 font-medium\">\n                    {{ (event | async)?.title || 'No Title' }}\n                </div>\n            </div>\n            <div\n                class=\"rounded py-4 bg-white border-gray-300 shadow space-y-4 w-full text-lg\"\n            >\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">perm_identity</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.user_name }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex-1\">{{ when | async }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.description }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-4\">\n                    <button\n                        *ngIf=\"(event | async)?.asset_id\"\n                        (click)=\"locate()\"\n                        class=\"w-24\"\n                        mat-button\n                    >\n                        View\n                    </button>\n                    <div class=\"flex-1\"></div>\n                    <button\n                        (click)=\"deleteEvent()\"\n                        class=\"error w-24\"\n                        mat-button\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                margin: auto;\n                width: 640px;\n                max-width: 100vw;\n                padding: 1rem;\n            }\n        `,\n    ],\n})\nexport class BookingDetailsComponent extends BaseClass {\n    public readonly event: Observable<Booking> = this._state.active_item as any;\n\n    public readonly when = this.event.pipe(\n        map((item) => {\n            if (!item) {\n                return 'Unable to determine.';\n            }\n            const date = dayjs(item.date);\n            const end = date.add(item.duration || 60, 'm');\n            if (item.all_day || item.duration > 23 * 60) {\n                return `${date.format('DD MMM YYYY')} - All Day`;\n            } else {\n                if (date.isSame(end, 'd')) {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('h:mm A')}`;\n                } else {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('DD MMM YYYY, h:mm A')}`;\n                }\n            }\n        })\n    );\n\n    public readonly deleteEvent = () => this._state.deleteEvent();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async locate() {\n        const item = await this.event.toPromise();\n        const space = new Space({\n            name: 'Desk Booking',\n            map_id: item.asset_id,\n            zones: item.zones,\n        });\n        if (!space.level) {\n            // this._service.notifyInfo('The space cannot be located.');\n        }\n        this._dialog.open(ViewRoomModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n}\n","<div class=\"event-details\" *ngIf=\"item\">\n    <div class=\"header\">\n        <div class=\"title\">{{ item.title || 'No Title' }}</div>\n        <div *ngIf=\"can_edit\" class=\"icons\">\n            <button mat-fab color=\"primary\" (click)=\"edit()\">\n                <app-icon\n                    name=\"edit\"\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'edit' }\"\n                ></app-icon>\n            </button>\n            <button mat-fab *ngIf=\"can_cancel\" color=\"primary\" (click)=\"cancelBooking()\">\n                <app-icon\n                    name=\"cancel\"\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete_forever' }\"\n                ></app-icon>\n            </button>\n            <button mat-fab color=\"primary\" (click)=\"duplicate()\">\n                <app-icon\n                    name=\"duplicate\"\n                    [icon]=\"{\n                        type: 'icon',\n                        class: 'material-icons',\n                        content: 'control_point_duplicate'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"event\">\n        <schedule-event-view [event]=\"item\"></schedule-event-view>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Booking } from '@user-interfaces/bookings';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { StaffService } from '@user-interfaces/users';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss'],\n})\nexport class EventDetailsComponent extends BaseClass {\n    /** Booking to display */\n    @Input() public item: CalendarEvent;\n    /** Emitter for action on the display view */\n    @Output() public event = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.item.resources;\n    }\n\n    /** Host of the event */\n    public get organiser(): string {\n        return this.item.creator || this._users.current.name;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return this.item.creator === user.email && this.status !== 'done';\n    }\n\n    /** can the user cancel the meeting */\n    public get can_cancel(): boolean {\n        return this.can_edit && this.status === 'future';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.item) {\n            const now = dayjs();\n            const date = dayjs(this.item.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.item.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.item.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(\n        private _users: StaffService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.event.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        if (localStorage) {\n            const booking = new Booking({ ...this.item as any, id: '' });\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this._router.navigate(['/book']);\n    }\n\n    /**\n     * Cancel the booking\n     */\n    public cancelBooking(): void {\n        this.event.emit({ type: 'cancel_booking' });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    template: `\n        <div class=\"w-full h-12 flex items-center bg-white shadow px-2\">\n            <button mat-button class=\"clear\" (click)=\"back()\">\n                <div class=\"flex items-center\">\n                    <app-icon class=\"mr-2\">keyboard_backspace</app-icon>\n                    Back\n                </div>\n            </button>\n        </div>\n        <main class=\"flex-1 h-1/2 w-full overflow-auto\">\n            <div *ngIf=\"(event | async) && !(loading | async); else load_state\">\n                <ng-container [ngSwitch]=\"type\">\n                    <schedule-booking-details *ngSwitchCase=\"'booking'\">\n                    </schedule-booking-details>\n                    <schedule-event-details\n                        *ngSwitchDefault\n                    ></schedule-event-details>\n                </ng-container>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <div\n                class=\"p-8 flex flex-col items-center justify-center h-full w-full\"\n            >\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ (loading | async) || 'Loading event details...' }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewEventComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly event = this._state.active_item;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setID = (id) => this._state.setItem(id);\n\n    public type: string = '';\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _location: Location\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.params',\n            combineLatest([\n                this._route.paramMap,\n                this._route.queryParamMap,\n            ]).subscribe(([param, queryParam]) => {\n                if (param.has('id')) {\n                    this.setID(param.get('id'));\n                }\n                if (queryParam.has('type')) this.type = queryParam.get('type');\n                if (queryParam.has('calendar')) {\n                    this.setOptions({ calendar: queryParam.get('calendar') });\n                }\n            })\n        );\n        this.timeout(\n            'check_event',\n            async () => {\n                const event = await this._state.active_item.toPromise();\n                if (!event)\n                    this._router.navigate(['/schedule', 'listing'], {\n                        queryParamsHandling: 'preserve',\n                    });\n            },\n            2000\n        );\n    }\n\n    public back() {\n        this._location.back();\n    }\n}\n","import { Routes } from '@angular/router';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        component: ScheduleComponent,\n        children: [\n            { path: 'listing', component: ScheduleEventViewComponent },\n            { path: 'view/:id', component: ScheduleViewEventComponent },\n            { path: '**', redirectTo: 'listing' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from '../ui/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/event-list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\nimport { BookingDetailsComponent } from './view-event/booking-details/booking-details.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component'\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventViewComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent,\n        BookingDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule,\n    ],\n})\nexport class ScheduleModule {}\n"],"sourceRoot":"webpack:///"}