{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts-libs_bookings_src_lib_lockers_service_ts.js","mappings":"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","names":["i0","BookingCardComponent","AsyncHandler","constructor","_dialog","_route","_org","super","this","EventEmitter","ngOnInit","subscription","queryParamMap","subscribe","params","has","booking","id","get","viewDetails","type","day","date","Date","now","isSameDay","format","location","level","levelWithID","zones","display_name","name","period","all_day","start","duration","end","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","edit","emit","remove","_angular_core__WEBPACK_IMPORTED_MODULE_5__","selectors","building","buildings","find","bld","includes","auto_checkin","_settings","is_in_progress","ts","booking_start","booking_end","_booking","asset_id","content","MapPinComponent","toggleCheckedIn","_this","checking_in","checkinBooking","checked_in","toPromise","notifySuccess","viewLocation","hide_map","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","map_id","extension_data","afterClosed","_angular_core__WEBPACK_IMPORTED_MODULE_8__","MAT_DIALOG_DATA","$localize","ctx","BOOKING_URLS","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","storeForm","next","_options","_router","_payments","BehaviorSubject","JSON","parse","sessionStorage","getItem","_loading","asObservable","pipe","shareReplay","generateBookingForm","options","debounceTime","distinctUntilKeyChanged","switchMap","of","loadResourceList","tap","resources","map","resource","list","features","Array","forEach","_","push","unique","sort","a","b","localeCompare","showMetadata","catchError","details","combineLatest","restrictions","merge","timer","filter","getRawValue","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","valueOf","restriction","user_name","asset","assets","groups","length","some","grp","currentUser","bookable","every","zone","parent_id","bkn","status","available_resources","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setOptions","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","last_success","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","title","icon","reason","loading","postFormForGroup","catch","notifyError","close","postForm","ignore_check","_this2","getInvalidFields","join","booking_type","checkResourceAvailable","set","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","updateAssetRequestsForResource","booked_by_email","host","result","saveBooking","description","user_id","department","approved","error","_this3","extra_members","email","take","active_resource","_getNearbyResources","group_members","Promise","all","idx","user_email","i","organisation","_this4","DeskQuestionsModalComponent","race","key","allowed_bookings","_this5","current","listChildMetadata","flatten","metadata","d","map_url","count","nearby_resources","findNearbyFeature","_angular_core__WEBPACK_IMPORTED_MODULE_31__","factory","_event","generateMicrosoftCalendarLink","generateGoogleCalendarLink","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_6__","core","InviteVisitorFormComponent","multiple","_service","active_buildings","sent","initFormZone","setValidators","Validators","visitors","company","split","filterVisitors","setVisitor","s","toLowerCase","filtered_visitors","onDone","done","sendInvite","visitor_details","old_visitors","saveUserSetting","_bookForMany","_bookForOne","attendees","User","loading_many","randomString","last_count","space_r1","EMPTY_FAVS","ParkingSpaceListFieldComponent","favorites","fn","_onChange","_onTouch","disabled","changeResources","ParkingSpaceSelectModalComponent","spaces","capacity","room_size","setValue","removeResource","space","new_value","writeValue","toggleFavourite","fav_list","FAV_PARKING_KEY","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","i18n_3","SharedBookingsModule","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","ctx_r1","DeskConfirmModalComponent","desk_list","desks","hide_reason","can_set_host","_data","can_set_date","confirm","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskListFieldComponent","FAV_DESK_KEY","DeskSelectModalComponent","items","selected","FormGroup","travelled","FormControl","unwell","contact","submit","Object","keys","failure","DeskDetailsComponent","ngOnChanges","changes","desk","updateFeature","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","o","f","DeskFiltersComponent","_angular_core__WEBPACK_IMPORTED_MODULE_4__","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","active_levels","dismiss","l","can_close","_angular_core__WEBPACK_IMPORTED_MODULE_7__","DeskListComponent","show_fav","isFavourite","desk_id","selectDesk","onSelect","_angular_core__WEBPACK_IMPORTED_MODULE_2__","DeskMapComponent","x","y","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","free_desks","reduce","styles","colours","fill","DEFAULT_COLOURS","levels","setZoom","new_zoom","zoom","max","min","resetMap","center","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","state","LockerGridComponent","columns","locker","bank","lockers","position","size","bank_status","LockersService","setLevel","_level","active_building","_change","PlaceMetadata","lockers_banks$","bank_list","console","log","bank_id","lockers$","level_id","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_11__","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersComponent","zone_ids","_updateLocation","removeFeature","feat","_form","max_duration","level_list","lvl","toggleFeature","new_list","ParkingSpaceListComponent","space_id","selectSpace","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceSelectMapComponent","available_spaces","_seletedSpace","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","t","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","height","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","Error","Image","toDataURL","ExploreBookQrComponent","origin","ExploreBookingModalComponent","can_book_for_others","organiser","save","app_name","navigate","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","y_pos","x_pos","available_until","ExploreSpaceInfoComponent","show_features","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","free","pending","reserved","busy","unknown","ExploreSpacesService","unsubWith","_statuses","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","_bind","bookSpace","openEventLinkModal","_bookings","CalendarEvent","clearTimeout","updateStatus","style_map","opacity","setStyles","Space","setFeatures","actions","setActions","ExploreStateService","positions","_positions","active_level","_spaces","disable","_message","querySystems","limit","_features","disable_features","concat","_actions","disable_actions","_labels","labels","disable_labels","_styles","style_mappings","text","display","disable_styles","levelsForBuilding","old_options","setPositions","feature_map","actions_map","setLabels","labels_map","_angular_core__WEBPACK_IMPORTED_MODULE_16__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                overflow: hidden;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addMinutes, format, formatDuration } from 'date-fns';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking_spaces' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                `${value.booked_by_email}|${value.date}`,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            );\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) => ({\n                            ...d,\n                            id: d.id || d.map_id,\n                            zone: _.zone,\n                        }))\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({ zones: [this._org.building?.id] });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                asset_id: user.email,\n                asset_name: user.name,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\nimport { BuildingLevel, Desk } from '@placeos/organisation';\nimport { User } from '@placeos/users';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_desks.find((_) => _.id === desk.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        colours[`desk-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div\n            class=\"grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$ = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'lockers').pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map(\n            (_) =>\n                ((_.details instanceof Array ? _.details : null) ||\n                    []) as LockerBank[]\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            console.log('Bank List', bank_list);\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) => ({ ..._, bank_id: bank.id } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label i18n>Host:</label>\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] !== 'free' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n"],"x_google_ignoreList":[]}