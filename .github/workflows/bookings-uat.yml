# This is a basic workflow to help you get started with Actions

name: BOOKINGS-UAT

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [release/**]
        paths:
          - apps/booking-panel/**
          - libs/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Initialise Pipeline Chat Status
              uses: fjogeleit/http-request-action@master
              with:
                url: ${{ secrets.STATUS_URL }}
                data: '{ "chat_url": "${{ secrets.CHAT_URL }}", "name": "${{ github.repository }}", "commit": "${{ github.sha }}", "pipeline_name": "${{ github.workflow }}", "branch": "${{ github.ref }}", "status": "processing", "url": "https://github.com/${{ github.repository }}/runs/${{ github.run_id }}" }'

            - name: Get short hash
              id: vars
              run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - name: Setup Node.js environment
              uses: actions/setup-node@v1.4.4
              with:
                node-version: '13'

            - name: Cache node modules
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install node modules
              run: npm install && npm install -g @angular/cli && npm install -g nx

            # - name: Test the application
            #   run: npm run test:ci

            - name: Builds the application
              run: nx build bookings --configuration=staging --aot

            - name: Deploy the application
              uses:  MrYuion/gha-publish-to-git@v1.1
              with:
                branch: build/bookings/uat
                source_folder: dist/apps/bookings
                commit_message: >
                    build(bookings): CI build from ${{ steps.vars.outputs.sha_short }}
                github_pat: ${{ secrets.API_GITHUB_TOKEN }}

            - name: Update Pipeline Chat Status
              uses: fjogeleit/http-request-action@master
              with:
                url: ${{ secrets.STATUS_URL }}
                data: '{ "name": "${{ github.repository }}", "commit": "${{ github.sha }}", "pipeline_name": "${{ github.workflow }}", "branch": "${{ github.ref }}", "status": "${{ job.status }}", "url": "https://github.com/${{ github.repository }}/runs/${{ github.run_id }}" }'
              if: ${{ always() }}
