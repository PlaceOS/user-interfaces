# This is a basic workflow to help you get started with Actions

name: BOOKINGS

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [develop, release/**, master]
        paths:
          - apps/booking-panel/**
          - libs/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Initialise Pipeline Chat Status
              uses: fjogeleit/http-request-action@master
              continue-on-error: true
              with:
                url: ${{ secrets.STATUS_URL }}
                data: '{ "chat_url": "${{ secrets.CHAT_URL }}", "name": "${{ github.repository }}", "commit": "${{ github.sha }}", "pipeline_name": "${{ github.workflow }}", "branch": "${{ github.ref }}", "status": "processing", "url": "https://github.com/${{ github.repository }}/runs/${{ github.run_id }}" }'

            - name: Get short hash
              id: vars
              run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - name: Extract branch name
              id: branch_name
              shell: bash
              run: echo "::set-output name=name::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"

            - name: Extract build configuration
              shell: bash
              id: build_ext
              run: |
                    if [[ ${{ steps.branch_name.outputs.name }} == "master" ]] || [[ ${{ steps.branch_name.outputs.name }} == "production" ]] || [[ ${{ steps.branch_name.outputs.name }} == "main" ]]
                    then
                        echo "::set-output name=configuration::production"
                        echo "::set-output name=deploy_branch::prod"
                    elif [[ ${{ steps.branch_name.outputs.name }} == release/* ]]
                    then
                        echo "::set-output name=configuration::staging"
                        echo "::set-output name=deploy_branch::uat"
                    else
                        echo "::set-output name=configuration::staging"
                        echo "::set-output name=deploy_branch::dev"
                    fi

            - name: Setup Node.js environment
              uses: actions/setup-node@v1.4.4
              with:
                node-version: '13'

            - name: Cache node modules
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install node modules
              run: npm install && npm install -g @angular/cli && npm install -g nx

            # - name: Test the application
            #   run: npm run test:ci

            - name: Builds the application
              run: nx build booking-panel --configuration=${{ steps.build_ext.outputs.configuration }}

            - name: Deploy the application
              uses:  MrYuion/gha-publish-to-git@v1.1
              with:
                branch: build/bookings/${{ steps.build_ext.outputs.deploy_branch }}
                source_folder: dist/apps/booking-panel
                commit_message: >
                    build(bookings): CI build from ${{ steps.vars.outputs.sha_short }}
                github_pat: ${{ secrets.API_GITHUB_TOKEN }}

            - name: Update Pipeline Chat Status
              uses: fjogeleit/http-request-action@master
              continue-on-error: true
              with:
                url: ${{ secrets.STATUS_URL }}
                data: '{ "name": "${{ github.repository }}", "commit": "${{ github.sha }}", "pipeline_name": "${{ github.workflow }}", "branch": "${{ github.ref }}", "status": "${{ job.status }}", "url": "https://github.com/${{ github.repository }}/runs/${{ github.run_id }}" }'
              if: ${{ always() }}
