{"version":3,"file":"apps_concierge_src_app_surveys_surveys_module_ts.js","mappings":"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","names":["dispatch","state","subscriber","counter","period","next","this","schedule","deepCloneNode","node","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","toLowerCase","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","source","type","value","name","context","getContext","drawImage","getMutableClientRect","element","rect","getBoundingClientRect","top","right","bottom","left","width","height","x","y","isInsideClientRect","clientRect","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","constructor","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","event","target","_getEventTarget","cachedPosition","get","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","position","contains","window","scrollY","scrollX","getRootNode","viewRef","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","appendChild","extendStyles","dest","importantProperties","key","hasOwnProperty","setProperty","has","removeProperty","toggleNativeDragInteractions","enable","userSelect","style","toggleVisibility","opacity","combineTransforms","transform","initialTransform","matchElementSize","sourceRect","getTransform","Math","round","parseCssTimeUnitsToMs","multiplier","indexOf","parseFloat","parseCssPropertyValue","computedStyle","getPropertyValue","split","map","part","trim","Set","PreviewRef","_preview","_rootElement","_direction","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","attach","parent","_createPreview","showPopover","destroy","remove","_previewEmbeddedView","setTransform","addClass","className","classList","add","getTransitionDuration","getTransformTransitionDurationInMs","getComputedStyle","transitionedProperties","property","find","prop","propertyIndex","rawDurations","rawDelays","addEventListener","handler","removeEventListener","previewConfig","previewClass","previewTemplate","template","preview","rootRect","matchSize","viewContainer","createEmbeddedView","detectChanges","margin","setAttribute","Array","isArray","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","activeCapturingEventOptions$1","capture","dragImportantProperties","DragRef","disabled","_disabled","_dropContainer","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","signal","_moveEvents","Subject","_pointerMoveSubscription","Subscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_pointerMove","pointerPosition","_getPointerPositionOnPage","abs","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","cancelable","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","coerceElement","disabledHandles","withPreviewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","undefined","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeListeners","complete","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_getShadowRoot","shadowDomSelectStart","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","shadowRoot","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","zIndex","_getPreviewInsertionPoint","body","replaceChild","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","Promise","resolve","placeholderRect","duration","propertyName","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","min","max","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","SingleAxisSortStrategy","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","index","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","splice","parentElement","_element","push","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","withElementContainer","elementToMeasure","a","b","immediateSibling","end","itemPositions","lastItemRect","firstItemRect","floor","MixedSortStrategy","deltaX","deltaY","_relatedNodes","childNodes","nextSibling","previousSwap","_activeItems","toSwapWith","current","overlapElement","after","before","newOverlapElement","_getRootNode","elementFromPoint","enterIndex","_getClosestItemIndexToPointer","targetItem","root","_rootNode","elementAtPoint","minDistance","Infinity","minIndex","hypot","AutoScrollVerticalDirection","NONE","UP","DOWN","AutoScrollHorizontalDirection","LEFT","RIGHT","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_scrollableElements","_startScrollInterval","interval","scheduler","async","isNumeric","Observable","animationFrameScheduler","pipe","takeUntil","_scrollNode","scrollStep","scrollBy","coercedElement","withOrientation","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_sortStrategy","_cacheParentPositions","_reset","previousItems","filter","every","connectedTo","strategy","_container","withScrollableParents","oldContainerIndex","newContainerIndex","unshift","size","_domRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","clientWidth","getViewportSize","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","_startReceiving","activeSiblings","initiator","receiver","draggedItems","activeCapturingEventOptions","activeApps","_ResetsLoader","static","ɵfac","t","ɵcmp","i0","selectors","hostAttrs","standalone","features","decls","vars","rf","ctx","encapsulation","changeDetection","DragDropRegistry","_appRef","inject","ApplicationRef","_environmentInjector","EnvironmentInjector","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","_loadResets","update","instances","startsWith","e","options","config","_clearGlobalListeners","streams","observer","eventOptions","merge","ngOnDestroy","instance","componentRef","createComponent","environmentInjector","onDestroy","DOCUMENT","ɵprov","token","factory","providedIn","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","i1","CDK_DRAG_PARENT","InjectionToken","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","_parentDrag","_addHandle","_removeHandle","ɵdir","inputs","booleanAttribute","provide","useExisting","CDK_DRAG_CONFIG","CDK_DROP_LIST","CdkDrag","_dragRef","_viewContainerRef","_dir","dragDrop","_changeDetectorRef","_selfHandle","_destroyed","BehaviorSubject","EventEmitter","subscription","movedEvent","_injector","Injector","data","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","ngAfterViewInit","afterNextRender","_updateRootElement","_setupHandlesListener","freeDragPosition","injector","ngOnChanges","changes","rootSelectorChange","rootElementSelector","positionChange","firstChange","removeItem","getValue","_setPreviewTemplate","_resetPreviewTemplate","_setPlaceholderTemplate","_resetPlaceholderTemplate","nativeElement","closest","_getBoundaryElement","boundary","ref","dir","templateRef","coerceNumberProperty","take","startEvent","emit","markForCheck","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","tap","handleElements","switchMap","startWith","handleInstance","dragRef","i1$1","hostVars","hostBindings","outputs","exportAs","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","_uniqueIdCounter","CdkDropList","_dropLists","_group","_scrollDispatcher","id","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","coerceArray","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","elementContainerSelector","querySelector","listAutoScrollDisabled","listOrientation","useValue","DragDropModule","ɵmod","ɵinj","providers","imports","CdkScrollableModule","MatDividerModule","MatCommonModule","MatListModule","ObserversModule","CommonModule","MatRippleModule","MatPseudoCheckboxModule","SurveySuiteModule","core","$C","G2t","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatSelectModule","MatSlideToggleModule","MatInputModule","MatIconModule","MatButtonModule","MatSliderModule","translateToSurveyPage","pages","surveyPages","title","description","question_order","translateToSurveyQuestion","q","isRequired","tags","rateMax","choices","required","max_rating","translateToQuestion","deleted","underToSpace","str","replace","getEnumOptions","targetEnum","filterStringEnumItems","getEnumMap","emap","Object","entries","isNaN","Number","TriggerEnum","None","Reserved","Checked_In","Checked_Out","Rejected","Cancelled","Visitor","QuestionType","Single_Line_Text","Comment_Box","Radio_Group","Drop_Down","Check_Box","Rating","QuestionTypeOptions","TriggerOptions","QuestionTypeEnumMap","TriggerEnumMap","BaseQuestionComponent","question","hasValue","placeholderTitle","VBU","SingleLineTextComponent","super","consts","SingleLineTextComponent_div_0_Template","$event","item_r3","_r2","$implicit","text","i_r4","ctx_r4","deleteOption","SelectionComponent_ng_container_0_ng_container_2_div_2_Template","_r1","addOption","item_r6","SelectionComponent_ng_container_0_ng_template_3_mat_form_field_0_mat_option_2_Template","SelectionComponent_ng_container_0_ng_template_3_mat_form_field_0_Template","isDropDown","inputType_r7","multiple","item_r8","SelectionComponent_ng_container_0_ng_template_5_div_1_Template","SelectionComponent_ng_container_0_ng_container_2_Template","SelectionComponent_ng_container_0_ng_template_3_Template","SelectionComponent_ng_container_0_ng_template_5_Template","previewState_r9","SelectionComponent","ngOnInit","SelectionComponent_ng_container_0_Template","MultiLineTextComponent","MultiLineTextComponent_div_0_Template","i_r1","ctx_r2","RatingsComponent","generateArray","val","RatingsComponent_div_2_Template","RatingsComponent_div_3_Template","ctx_r1","QuestionComponent_ng_container_1_mat_error_3_Template","item_r4","_r3","QuestionComponent_div_11_option_2_Template","typeOptions","QuestionComponent","valid","checkop","reduce","acc","QuestionComponent_ng_container_1_Template","QuestionComponent_ng_template_2_Template","QuestionComponent_ng_container_5_Template","QuestionComponent_ng_container_6_Template","QuestionComponent_ng_container_7_Template","QuestionComponent_ng_container_8_Template","QuestionComponent_ng_container_9_Template","QuestionComponent_ng_container_10_Template","QuestionComponent_div_11_Template","previewTitle_r5","BuildingListItemService","loading","_loading","stats","_stats","loading$","asObservable","lives","drafts","responses","stats$","initStats","building_id","_this","_asyncToGenerator","surveys","getBuildingSurveys","resArr","s","trigger","getSurveyResponses","res","forkJoin","arr","curr","toPromise","querySurveys","first","catchError","err","notifyError","of","survey_id","queryAnswers","answers","jDH","building","image","stats_r3","BuildingListItemComponent_ng_container_11_ng_container_1_Template","BuildingListItemComponent","_settings","router","service","shareReplay","navigate","includes","i2","i3","BuildingListItemComponent_div_1_Template","BuildingListItemComponent_div_2_Template","BuildingListItemComponent_ng_container_11_Template","BuildingListItemComponent_ng_template_19_Template","address","display_name","tmp_5_0","loadState_r4","building_r1","BuildingListComponent","_org","buildings$","building_list","BuildingListComponent_div_6_Template","tmp_0_0","NotFoundComponent","url","_c0","_c1","_c2","a0","model","_c3","a1","default","ActionComponent_ng_template_0_ng_container_2_Template","ActionComponent_ng_template_0_ng_template_3_Template","ActionComponent_ng_template_0_Template","ctx_r0","getActionRootCss","needSeparator","component","_c4","ActionBarComponent_ng_template_0_div_0_ng_container_2_Template","action_r3","ActionBarComponent_ng_template_0_div_0_Template","onClick","getRootCss","renderedActions","ActionBarComponent_ng_template_0_Template","hasActions","_c5","a2","a3","a4","minWidth","_c6","PopupBaseContainerComponent_ng_container_3_ng_template_1_Template","PopupBaseContainerComponent_ng_container_3_Template","popupHeaderTemplate","PopupBaseContainerComponent_div_5_Template","PopupBaseContainerComponent_ng_template_8_Template","PopupBaseContainerComponent_div_9_Template","footerToolbar","_c7","_c8","DynamicHeadComponent_ng_template_0_h1_1_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h1_1_Template","titleContent_r1","cssTitle","ariaTitleId","titleTabIndex","titleAriaExpanded","titleAriaRole","ariaLabel","DynamicHeadComponent_ng_template_0_h2_2_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h2_2_Template","DynamicHeadComponent_ng_template_0_h3_3_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h3_3_Template","DynamicHeadComponent_ng_template_0_h4_4_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h4_4_Template","DynamicHeadComponent_ng_template_0_h5_5_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h5_5_Template","DynamicHeadComponent_ng_template_0_h6_6_ng_container_1_Template","DynamicHeadComponent_ng_template_0_h6_6_Template","DynamicHeadComponent_ng_template_0_ng_template_7_Template","DynamicHeadComponent_ng_template_0_Template","tagName","SurveyStringComponent_ng_template_0_Template","ElementTitleActionsComponent_ng_template_0_ng_container_0_ng_container_1_Template","ElementTitleActionsComponent_ng_template_0_ng_container_0_Template","elementTitleContent_r1","ElementTitleActionsComponent_ng_template_0_ng_container_1_ng_container_3_Template","ElementTitleActionsComponent_ng_template_0_ng_container_1_Template","getTitleToolbar","ElementTitleActionsComponent_ng_template_0_ng_template_2_sv_ng_string_0_Template","locTitle","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_1_Template","cssClasses","requiredText","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_2_Template","cssTitleNumber","no","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_3_Template","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_4_Template","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_5_Template","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_7_Template","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_span_8_Template","ElementTitleActionsComponent_ng_template_0_ng_template_2_ng_container_1_Template","isRequireTextOnStart","isRequireTextBeforeTitle","isRequireTextAfterTitle","ElementTitleActionsComponent_ng_template_0_ng_template_2_Template","isTitleRenderedAsString","ElementTitleActionsComponent_ng_template_0_Template","hasTitleActions","ElementTitleComponent_ng_template_0_sv_ng_dynamic_head_0_Template","titleTagName","ElementTitleComponent_ng_template_0_Template","hasTitle","_c9","_c10","SurveyHeaderComponent_0_ng_template_0_Template","SurveyHeaderComponent_0_Template","survey","getElementWrapperComponentName","getElementWrapperComponentData","SurveyHeaderComponent_div_1_div_2_Template","css","locDescription","SurveyHeaderComponent_div_1_Template","headerText","titleMaxWidth","renderedHasDescription","SurveyHeaderComponent_2_ng_template_0_Template","SurveyHeaderComponent_2_Template","_c11","_c12","error","ErrorsComponent_ng_container_0_ng_template_1_Template","ErrorsComponent_ng_container_0_Template","error_r1","questionErrorComponent","ElementComponent_ng_template_0_div_0_ng_template_2_Template","ElementComponent_ng_template_0_div_0_Template","focusIn","rootStyle","questionWrapper","componentName","componentData","ElementComponent_ng_template_0_Template","_c13","RowComponent_ng_template_0_ng_container_2_sv_ng_element_1_Template","element_r1","RowComponent_ng_template_0_ng_container_2_2_ng_template_0_Template","RowComponent_ng_template_0_ng_container_2_2_Template","skeletonComponentName","RowComponent_ng_template_0_ng_container_2_Template","row","isNeedRender","RowComponent_ng_template_0_Template","getRowCss","visibleElements","trackElementBy","_c14","_c15","PageComponent_ng_template_0_ng_container_0_div_4_Template","page","PageComponent_ng_template_0_ng_container_0_div_5_Template","PageComponent_ng_template_0_ng_container_0_ng_container_6_ng_template_1_Template","row_r2","PageComponent_ng_template_0_ng_container_0_ng_container_6_Template","getRowWrapperComponentName","getRowWrapperComponentData","PageComponent_ng_template_0_ng_container_0_Template","cssRoot","_showDescription","hasVisibleErrors","visibleRows","PageComponent_ng_template_0_Template","isVisible","_c16","visibility","NotifierComponent_ng_template_0_ng_container_0_Template","notifier","active","message","actionBar","NotifierComponent_ng_template_0_Template","isDisplayed","_c17","_c18","needRenderWrapper","_c19","_c20","_c21","_c22","_c23","_c24","_c25","_c26","SurveyContentComponent_ng_template_0_div_0_sv_svg_bundle_2_Template","SurveyContentComponent_ng_template_0_div_0_div_4_Template","backgroundImageStyle","rootBackgroundImage","SurveyContentComponent_ng_template_0_div_0_div_8_Template","header","SurveyContentComponent_ng_template_0_div_0_ng_template_9_Template","SurveyContentComponent_ng_template_0_div_0_div_10_ng_template_1_Template","SurveyContentComponent_ng_template_0_div_0_div_10_ng_template_3_Template","SurveyContentComponent_ng_template_0_div_0_div_10_ng_template_5_Template","SurveyContentComponent_ng_template_0_div_0_div_10_ng_container_6_Template","activePage","SurveyContentComponent_ng_template_0_div_0_div_10_ng_template_7_Template","SurveyContentComponent_ng_template_0_div_0_div_10_ng_template_8_Template","SurveyContentComponent_ng_template_0_div_0_div_10_Template","bodyContainerCss","bodyCss","renderedWidth","SurveyContentComponent_ng_template_0_div_0_ng_template_11_Template","SurveyContentComponent_ng_template_0_div_0_div_12_Template","completedCss","processedCompletedHtml","SurveyContentComponent_ng_template_0_div_0_13_ng_template_0_Template","SurveyContentComponent_ng_template_0_div_0_13_Template","SurveyContentComponent_ng_template_0_div_0_div_14_Template","completedBeforeCss","processedCompletedBeforeHtml","SurveyContentComponent_ng_template_0_div_0_div_15_Template","loadingBodyCss","processedLoadingHtml","SurveyContentComponent_ng_template_0_div_0_div_16_Template","bodyEmpty","emptySurveyText","SurveyContentComponent_ng_template_0_div_0_sv_brand_info_17_Template","SurveyContentComponent_ng_template_0_div_0_Template","themeVariables","locale","localeDir","needRenderIcons","wrapperFormCss","renderBackgroundImage","hasLogo","headerView","renderedHasHeader","isShowingPage","showCompletedPage","showBrandInfo","SurveyContentComponent_ng_template_0_Template","_c27","_c28","_c29","ElementHeaderComponent_div_1_Template","cssDescription","hasDescription","ariaDescriptionId","ElementHeaderComponent_ng_container_2_Template","additionalTitleToolbar","SurveyCommentComponent_textarea_0_Template","onCommentChange","onCommentInput","other","resizeStyle","commentId","comment","isInputReadOnly","getOthersMaxLength","ariaRequired","a11y_input_ariaRequired","a11y_input_ariaLabel","renderedCommentPlaceholder","commentAreaRows","SurveyCommentComponent_div_1_Template","_c30","_c31","QuestionComponent_ng_template_0_div_0_div_2_Template","QuestionComponent_ng_template_0_div_0_div_3_Template","QuestionComponent_ng_template_0_div_0_ng_template_4_div_1_Template","QuestionComponent_ng_template_0_div_0_ng_template_4_ng_template_2_Template","QuestionComponent_ng_template_0_div_0_ng_template_4_div_3_Template","getCommentAreaCss","locCommentText","QuestionComponent_ng_template_0_div_0_ng_template_4_div_4_Template","QuestionComponent_ng_template_0_div_0_ng_template_4_div_5_Template","QuestionComponent_ng_template_0_div_0_ng_template_4_Template","cssContent","renderedIsExpanded","showErrorOnTop","getComponentName","hasComment","showErrorOnBottom","hasDescriptionUnderInput","QuestionComponent_ng_template_0_div_0_div_5_Template","QuestionComponent_ng_template_0_div_0_div_6_Template","QuestionComponent_ng_template_0_div_0_Template","getRootStyle","ariaRole","ariaInvalid","ariaLabelledBy","ariaDescribedBy","ariaExpanded","showErrorsAboveQuestion","hasTitleOnLeftTop","getQuestionContentWrapperComponentName","getQuestionContentWrapperComponentData","hasTitleOnBottom","showErrorsBelowQuestion","QuestionComponent_ng_template_0_Template","StringViewerComponent_span_0_Template","renderedHtml","StringViewerComponent_span_1_Template","_c32","_c33","_c34","_c35","DropdownComponent_div_1_div_1_Template","hintPrefix","dropdownModel","hintStringPrefix","DropdownComponent_div_1_div_3_Template","hintSuffix","inputStringRendered","hintStringSuffix","DropdownComponent_div_1_ng_container_4_ng_template_1_Template","DropdownComponent_div_1_ng_container_4_Template","inputFieldComponentName","getSelectedAction","DropdownComponent_div_1_sv_ng_string_5_Template","selectedItemLocText","DropdownComponent_div_1_div_8_Template","cleanButton","showClearButton","cleanButtonIconId","cleanButtonSvg","clearCaption","DropdownComponent_div_1_Template","blur","keyhandler","inputChange","focus","getControlClass","noTabIndex","isDisabledAttr","inputId","ariaErrormessage","listElementId","ariaActivedescendant","showHintPrefix","controlValue","showHintString","showInputFieldComponent","showSelectedItemLocText","filterStringInput","filterStringEnabled","getInputId","inputMode","a11y_input_ariaLabelledBy","a11y_input_ariaDescribedBy","placeholderRendered","filterReadOnly","allowClear","DropdownComponent_sv_ng_popup_2_Template","popupModel","DropdownComponent_div_3_sv_ng_string_1_Template","DropdownComponent_div_3_Template","readOnlyText","DropdownComponent_div_4_Template","_r4","chevronPointerDown","chevronButton","chevronButtonIconId","chevronButtonSvg","TagboxFilterComponent_ng_template_0_div_1_Template","TagboxFilterComponent_ng_template_0_div_3_Template","TagboxFilterComponent_ng_template_0_Template","inputKeyHandler","onBlur","onFocus","hint","hintSuffixWrapper","filterStringPlaceholder","_c36","TagboxComponent_div_1_ng_container_2_sv_ng_tagbox_item_1_Template","TagboxComponent_div_1_ng_container_2_Template","selectedChoices","TagboxComponent_div_1_ng_template_3_Template","TagboxComponent_div_1_div_4_Template","TagboxComponent_div_1_Template","isEmpty","TagboxComponent_sv_ng_popup_2_Template","TagboxComponent_div_3_sv_ng_string_1_Template","locReadOnlyText","TagboxComponent_div_3_Template","TagboxComponent_div_4_Template","_r5","DropdownOptionItemComponent_ng_template_0_ng_template_2_Template","DropdownOptionItemComponent_ng_template_0_Template","isEnabled","SurveyCommentOtherComponent_textarea_0_Template","onOtherValueChange","onOtherValueInput","otherId","otherValue","otherPlaceholder","SurveyCommentOtherComponent_div_1_Template","_c37","_c38","DropdownSelectComponent_select_2_option_1_Template","DropdownSelectComponent_select_2_2_ng_template_0_Template","DropdownSelectComponent_select_2_2_Template","DropdownSelectComponent_select_2_Template","editableValue","click","keyup","autocomplete","visibleChoices","DropdownSelectComponent_div_3_Template","DropdownSelectComponent_div_4_Template","DropdownSelectComponent_div_5_Template","isFlowLayout","LogoImageComponent_ng_template_0_Template","logoClassNames","logoImage","renderedStyleLogoWidth","renderedStyleLogoHeight","logoFit","locLogo","renderedLogoWidth","renderedLogoHeight","CharacterCounterComponent_ng_template_0_Template","remainingCharacterCounter","TextQuestionComponent_ng_container_0_Template","input_r1","TextQuestionComponent_div_1_option_3_Template","TextQuestionComponent_div_1_Template","dataListId","dataList","TextQuestionComponent_div_2_Template","TextQuestionComponent_ng_template_3_sv_ng_character_counter_3_Template","characterCounter","TextQuestionComponent_ng_template_3_Template","onChange","onKeyUp","onKeyDown","onCompositionUpdate","inputStyle","inputType","isReadOnlyAttr","renderedPlaceholder","renderedInputSize","getMaxLength","renderedMin","renderedMax","renderedStep","a11y_input_ariaInvalid","a11y_input_ariaErrormessage","SelectBaseComponent_legend_2_Template","SelectBaseComponent_ng_container_3_ng_container_1_ng_template_1_Template","SelectBaseComponent_ng_container_3_ng_container_1_Template","item_r2","getItemValueComponentName","getItemValueComponentData","SelectBaseComponent_ng_container_3_Template","headItems","trackItemBy","SelectBaseComponent_ng_container_4_ng_container_1_ng_template_1_Template","SelectBaseComponent_ng_container_4_ng_container_1_Template","SelectBaseComponent_ng_container_4_Template","bodyItems","SelectBaseComponent_div_5_ng_container_1_ng_template_1_Template","SelectBaseComponent_div_5_ng_container_1_Template","SelectBaseComponent_div_5_Template","rootRow","dataChoices","SelectBaseComponent_ng_container_6_div_2_ng_container_1_ng_template_1_Template","SelectBaseComponent_ng_container_6_div_2_ng_container_1_Template","item_r5","SelectBaseComponent_ng_container_6_div_2_Template","column_r6","getColumnClass","SelectBaseComponent_ng_container_6_Template","rootMultiColumn","columns","trackColumnBy","SelectBaseComponent_ng_container_7_ng_container_1_ng_template_1_Template","SelectBaseComponent_ng_container_7_ng_container_1_Template","item_r7","SelectBaseComponent_ng_container_7_Template","footItems","SelectBaseComponent_div_8_Template","SelectBaseComponent_div_9_Template","_r8","clearValue","clearButton","clearButtonCaption","RadiogroupComponent_legend_2_Template","RadiogroupComponent_ng_container_3_ng_container_1_ng_template_1_Template","RadiogroupComponent_ng_container_3_ng_container_1_Template","RadiogroupComponent_ng_container_3_Template","RadiogroupComponent_ng_container_4_ng_container_1_ng_template_1_Template","RadiogroupComponent_ng_container_4_ng_container_1_Template","RadiogroupComponent_ng_container_4_Template","RadiogroupComponent_div_5_ng_container_1_ng_template_1_Template","RadiogroupComponent_div_5_ng_container_1_Template","RadiogroupComponent_div_5_Template","RadiogroupComponent_ng_container_6_div_2_ng_container_1_ng_template_1_Template","RadiogroupComponent_ng_container_6_div_2_ng_container_1_Template","RadiogroupComponent_ng_container_6_div_2_Template","RadiogroupComponent_ng_container_6_Template","RadiogroupComponent_ng_container_7_ng_container_1_ng_template_1_Template","RadiogroupComponent_ng_container_7_ng_container_1_Template","RadiogroupComponent_ng_container_7_Template","RadiogroupComponent_div_8_Template","RadiogroupComponent_div_9_Template","CheckboxComponent_legend_2_Template","CheckboxComponent_ng_container_3_ng_container_1_ng_template_1_Template","CheckboxComponent_ng_container_3_ng_container_1_Template","CheckboxComponent_ng_container_3_Template","CheckboxComponent_ng_container_4_ng_container_1_ng_template_1_Template","CheckboxComponent_ng_container_4_ng_container_1_Template","CheckboxComponent_ng_container_4_Template","CheckboxComponent_div_5_ng_container_1_ng_template_1_Template","CheckboxComponent_div_5_ng_container_1_Template","CheckboxComponent_div_5_Template","CheckboxComponent_ng_container_6_div_2_ng_container_1_ng_template_1_Template","CheckboxComponent_ng_container_6_div_2_ng_container_1_Template","CheckboxComponent_ng_container_6_div_2_Template","CheckboxComponent_ng_container_6_Template","CheckboxComponent_ng_container_7_ng_container_1_ng_template_1_Template","CheckboxComponent_ng_container_7_ng_container_1_Template","CheckboxComponent_ng_container_7_Template","CheckboxComponent_div_8_Template","CheckboxComponent_div_9_Template","DropdownQuestionComponent_div_3_Template","TagboxQuestionComponent_div_3_Template","_c39","RatingQuestionComponent_span_4_Template","minText","locMinRateDescription","RatingQuestionComponent_5_ng_template_0_Template","RatingQuestionComponent_5_Template","index_r3","itemComponent","RatingQuestionComponent_span_6_Template","maxText","locMaxRateDescription","BooleanQuestionComponent_span_8_Template","sliderText","getCheckedLabel","ImagePickerItemComponent_ng_template_0_span_5__svg_svg_1_Template","checkedItemSvgIcon","checkedItemSvgIconId","ImagePickerItemComponent_ng_template_0_span_5_Template","checkedItemDecorator","ImagePickerItemComponent_ng_template_0_img_6_Template","onContentLoaded","onErrorHandler","imageFit","locImageLink","renderedImageWidth","renderedImageHeight","locText","ImagePickerItemComponent_ng_template_0_video_7_Template","ImagePickerItemComponent_ng_template_0_div_8__svg_svg_1_Template","itemNoImageSvgIcon","itemNoImageSvgIconId","ImagePickerItemComponent_ng_template_0_div_8_Template","itemNoImage","ImagePickerItemComponent_ng_template_0_span_9_Template","itemText","ImagePickerItemComponent_ng_template_0_Template","getItemClass","label","itemControl","getItemId","isItemSelected","getItemEnabled","questionName","itemDecorator","imageContainer","contentNotLoaded","contentMode","showLabel","ImagePickerQuestionComponent_ng_container_4_ng_container_1_ng_template_1_Template","ImagePickerQuestionComponent_ng_container_4_ng_container_1_Template","item_r1","ImagePickerQuestionComponent_ng_container_4_Template","ImagePickerQuestionComponent_ng_container_5_div_1_ng_container_1_ng_template_1_Template","ImagePickerQuestionComponent_ng_container_5_div_1_ng_container_1_Template","ImagePickerQuestionComponent_ng_container_5_div_1_Template","column_r4","ImagePickerQuestionComponent_ng_container_5_Template","_c40","ComponentsContainerComponent_ng_template_0_ng_container_0_div_1_ng_container_1_ng_template_1_Template","ComponentsContainerComponent_ng_template_0_ng_container_0_div_1_ng_container_1_Template","component_r1","ComponentsContainerComponent_ng_template_0_ng_container_0_div_1_Template","components","ComponentsContainerComponent_ng_template_0_ng_container_0_Template","ComponentsContainerComponent_ng_template_0_ng_container_1_ng_container_1_ng_template_1_Template","ComponentsContainerComponent_ng_template_0_ng_container_1_ng_container_1_Template","component_r3","ComponentsContainerComponent_ng_template_0_ng_container_1_Template","ComponentsContainerComponent_ng_template_0_Template","isNeedRenderWrapper","_c41","processEsc","disableTabStop","ActionBarItemComponent_ng_template_0__svg_svg_1_Template","itemIcon","iconName","iconSize","tooltip","ActionBarItemComponent_ng_template_0_span_2_Template","getActionBarItemTitleCss","ActionBarItemComponent_ng_template_0_ng_template_3_Template","ActionBarItemComponent_ng_template_0_Template","doAction","doMouseDown","doFocus","getActionBarItemCss","ariaChecked","ActionBarItemDropdownComponent_ng_template_0__svg_svg_1_Template","ActionBarItemDropdownComponent_ng_template_0_span_2_Template","ActionBarItemDropdownComponent_ng_template_0_Template","action","getIsTrusted","getTarget","SelectBaseItemComponent_ng_template_0_label_2_ng_container_1_Template","SelectBaseItemComponent_ng_template_0_label_2_Template","itemDecorator_r1","getLabelClass","SelectBaseItemComponent_ng_template_0_label_3_ng_container_1_Template","SelectBaseItemComponent_ng_template_0_label_3_Template","onMouseDown","SelectBaseItemComponent_ng_template_0_ng_template_4_span_0__svg_svg_1_Template","itemSvgIcon","SelectBaseItemComponent_ng_template_0_ng_template_4_span_0_Template","materialDecorator","SelectBaseItemComponent_ng_template_0_ng_template_4_span_1_Template","getControlLabelClass","SelectBaseItemComponent_ng_template_0_ng_template_4_Template","hideCaption","SelectBaseItemComponent_ng_template_0_Template","SkeletonComponent_ng_template_0_Template","TimerPanelComponent_div_0__svg_svg_1_Template","getProgressCss","circleLength","progress","TimerPanelComponent_div_0_span_5_Template","minorTextCss","clockMinorText","TimerPanelComponent_div_0_Template","rootCss","showProgress","textContainerCss","majorTextCss","clockMajorText","TimerPanelComponent_div_1_Template","getCss","timerRoot","_c42","listModel","ListItemComponent_ng_template_0_ng_container_1_Template","itemSeparator","ListItemComponent_ng_template_0_ng_template_3_Template","ListItemComponent_ng_template_0_Template","pointerdown","onItemHover","onItemLeave","class","isItemVisible","elementId","ariaSelected","itemBody","paddingLeft","calculatedText","_c43","ListComponent_ng_template_0_div_2_button_4_Template","onClickSearchClearButton","searchClearButtonIcon","ListComponent_ng_template_0_div_2_Template","filterString","onGoToItems","filterIcon","filterInput","showSearchClearButton","ListComponent_ng_template_0_ul_6_sv_ng_list_item_1_Template","ListComponent_ng_template_0_ul_6_Template","onMouseMove","getListClass","ListComponent_ng_template_0_Template","showFilter","emptyContainer","emptyText","emptyMessage","renderElements","ListItemContentComponent_ng_template_0__svg_svg_0_Template","ListItemContentComponent_ng_template_0__svg_svg_2_Template","itemMarkerIcon","markerIconName","markerIconSize","ListItemContentComponent_ng_template_0_Template","ListItemGroupComponent_ng_template_0_Template","RatingItemComponent_ng_template_0_Template","getItemClassByText","itemValue","RatingItemStarComponent_ng_template_0_Template","onItemMouseIn","onItemMouseOut","highlight","itemStarIcon","itemStarIconAlt","RatingItemSmileyComponent_ng_template_0_Template","getItemStyle","getItemSmileyIconName","RatingDropdownItemComponent_ng_template_0_ng_container_3_Template","RatingDropdownItemComponent_ng_template_0_Template","BooleanCheckboxComponent__svg_svg_5_Template","checkboxItemDecorator","svgIcon","BooleanCheckboxComponent_span_7_Template","checkboxControlLabel","labelRenderedAriaID","BooleanCheckboxComponent_div_8_Template","BooleanRadioItemComponent_span_3__svg_svg_1_Template","itemRadioDecorator","BooleanRadioItemComponent_span_3_Template","materialRadioDecorator","BooleanRadioComponent_sv_ng_boolean_radio_item_2_Template","locLabelTrue","BooleanRadioComponent_sv_ng_boolean_radio_item_4_Template","ProgressDefaultComponent_ng_template_0_Template","getProgressCssClasses","progressBar","progressValue","getProgressTextInBarCss","progressText","getProgressTextUnderBarCss","_c44","ProgressButtonsComponent_div_1_Template","progressButtonsHeader","progressButtonsPageTitle","ProgressButtonsComponent_li_7_div_2_Template","page_r5","renderedNavigationTitle","locNavigationTitle","ProgressButtonsComponent_li_7_div_3_Template","progressButtonsPageDescription","locNavigationDescription","ProgressButtonsComponent_li_7_Template","ctx_r3","index_r6","isListElementClickable","clickListElement","getListElementCss","getItemNumber","progressButtonsConnector","canShowItemTitles","progressButtonsButton","progressButtonsButtonBackground","progressButtonsButtonContent","ProgressButtonsComponent_div_9_Template","progressButtonsFooter","footerText","ProgressTocComponent_ng_template_0_sv_ng_list_1_Template","ProgressTocComponent_ng_template_0_div_2_Template","togglePopup","icon","ProgressTocComponent_ng_template_0_Template","containerCss","isMobile","_c45","PanelComponent_ng_template_0_div_0_div_2_Template","PanelComponent_ng_template_0_div_0_div_3_Template","PanelComponent_ng_template_0_div_0_div_4_Template","PanelComponent_ng_template_0_div_0_div_5_ng_container_1_ng_template_1_Template","row_r3","PanelComponent_ng_template_0_div_0_div_5_ng_container_1_Template","PanelComponent_ng_template_0_div_0_div_5_Template","panel","content","innerPaddingLeft","contentId","trackRowBy","getFooterToolbar","PanelComponent_ng_template_0_div_0_Template","getContainerCss","showErrorsAbovePanel","PanelComponent_ng_template_0_Template","canRender","SurveyNavigationButton_input_0_Template","buttonMouseDown","innerCss","getTooltip","FilePreviewComponent_ng_template_0_ng_container_0_span_2_div_1_Template","val_r4","doDownloadFile","fileSign","imageWidth","FilePreviewComponent_ng_template_0_ng_container_0_span_2_img_3_Template","imageHeight","FilePreviewComponent_ng_template_0_ng_container_0_span_2__svg_svg_4_Template","defaultImageIconId","defaultImage","FilePreviewComponent_ng_template_0_ng_container_0_span_2_div_5__svg_svg_3_Template","removeFileCaption","removeFileSvg","removeFileSvgIconId","FilePreviewComponent_ng_template_0_ng_container_0_span_2_div_5_Template","doRemoveFile","getRemoveButtonCss","removeFile","FilePreviewComponent_ng_template_0_ng_container_0_span_2_div_6_Template","_r6","fileSignBottom","FilePreviewComponent_ng_template_0_ng_container_0_span_2_Template","doDownloadFileFromContainer","index_r7","previewItem","isPreviewVisible","getImageWrapperCss","canPreviewImage","isReadOnly","FilePreviewComponent_ng_template_0_ng_container_0_Template","fileList","previewValue","trackFilesFn","FilePreviewComponent_ng_template_0_Template","showPreviewContainer","_c46","_c47","cellChangedOwner","column","columnIndex","MatrixQuestionComponent_ng_template_0_thead_6_td_2_Template","MatrixQuestionComponent_ng_template_0_thead_6_th_3_ng_template_1_Template","column_r1","MatrixQuestionComponent_ng_template_0_thead_6_th_3_Template","columnMinWidth","headerCell","getColumnHeaderWrapperComponentName","getColumnHeaderWrapperComponentData","MatrixQuestionComponent_ng_template_0_thead_6_Template","hasRows","visibleColumns","MatrixQuestionComponent_ng_template_0_tr_8_td_1_ng_template_1_Template","MatrixQuestionComponent_ng_template_0_tr_8_td_1_Template","rowTitleWidth","rowTextClasses","getRowHeaderWrapperComponentName","getRowHeaderWrapperComponentData","MatrixQuestionComponent_ng_template_0_tr_8_ng_container_2_td_1_Template","column_r5","onCellChanged","getCellDisplayLocText","MatrixQuestionComponent_ng_template_0_tr_8_ng_container_2_Template","MatrixQuestionComponent_ng_template_0_tr_8_ng_container_3_td_1_ng_template_1_Template","MatrixQuestionComponent_ng_template_0_tr_8_ng_container_3_td_1_Template","columnIndex_r7","cell","cellComponent","MatrixQuestionComponent_ng_template_0_tr_8_ng_container_3_Template","trackColumnByFn","MatrixQuestionComponent_ng_template_0_tr_8_Template","rowClasses","hasCellText","MatrixQuestionComponent_ng_template_0_Template","tableWrapper","getTableCss","showHeader","trackRowByFn","ChooseFileBtn_ng_template_0__svg_svg_1_Template","chooseButtonText","chooseFileIconId","ChooseFileBtn_ng_template_0_Template","chooseFile","getChooseFileCss","LoadingIndicatorComponent_ng_template_0_Template","_c48","_c49","_c50","FileQuestionComponent_input_2_Template","fileInput","multipleRendered","inputTitle","acceptedTypes","renderCapture","FileQuestionComponent_input_3_Template","getReadOnlyFileCss","FileQuestionComponent_input_4_Template","FileQuestionComponent_div_6_sv_ng_choose_file_btn_3_Template","FileQuestionComponent_div_6_sv_ng_action_bar_4_Template","actionsContainer","FileQuestionComponent_div_6_span_5_Template","noFileChosen","noFileChosenCaption","FileQuestionComponent_div_6_Template","getFileDecoratorCss","dragAreaPlaceholder","locRenderedPlaceholder","showChooseButton","actionsContainerVisible","FileQuestionComponent_ng_container_7_Template","loadingIndicator","FileQuestionComponent_ng_container_8_ng_container_1_Template","FileQuestionComponent_ng_container_8_Template","fileVideo_r3","FileQuestionComponent_ng_container_9_ng_container_1_Template","FileQuestionComponent_ng_container_9_Template","fileCleanButton_r4","showRemoveButton","FileQuestionComponent_ng_container_10_ng_template_1_Template","FileQuestionComponent_ng_container_10_Template","FileQuestionComponent_ng_container_11_ng_container_1_Template","FileQuestionComponent_ng_container_11_Template","showRemoveButtonBottom","FileQuestionComponent_sv_action_bar_12_Template","fileNavigator","FileQuestionComponent_ng_template_13__svg_svg_3_Template","removeButtonIconId","FileQuestionComponent_ng_template_13_Template","doClean","css_r6","FileQuestionComponent_ng_template_15_Template","videoContainer","changeCameraAction","closeCameraAction","video","videoId","takePictureAction","CommentQuestionComponent_textarea_0_Template","onInput","cols","rows","CommentQuestionComponent_sv_ng_character_counter_1_Template","CommentQuestionComponent_div_2_Template","SignaturePadQuestionComponent_img_4_Template","backgroundImage","renderedCanvasWidth","SignaturePadQuestionComponent_div_6_span_2_Template","SignaturePadQuestionComponent_div_6__svg_svg_3_Template","clearButtonIconId","SignaturePadQuestionComponent_div_6_Template","controls","SignaturePadQuestionComponent_ng_container_7_Template","_c51","MultipleTextItemComponent_ng_container_0_span_3_Template","editor","MultipleTextItemComponent_ng_container_0_span_5_Template","MultipleTextItemComponent_ng_container_0_span_6_Template","MultipleTextItemComponent_ng_container_0_Template","getItemLabelCss","itemTitleWidth","getItemTitleCss","getItemCss","MultipleTextItemComponent_ng_container_1_div_1_Template","MultipleTextItemComponent_ng_container_1_Template","MultipleTextRowComponent_ng_template_0_tr_0_ng_container_1_Template","cell_r1","MultipleTextRowComponent_ng_template_0_tr_0_Template","cells","MultipleTextRowComponent_ng_template_0_Template","MultipleTextComponent_ng_container_3_Template","row_r1","RankingQuestionComponent_div_0_ng_container_2_ng_template_1_Template","RankingQuestionComponent_div_0_ng_container_2_Template","index_r2","RankingQuestionComponent_div_0_Template","rootClass","renderedRankingChoices","RankingQuestionComponent_div_1_ng_container_3_ng_template_1_Template","RankingQuestionComponent_div_1_ng_container_3_Template","index_r5","RankingQuestionComponent_div_1_div_4_Template","containerPlaceholder","locSelectToRankEmptyRankedAreaText","RankingQuestionComponent_div_1_ng_container_7_ng_template_1_Template","RankingQuestionComponent_div_1_ng_container_7_Template","RankingQuestionComponent_div_1_div_8_Template","locSelectToRankEmptyUnrankedAreaText","RankingQuestionComponent_div_1_Template","getContainerClasses","renderedUnRankingChoices","containersDivider","_c52","RankingItemComponent_div_9_Template","getItemIndexClasses","getNumberByIndex","RankingItemComponent_ng_template_10_Template","dashSvgIcon","RankingItemComponent_ng_template_12_Template","RankingItemContentComponent_ng_template_0_Template","controlLabel","StringEditorComponent_span_0_Template","StringEditorComponent_span_1_Template","PanelDynamicAddBtn_button_0_Template","addPanelClick","getAddButtonCss","buttonAddText","locPanelAddText","_c53","_c54","_c55","PanelDynamicQuestionComponent_div_2_sv_ng_paneldynamic_add_btn_2_Template","PanelDynamicQuestionComponent_div_2_Template","noEntriesPlaceholder","locNoEntriesText","canAddPanel","PanelDynamicQuestionComponent_div_3_Template","PanelDynamicQuestionComponent_ng_container_4_Template","progress_r2","PanelDynamicQuestionComponent_ng_container_6_ng_template_2_Template","PanelDynamicQuestionComponent_ng_container_6_ng_container_3_ng_template_1_Template","PanelDynamicQuestionComponent_ng_container_6_ng_container_3_Template","panel_r3","PanelDynamicQuestionComponent_ng_container_6_hr_4_Template","separator","PanelDynamicQuestionComponent_ng_container_6_Template","index_r4","getPanelWrapperCss","getPanelComponentName","getPanelComponentData","panelRemoveButtonLocation","canRemovePanel","showSeparator","PanelDynamicQuestionComponent_ng_container_7_Template","PanelDynamicQuestionComponent_sv_ng_paneldynamic_add_btn_8_Template","PanelDynamicQuestionComponent_ng_container_9_Template","progressV2_r5","PanelDynamicQuestionComponent_ng_template_10_div_0_div_2_Template","PanelDynamicQuestionComponent_ng_template_10_div_0_div_3_Template","footerButtonsContainer","PanelDynamicQuestionComponent_ng_template_10_div_0_Template","footer","isRangeShowing","isProgressBottomShowing","visibleActions","PanelDynamicQuestionComponent_ng_template_10_Template","PanelDynamicQuestionComponent_ng_template_12_div_4_Template","PanelDynamicQuestionComponent_ng_template_12_Template","progressCssClass","progressContainer","TemplateRendererComponent_ng_template_0_ng_container_0_ng_template_1_Template","TemplateRendererComponent_ng_template_0_ng_container_0_Template","TemplateRendererComponent_ng_template_0_ng_container_1_ng_container_1_Template","TemplateRendererComponent_ng_template_0_ng_container_1_Template","contentTempl","TemplateRendererComponent_ng_template_0_Template","_c56","_c57","CustomWidgetComponent_div_2_Template","customHtml","CustomWidgetComponent_ng_container_3_ng_template_1_Template","CustomWidgetComponent_ng_container_3_Template","MatrixCellComponent__svg_svg_3_Template","MatrixCellComponent_span_4_Template","cellResponsiveTitle","MatrixDynamicDragDropIconComponent_ng_template_0__svg_svg_0_Template","dragElementDecorator","iconDragElement","MatrixDynamicDragDropIconComponent_ng_template_0_span_1_Template","MatrixDynamicDragDropIconComponent_ng_template_0_Template","_c58","_c59","MatrixDropdownCellComponent_ng_template_0_td_0_sv_ng_matrix_drag_drop_icon_2_Template","MatrixDropdownCellComponent_ng_template_0_td_0_sv_action_bar_3_Template","getData","MatrixDropdownCellComponent_ng_template_0_td_0_ng_container_4_ng_template_1_Template","MatrixDropdownCellComponent_ng_template_0_td_0_ng_container_4_Template","panelComponentName","panelComponentData","MatrixDropdownCellComponent_ng_template_0_td_0_div_5_Template","MatrixDropdownCellComponent_ng_template_0_td_0_span_6_Template","responsiveTitleCss","responsiveLocTitle","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_ng_container_1_ng_template_1_ng_template_0_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_ng_container_1_ng_template_1_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_ng_container_1_Template","getCellWrapperComponentName","getCellWrapperComponentData","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_2_ng_template_0_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_2_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_ng_container_3_ng_template_1_Template","isCheckbox","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_ng_container_3_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_div_4_Template","MatrixDropdownCellComponent_ng_template_0_td_0_div_7_Template","cellQuestionWrapperClassName","isChoice","isDefaultRendering","isItemChoice","isOtherChoice","MatrixDropdownCellComponent_ng_template_0_td_0_ng_container_8_ng_template_1_span_1_Template","cellRequiredText","MatrixDropdownCellComponent_ng_template_0_td_0_ng_container_8_ng_template_1_Template","isRequiredCell","MatrixDropdownCellComponent_ng_template_0_td_0_ng_container_8_Template","MatrixDropdownCellComponent_ng_template_0_td_0_Template","getCellStyle","getTitle","colSpans","isDragHandlerCell","isActionsCell","hasPanel","isErrorsCell","showResponsiveTitle","hasQuestion","MatrixDropdownCellComponent_ng_template_0_Template","MatrixRequiredHeader_ng_template_0_ng_container_0_Template","MatrixRequiredHeader_ng_template_0_Template","isRenderedRequired","MatrixRowComponent_ng_template_0_tr_0_sv_ng_matrixdropdown_cell_2_Template","cell_r3","MatrixRowComponent_ng_template_0_tr_0_Template","onPointerDown","trackCellBy","MatrixRowComponent_ng_template_0_Template","visible","_c60","overflowX","MatrixTableComponent_thead_3_ng_container_2_th_1_ng_template_1_sv_ng_matrixheaderrequired_1_Template","MatrixTableComponent_thead_3_ng_container_2_th_1_ng_template_1_Template","MatrixTableComponent_thead_3_ng_container_2_th_1_Template","MatrixTableComponent_thead_3_ng_container_2_td_2_Template","MatrixTableComponent_thead_3_ng_container_2_Template","MatrixTableComponent_thead_3_Template","table","headerRow","MatrixTableComponent_ng_container_5_Template","MatrixTableComponent_tfoot_6_sv_ng_matrixdropdown_cell_2_Template","cell_r4","MatrixTableComponent_tfoot_6_Template","footerRow","MatrixDropdownComponent_ng_template_0_sv_ng_matrix_table_0_Template","renderedTable","MatrixDropdownComponent_ng_template_0_Template","showTable","MatrixDynamicComponent_ng_template_0_div_2_ng_container_1_Template","MatrixDynamicComponent_ng_template_0_div_2_Template","addRowButton_r1","MatrixDynamicComponent_ng_template_0_sv_ng_matrix_table_3_Template","MatrixDynamicComponent_ng_template_0_div_4_ng_container_2_ng_container_1_Template","MatrixDynamicComponent_ng_template_0_div_4_ng_container_2_Template","MatrixDynamicComponent_ng_template_0_div_4_Template","emptyRowsSection","emptyRowsText","locEmptyRowsText","showAddRow","MatrixDynamicComponent_ng_template_0_div_5_ng_container_1_Template","MatrixDynamicComponent_ng_template_0_div_5_Template","MatrixDynamicComponent_ng_template_0_ng_template_6_Template","addRowUI","getAddRowButtonCss","locAddRowText","iconAdd","MatrixDynamicComponent_ng_template_0_Template","showAddRowOnTop","showAddRowOnBottom","_c61","objectFit","ImageQuestionComponent_img_2_Template","onLoadHandler","renderedStyleWidth","renderedStyleHeight","getImageCss","altText","renderedHeight","ImageQuestionComponent_video_3_Template","ImageQuestionComponent_iframe_4_Template","ImageQuestionComponent_div_5_Template","noImage","noImageSvgIconId","CustomQuestionComponent_ng_template_0_Template","_c62","maxWidth","HeaderCellComponent_ng_template_0_div_2_ng_template_2_Template","HeaderCellComponent_ng_template_0_div_2_Template","HeaderCellComponent_ng_template_0_div_3_Template","textAreaWidth","HeaderCellComponent_ng_template_0_div_4_div_1_Template","HeaderCellComponent_ng_template_0_div_4_Template","HeaderCellComponent_ng_template_0_Template","contentStyle","showLogo","showTitle","showDescription","HeaderMobileComponent_ng_template_0_div_1_ng_template_2_Template","HeaderMobileComponent_ng_template_0_div_1_Template","HeaderMobileComponent_ng_template_0_div_2_Template","renderedtextAreaWidth","HeaderMobileComponent_ng_template_0_div_3_div_1_Template","HeaderMobileComponent_ng_template_0_div_3_Template","HeaderMobileComponent_ng_template_0_Template","_c63","HeaderComponent_ng_template_0_div_0_div_1_Template","backgroundImageClasses","HeaderComponent_ng_template_0_div_0_div_2_ng_container_1_Template","cell_r2","HeaderComponent_ng_template_0_div_0_div_2_Template","contentClasses","HeaderComponent_ng_template_0_div_0_div_3_Template","HeaderComponent_ng_template_0_div_0_Template","headerClasses","HeaderComponent_ng_template_0_Template","EmbeddedViewContentComponent","viewContainerRef","_a","embeddedView","viewQuery","TemplateRef","_t","BaseAngular","changeDetectorRef","isModelSubsribed","isDestroyed","surveyModel","getModel","getSurvey","ngDoCheck","previousModel","unMakeBaseElementAngular","makeBaseElementAngular","onModelChanged","setIsRendering","isRendering","getIsRendering","stateElement","__ngImplemented","iteratePropertiesHash","hash","onArrayChanged","arrayChanges","setPropertyValueCoreHandler","enableOnElementRenderedEvent","disableOnElementRenderedEvent","beforeUpdate","getPropertiesToUpdateSync","afterUpdate","queueMicrotask","getChangeDetectorRef","getShouldReattachChangeDetector","isSync","afterRerender","ngAfterViewChecked","AngularComponentFactory","creatorHash","registerComponent","typeName","componentType","getAllTypes","isComponentRegistered","elementType","create","containerRef","resolver","resolveComponentFactory","Instance","DynamicComponentDirective","componentChanges","currentValue","previousValue","componentInstance","updateComponentData","Error","keys","ActionComponent","ɵActionComponent_BaseFactory","ViewContainerRef","actionContent","dependencies","ActionBarComponent","allowOnClick","handleClick","resetResponsivityManager","initResponsivityManager","ɵActionBarComponent_BaseFactory","VisibleDirective","el","show","hide","display","PopupBaseContainerComponent","detach","applyButtonText","popupModalModel","apply","isPositionSet","updateOnShowing","clickInside","clickOutside","styleClass","contentComponentName","contentComponentData","showFooter","PopupService","applicationRef","componentFactoryResolver","popupViewModel","portalHost","DomPortalOutlet","portal","ComponentPortal","setComponentElement","children","ModalComponent","popupService","functionDefined","showDialog","dialogOptions","createPopupModalViewModel","onVisibilityChanged","onVisibilityChangedCallback","_","settings","showModal","onApply","onCancel","cssClass","displayMode","createDialogOptions","_b","SvgBundleComponent","svgContainer","innerHTML","SvgRegistry","iconsRenderedHtml","DynamicHeadComponent","titleAriaLabel","ɵDynamicHeadComponent_BaseFactory","ngContentSelectors","SurveyStringComponent","renderAs","renderAsData","ElementTitleActionsComponent","isPanel","ɵElementTitleActionsComponent_BaseFactory","ElementTitleComponent","ɵElementTitleComponent_BaseFactory","SurveyHeaderComponent","afterRenderHeader","onChanged","attrs","isLogoBefore","renderedHasTitle","isLogoAfter","headerClose","ErrorsComponent","role","ariaLive","cssError","location","errors","ElementComponent","elementComponentName","setWrapperElement","ɵElementComponent_BaseFactory","ElementRef","RowComponent","cdr","vcr","ngZone","setRootElement","startLazyRendering","stopLazyRendering","isLazyRendering","PageComponent","pageContainerRef","afterRenderPage","ɵPageComponent_BaseFactory","BrandInfoComponent","NotifierComponent","getStateElement","ɵNotifierComponent_BaseFactory","SafeHtmlPipe","domSanitizer","bypassSecurityTrustHtml","ɵpipe","pure","SurveyContentComponent","arguments","isSurveyUpdated","destroyResizeObserver","renderCallback","afterRenderSurvey","rootEl","startTimerFromUI","ɵSurveyContentComponent_BaseFactory","i2$1","SurveyComponent","SvgIconComponent","viewContaierRef","createSvg","Survey","partCss","rootRole","document","createElementNS","QuestionAngular","afterRenderQuestionElement","elementContentRef","beforeDestroyQuestionElement","ɵQuestionAngular_BaseFactory","customWidget","getTemplate","ElementHeaderComponent","cssHeader","titleWidth","clickTitleFunction","hasDescriptionUnderTitle","hasAdditionalTitleToolbar","SurveyCommentComponent","isReadOnlyRenderDiv","afterRender","ɵQuestionComponent_BaseFactory","LocalizableString","defaultRenderer","StringViewerComponent","allowLineBreaks","clearOnChanged","hasHtml","PopupPointerComponent","ɵPopupPointerComponent_BaseFactory","pointerTarget","PopupComponent","resetComponentElement","createPopupViewModel","setContainerElement","getArea","QuestionSkeletonComponent","getType","DropdownComponent","dropdownListModel","onClear","keyHandler","updateInputDomElement","inputElementRef","control","Helpers","isTwoValueEquals","ɵDropdownComponent_BaseFactory","selectWrapper","TagboxFilterComponent","ɵTagboxFilterComponent_BaseFactory","TagboxItemComponent","deselectItem","ɵTagboxItemComponent_BaseFactory","cleanItemButton","cleanItemButtonIconId","cleanItemButtonSvg","TagboxComponent","DropdownMultiSelectListModel","DropdownOptionItemComponent","ɵDropdownOptionItemComponent_BaseFactory","SurveyCommentOtherComponent","DropdownSelectComponent","renderedValue","newValue","renderCssRoot","isOtherSelected","RendererFactory","registerRenderer","SafeUrlPipe","bypassSecurityTrustUrl","SafeResourceUrlPipe","bypassSecurityTrustResourceUrl","LogoImageComponent","ɵLogoImageComponent_BaseFactory","CharacterCounterComponent","ɵCharacterCounterComponent_BaseFactory","TextQuestionComponent","inputValue","ɵTextQuestionComponent_BaseFactory","HtmlQuestionComponent","locHtml","ɵHtmlQuestionComponent_BaseFactory","SelectBaseComponent","showLegend","getDefaultComponentName","getItemValueWrapperComponentName","getPropertyByName","isDefaultValue","getItemValueWrapperComponentData","ɵSelectBaseComponent_BaseFactory","getSelectBaseRootCss","a11y_input_ariaRole","hasHeadItems","hasColumns","blockedRow","hasFootItems","showClearButtonInContent","RadiogroupComponent","ɵRadiogroupComponent_BaseFactory","RadiogroupItemComponent","CheckboxComponent","ɵCheckboxComponent_BaseFactory","CheckboxItemComponent","clickItemHandler","checked","onSelectAllChange","toggleSelectAll","hasRequiredError","DropdownQuestionComponent","ɵDropdownQuestionComponent_BaseFactory","TagboxQuestionComponent","ɵTagboxQuestionComponent_BaseFactory","RatingQuestionComponent","trackByFn","setValueFromClick","ɵRatingQuestionComponent_BaseFactory","ratingRootCss","hasMinLabel","renderedRateItems","hasMaxLabel","BooleanQuestionComponent","booleanValue","ɵBooleanQuestionComponent_BaseFactory","onKeyDownCore","onLabelClick","swapOrder","onSwitchClickModel","isIndeterminate","sliderGhost","getLabelCss","locLabelLeft","switch","slider","isDeterminated","locLabelRight","ImagePickerItemComponent","multiSelect","concat","currValue","ɵImagePickerItemComponent_BaseFactory","ImagePickerQuestionComponent","ɵImagePickerQuestionComponent_BaseFactory","ComponentsContainerComponent","getContainerContent","ɵComponentsContainerComponent_BaseFactory","Key2ClickDirective","isSubscribed","assign","defaultOptions","onkeyup","evt","doKey2ClickUp","subscribeEventListeners","onkeydown","doKey2ClickDown","doKey2ClickBlur","tabIndex","bind","unsubscribeEventListeners","curValue","key2click","ActionBarItemComponent","ɵActionBarItemComponent_BaseFactory","ActionBarItemDropdownComponent","getActionDropdownButtonTarget","viewModel","ActionDropdownViewModel","ɵActionBarItemDropdownComponent_BaseFactory","SelectBaseItemComponent","ɵSelectBaseItemComponent_BaseFactory","SkeletonComponent","ɵSkeletonComponent_BaseFactory","TimerPanelComponent","circleLengthValue","ɵTimerPanelComponent_BaseFactory","isRunning","showTimerAsClock","ListItemComponent","getItemIndent","onItemClick","onLastItemRended","ɵListItemComponent_BaseFactory","ListComponent","goToItems","listContainerElement","initListContainerHtmlElement","ɵListComponent_BaseFactory","ListItemContentComponent","ɵListItemContentComponent_BaseFactory","ListItemGroupComponent","ɵListItemGroupComponent_BaseFactory","RatingItemComponent","ɵRatingItemComponent_BaseFactory","RatingItemStarComponent","ɵRatingItemStarComponent_BaseFactory","RatingItemSmileyComponent","ɵRatingItemSmileyComponent_BaseFactory","RatingDropdownItemComponent","ɵRatingDropdownItemComponent_BaseFactory","RatingDropdownComponent","rootDropdown","BooleanCheckboxComponent","rootCheckbox","getCheckboxItemCss","checkboxLabel","controlCheckbox","checkboxMaterialDecorator","isLabelRendered","canRenderLabelDescription","BooleanRadioItemComponent","getRadioItemClass","radioLabel","itemRadioControl","radioControlLabel","BooleanRadioComponent","rootRadio","radioFieldset","locLabelFalse","ProgressDefaultComponent","SurveyProgressModel","ɵProgressDefaultComponent_BaseFactory","ProgressButtonsComponent","hasScroller","canShowHeader","canShowFooter","onResize","onUpdateScroller","onUpdateSettings","showItemTitles","clickScrollButton","isLeftScroll","progressButtonsListContainer","respManager","ProgressButtonsResponsivityManager","progressWidth","progressButtonsContainer","getScrollButtonCss","progressButtonsList","visiblePages","ProgressTocComponent","ɵProgressTocComponent_BaseFactory","PanelComponent","panelContainerRef","afterRenderPanel","getIsContentVisible","ɵPanelComponent_BaseFactory","SurveyNavigationButton","mouseDown","FilePreviewComponent","ɵFilePreviewComponent_BaseFactory","MatrixQuestionComponent","visibleRowsChangedCallback","ɵMatrixQuestionComponent_BaseFactory","ChooseFileBtn","ɵChooseFileBtn_BaseFactory","LoadingIndicatorComponent","ɵLoadingIndicatorComponent_BaseFactory","FileQuestionComponent","ɵFileQuestionComponent_BaseFactory","onDragEnter","onDrop","onDragOver","onDragLeave","fileRootCss","hasFileUI","dragArea","showFileDecorator","showLoadingIndicator","isPlayingVideo","allowShowPreview","fileNavigatorVisible","CommentQuestionComponent","ɵCommentQuestionComponent_BaseFactory","SignaturePadQuestionComponent","ɵSignaturePadQuestionComponent_BaseFactory","needShowPlaceholder","canvas","canShowClearButton","MultipleTextItemComponent","registerFunctionOnPropertyValueChanged","unRegisterFunctionOnPropertyValueChanged","ɵMultipleTextItemComponent_BaseFactory","MultipleTextRowComponent","ɵMultipleTextRowComponent_BaseFactory","MultipleTextComponent","ɵMultipleTextComponent_BaseFactory","getQuestionRootCss","getRows","RankingQuestionComponent","unrankedItem","ɵRankingQuestionComponent_BaseFactory","selectToRankEnabled","RankingItemComponent","ɵRankingItemComponent_BaseFactory","handleKeydown","handlePointerDown","currentTarget","handlePointerUp","elseBlock_r3","getItemTabIndex","itemGhostNode","itemContent","itemIconContainer","getIconHoverCss","dragDropSvgIcon","getIconFocusCss","arrowsSvgIcon","RankingItemContentComponent","ɵRankingItemContentComponent_BaseFactory","editableRenderer","StringEditorComponent","innerText","PaneldynamicAction","PanelDynamicAddBtn","addPanelUI","ɵPanelDynamicAddBtn_BaseFactory","PanelDynamicNextBtn","nextPanelClick","goToNextPanel","ɵPanelDynamicNextBtn_BaseFactory","getNextButtonCss","panelNextText","progressBtnIcon","PanelDynamicPrevBtn","prevPanelClick","goToPrevPanel","ɵPanelDynamicPrevBtn_BaseFactory","getPrevButtonCss","panelPrevText","PaneldynamicRemoveButtonComponent","ɵPaneldynamicRemoveButtonComponent_BaseFactory","removePanelUI","getPanelRemoveButtonCss","buttonRemoveText","locPanelRemoveText","iconRemove","PanelDynamicProgressText","ɵPanelDynamicProgressText_BaseFactory","PanelDynamicQuestionComponent","trackPanelBy","panelCountChangedCallback","currentIndexChangedCallback","renderModeChangedCallback","isProgressTopShowing","progressTop","progressBottom","ɵPanelDynamicQuestionComponent_BaseFactory","getShowNoEntriesPlaceholder","showLegacyNavigation","panelsContainer","renderedPanels","isRenderModeList","showNavigation","SurveyModel","TemplateRendererComponentName","TemplateRendererComponent","ɵTemplateRendererComponent_BaseFactory","CustomWidgetComponent","hasDefaultRender","isDefaultRender","hasAngularComponent","htmlTemplate","simpleChanges","willUnmount","MatrixCellComponent","ɵMatrixCellComponent_BaseFactory","fullName","getCellAriaLabel","MatrixDynamicDragDropIconComponent","ɵMatrixDynamicDragDropIconComponent_BaseFactory","MatrixDropdownCellComponent","cellContainer","cellQ","matrixAfterCellRender","cellQuestion","htmlElement","afterRenderCore","ɵMatrixDropdownCellComponent_BaseFactory","MatrixRequiredHeader","ɵMatrixRequiredHeader_BaseFactory","MatrixRowComponent","ɵMatrixRowComponent_BaseFactory","MatrixTableComponent","ɵMatrixTableComponent_BaseFactory","showHorizontalScroll","renderedRows","MatrixDropdownComponent","ɵMatrixDropdownComponent_BaseFactory","MatrixDynamicComponent","ɵMatrixDynamicComponent_BaseFactory","MatrixDynamicRemoveButtonComponent","removeRowUI","getRemoveRowButtonCss","locRemoveRowText","MatrixDetailButtonComponent","showHideDetailPanelClick","getDetailPanelButtonCss","getIsDetailPanelShowing","detailPanelId","getDetailPanelIconCss","getDetailPanelIconId","ExpressionComponent","ɵExpressionComponent_BaseFactory","formatedValue","ImageQuestionComponent","ɵImageQuestionComponent_BaseFactory","renderedMode","QuestionErrorComponent","CustomQuestionComponent","contentQuestion","ɵCustomQuestionComponent_BaseFactory","CompositeQuestionComponent","contentPanel","ɵCompositeQuestionComponent_BaseFactory","HeaderCellComponent","ɵHeaderCellComponent_BaseFactory","HeaderMobileComponent","ɵHeaderMobileComponent_BaseFactory","HeaderComponent","ɵHeaderComponent_BaseFactory","SurveyModule","ModQuestionOverlayComponent","_data","_dialog_ref","isEdit","generateNewQuestion","done","close","MAT_DIALOG_DATA","questionElement_r2","QuestionBankService","AsyncHandler","questions","_questions","withdrawnQuestions","_withdrawnQuestions","_dialog","questions$","withdrawnQuestions$","_filter","search","filter$","filteredQuestions$","combineLatest","activeIds","filteredQuestions","loadQuestions","resetTransaction","setFilter","getQuestion","withdrawFilteredQuestion","setWithdrawnQuestions","depositQuestions","withdrawn","idx","confirmDeleteQuestion","details","openConfirmModal","reason","deleteQuestion","modQuestionOverlay","open","afterClosed","editQuestion","saveQuestion","_this2","removeQuestion","removeQuestionFromStore","handleError","finalize","_this3","queryQuestions","_this4","addQuestion","notifySuccess","addQuestionToStore","_this5","updateQuestion","updateQuestionInStore","markQuestionDeletedInStore","msg","defaultReturn","qs","qid","clearSearch","SearchInputComponent","classNames","onSearch","input","search$","fromEvent","debounceTime","distinctUntilChanged","SearchInputComponent_button_5_Template","searchInput_r4","q_r5","onAddQuestion","onEditQuestion","onDeleteQuestion","typeMap","actionsMenu_r6","QuestionBankComponent","filters$","QuestionBankComponent_div_1_Template","QuestionBankComponent_mat_option_17_Template","QuestionBankComponent_div_20_Template","QuestionBankComponent_div_22_Template","QuestionBankComponent_ng_template_24_Template","tmp_2_0","tmp_6_0","noQuestions_r7","SurveyBuilderService","bank","selectedPageIndex","selectedPage","setUISurvey","getUISurvey","addSurveyPage","confirmDeletePage","removeSurveyPage","removeQuestionFromSurvey","onDropQuestionToSurvey","onPreview","logo_data","logo","logoWidth","logoPosition","Model","k_r5","p_r6","i_r10","_r9","onRemove","q_r11","_r7","SurveyBuilderComponent_div_0_div_19_ng_container_10_button_4_Template","SurveyBuilderComponent_div_0_div_19_ng_container_10_div_6_Template","SurveyBuilderComponent_div_0_div_19_ng_container_10_div_7_Template","noQuestion_r12","SurveyBuilderComponent_div_0_div_19_a_4_Template","SurveyBuilderComponent_div_0_div_19_ng_container_10_Template","pagePanel_r13","SurveyBuilderComponent_div_0_div_20_survey_1_Template","switchView","SurveyBuilderComponent_div_0_div_19_Template","SurveyBuilderComponent_div_0_div_20_Template","tabPanel_r14","view","SurveyBuilderComponent","onTabChange","SurveyBuilderComponent_div_0_Template","SurveyBuilderComponent_ng_template_1_Template","SurveyService","builder","dialog","_options","zone_id","_options$","loadSurvey","uiSurvey","getSurveyDetails","setOptions","results","all","getSurveyQuestions","translateToUISurveyObj","questSet","transPages","confirmDeleteSurvey","deleteSurvey","saveSurvey","validateSurvey","toSave","updateSurvey","createSurvey","back","showSurvey","allQuestions","removeSurvey","addSurvey","_this6","i4","b_r1","level_r2","op_r3","SurveyCreatorTopbarComponent","_actRoute","_survey","selected_building","levels","options$","levels$","level_list","l","parent_id","triggerOptions","updateOptions","op","onSave","queryParams","qparams","onBuildingChange","doBuildingChange","SurveyCreatorTopbarComponent_mat_option_8_Template","SurveyCreatorTopbarComponent_mat_option_19_Template","SurveyCreatorTopbarComponent_mat_option_27_Template","ModSurveyComponent","_route","params","ModSurveyComponent_div_0_Template","RunSurveyService","initialised","generateSurveyModal","onComplete","sender","processSurveyAnswer","answersMap","question_id","answer_json","saveSurveyAnswer","addAnswer","RunSurveyComponent","route","RunSurveyComponent_div_1_Template","SurveyListingsService","_surveys","org","_trigger","surveys$","_building_id","building$","buildings","levelNameMap$","lvl","initBuilding","loadBuildingSurveys","reloadBuilding","editSurvey","newSurvey","localeCompare","levelMap","data_r2","data_r4","row_r6","onViewStats","onEdit","onDelete","actionsMenu_r7","SurveyListingsComponent","_router","_service","triggerMap","displayedColumns","building_name","SurveyListingsComponent_ng_template_18_Template","SurveyListingsComponent_ng_template_20_Template","SurveyListingsComponent_ng_template_22_Template","tmp_3_0","level_template_r8","trigger_template_r9","action_template_r10","SurveyResponsesService","survey$","question_count","answer_count","survey_responses$","paged_responses$","resMap","paged","created_after","getTime","created_before","sortQuestionsAnswers","qhash","obj","values","def_res","BaseWidget","hasData","data$","widget_id","makeHTMLId","charAt","characters","random","d_r1","percentage","SelectionWidgetComponent_ng_container_5_div_1_Template","SelectionWidgetComponent","chart_data$","parseSelectionAnswers","total","count","SelectionWidgetComponent_ng_container_5_Template","stats_r1","average","maxRate","d_r3","RatingsWidgetComponent_ng_container_0_ng_container_3_Template","RatingsWidgetComponent_ng_container_0_div_6_Template","data_r5","RatingsWidgetComponent","parseRatingAnswers","parseRatingStats","sum","RatingsWidgetComponent_ng_container_0_Template","TableWidgetComponent_ng_container_1_div_1_Template","TableWidgetComponent","TableWidgetComponent_ng_container_1_Template","response","SurveyWidgetComponent","SurveyWidgetComponent_ng_container_5_Template","SurveyWidgetComponent_ng_container_6_Template","SurveyWidgetComponent_ng_container_7_Template","clearDates","i_r6","p_r5","SurveyResponsesComponent_ng_container_2_ng_container_41_ng_container_1_ng_container_1_div_1_Template","SurveyResponsesComponent_ng_container_2_ng_container_41_ng_container_1_ng_container_1_survey_widget_3_Template","pagedResponses_r8","SurveyResponsesComponent_ng_container_2_ng_container_41_ng_container_1_ng_container_1_Template","SurveyResponsesComponent_ng_container_2_ng_container_41_ng_container_1_Template","noRecords_r9","datePicked","setStartDate","setEndDate","SurveyResponsesComponent_ng_container_2_button_18_Template","SurveyResponsesComponent_ng_container_2_ng_container_41_Template","tmp_4_0","picker_r10","tmp_7_0","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0","pagedResponses$","SurveyResponsesComponent","surveyId$","start_date","SurveyResponsesComponent_div_0_Template","SurveyResponsesComponent_ng_container_2_Template","SurveyResponsesComponent_ng_template_4_Template","SurveyResponsesComponent_ng_template_6_Template","noId_r11","path","pathMatch","routes","NewSurveyComponent","SurveysModule","RouterModule","forChild","MatDialogModule","MatCheckboxModule","MatTabsModule","ComponentsModule","MatTableModule","MatMenuModule","UIModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs","./node_modules/@angular/material/fesm2022/divider.mjs","./node_modules/@angular/material/fesm2022/list.mjs","./libs/survey-suite/src/lib/survey-suite.module.ts","./libs/survey-suite/src/lib/helper.ts","./libs/survey-suite/src/lib/types.ts","./libs/survey-suite/src/lib/question/base-question.component.ts","./libs/survey-suite/src/lib/question/single-line-text.component.ts","./libs/survey-suite/src/lib/question/selection.component.ts","./libs/survey-suite/src/lib/question/multi-line-text.component.ts","./libs/survey-suite/src/lib/question/rating.component.ts","./libs/survey-suite/src/lib/question/question.component.ts","./apps/concierge/src/app/surveys/services/building-list-item.service.ts","./apps/concierge/src/app/surveys/components/building-list-item.component.ts","./apps/concierge/src/app/surveys/pages/building-list.component.ts","./apps/concierge/src/app/surveys/pages/not-found.component.ts","./node_modules/survey-angular-ui/fesm2015/survey-angular-ui.js","./apps/concierge/src/app/surveys/overlays/mod-question-overlay.component.ts","./apps/concierge/src/app/surveys/services/question-bank.service.ts","./apps/concierge/src/app/surveys/components/search-input.component.ts","./apps/concierge/src/app/surveys/components/question-bank/question-bank.component.html","./apps/concierge/src/app/surveys/components/question-bank/question-bank.component.ts","./apps/concierge/src/app/surveys/services/survey-builder.service.ts","./apps/concierge/src/app/surveys/components/survey-builder/survey-builder.component.html","./apps/concierge/src/app/surveys/components/survey-builder/survey-builder.component.ts","./apps/concierge/src/app/surveys/services/survey.service.ts","./apps/concierge/src/app/surveys/components/survey-creator-topbar.component.ts","./apps/concierge/src/app/surveys/pages/mod-survey.component.ts","./apps/concierge/src/app/surveys/services/run-survey.service.ts","./apps/concierge/src/app/surveys/pages/run-survey.component.ts","./apps/concierge/src/app/surveys/services/survey-listings.service.ts","./apps/concierge/src/app/surveys/pages/survey-listings.component.ts","./apps/concierge/src/app/surveys/services/survey-responses.service.ts","./libs/survey-suite/src/lib/survey-widget/base-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/selection.widget.component.ts","./libs/survey-suite/src/lib/survey-widget/survey-helper.ts","./libs/survey-suite/src/lib/survey-widget/ratings-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/table-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/survey-widget.component.ts","./apps/concierge/src/app/surveys/pages/survey-responses.component.ts","./apps/concierge/src/app/surveys/survey.component.ts","./apps/concierge/src/app/surveys/surveys.module.ts","./apps/concierge/src/app/surveys/new-survey.component.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, EnvironmentInjector, createComponent, Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Injector, afterNextRender, Self, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n    const rect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `DOMRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height,\n        x: rect.x,\n        y: rect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n    domRect.top += top;\n    domRect.bottom = domRect.top + domRect.height;\n    domRect.left += left;\n    domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustDomRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\nclass PreviewRef {\n    get element() {\n        return this._preview;\n    }\n    constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex) {\n        this._document = _document;\n        this._rootElement = _rootElement;\n        this._direction = _direction;\n        this._initialDomRect = _initialDomRect;\n        this._previewTemplate = _previewTemplate;\n        this._previewClass = _previewClass;\n        this._pickupPositionOnPage = _pickupPositionOnPage;\n        this._initialTransform = _initialTransform;\n        this._zIndex = _zIndex;\n    }\n    attach(parent) {\n        this._preview = this._createPreview();\n        parent.appendChild(this._preview);\n        // The null check is necessary for browsers that don't support the popover API.\n        // Note that we use a string access for compatibility with Closure.\n        if ('showPopover' in this._preview) {\n            this._preview['showPopover']();\n        }\n    }\n    destroy() {\n        this._preview.remove();\n        this._previewEmbeddedView?.destroy();\n        this._preview = this._previewEmbeddedView = null;\n    }\n    setTransform(value) {\n        this._preview.style.transform = value;\n    }\n    getBoundingClientRect() {\n        return this._preview.getBoundingClientRect();\n    }\n    addClass(className) {\n        this._preview.classList.add(className);\n    }\n    getTransitionDuration() {\n        return getTransformTransitionDurationInMs(this._preview);\n    }\n    addEventListener(name, handler) {\n        this._preview.addEventListener(name, handler);\n    }\n    removeEventListener(name, handler) {\n        this._preview.removeEventListener(name, handler);\n    }\n    _createPreview() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this._previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewEmbeddedView = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialDomRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': this._zIndex + '',\n        }, importantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('popover', 'manual');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = signal(false);\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging()) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        if (event.cancelable) {\n                            event.preventDefault();\n                        }\n                        this._hasStartedDragging.set(true);\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeListeners() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n        this._getShadowRoot()?.removeEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.destroy();\n        this._preview = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeListeners();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging()) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        // Needs to happen before the root element is moved.\n        const shadowRoot = this._getShadowRoot();\n        const dropContainer = this._dropContainer;\n        if (shadowRoot) {\n            // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n            // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n            this._ngZone.runOutsideAngular(() => {\n                shadowRoot.addEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n            });\n        }\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor =\n                this._anchor || this._document.createComment(ngDevMode ? 'cdk-drag-anchor' : ''));\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000);\n            this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasMoved = false;\n        this._hasStartedDragging.set(this._hasMoved);\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeListeners();\n        this._initialDomRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialDomRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.addClass('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = this._preview.getTransitionDuration();\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (this._preview &&\n                            _getEventTarget(event) === this._preview.element &&\n                            event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y =\n                this._pickupPositionOnPage.y -\n                    (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x =\n                this._pickupPositionOnPage.x -\n                    (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n        }\n        if (this._boundaryRect) {\n            // If not using a custom constrain we need to account for the pickup position in the element\n            // otherwise we do not need to do this, as it has already been accounted for\n            const { x: pickupX, y: pickupY } = !this.constrainPosition\n                ? this._pickupPositionInElement\n                : { x: 0, y: 0 };\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.setTransform(combineTransforms(transform, initialTransform));\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // DOMRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary DOMRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialDomRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n    event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_dragDropRegistry) {\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            this._element.appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables?.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustDomRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    withElementContainer(container) {\n        this._element = container;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n    constructor(_document, _dragDropRegistry) {\n        this._document = _document;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            deltaX: 0,\n            deltaY: 0,\n            overlaps: false,\n        };\n        /**\n         * Keeps track of the relationship between a node and its next sibling. This information\n         * is used to restore the DOM to the order it was in before dragging started.\n         */\n        this._relatedNodes = [];\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        const childNodes = this._element.childNodes;\n        this._relatedNodes = [];\n        for (let i = 0; i < childNodes.length; i++) {\n            const node = childNodes[i];\n            this._relatedNodes.push([node, node.nextSibling]);\n        }\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        const previousSwap = this._previousSwap;\n        if (newIndex === -1 || this._activeItems[newIndex] === item) {\n            return null;\n        }\n        const toSwapWith = this._activeItems[newIndex];\n        // Prevent too many swaps over the same item.\n        if (previousSwap.drag === toSwapWith &&\n            previousSwap.overlaps &&\n            previousSwap.deltaX === pointerDelta.x &&\n            previousSwap.deltaY === pointerDelta.y) {\n            return null;\n        }\n        const previousIndex = this.getItemIndex(item);\n        const current = item.getPlaceholderElement();\n        const overlapElement = toSwapWith.getRootElement();\n        if (newIndex > previousIndex) {\n            overlapElement.after(current);\n        }\n        else {\n            overlapElement.before(current);\n        }\n        moveItemInArray(this._activeItems, previousIndex, newIndex);\n        const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n        // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n        // break this functionality, because the same object is passed for all `sort` calls.\n        previousSwap.deltaX = pointerDelta.x;\n        previousSwap.deltaY = pointerDelta.y;\n        previousSwap.drag = toSwapWith;\n        previousSwap.overlaps =\n            overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n        return {\n            previousIndex,\n            currentIndex: newIndex,\n        };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        let enterIndex = index == null || index < 0\n            ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        // In some cases (e.g. when the container has padding) we might not be able to figure\n        // out which item to insert the dragged item next to, because the pointer didn't overlap\n        // with anything. In that case we find the item that's closest to the pointer.\n        if (enterIndex === -1) {\n            enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n        }\n        const targetItem = this._activeItems[enterIndex];\n        const currentIndex = this._activeItems.indexOf(item);\n        if (currentIndex > -1) {\n            this._activeItems.splice(currentIndex, 1);\n        }\n        if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n            this._activeItems.splice(enterIndex, 0, item);\n            targetItem.getRootElement().before(item.getPlaceholderElement());\n        }\n        else {\n            this._activeItems.push(item);\n            this._element.appendChild(item.getPlaceholderElement());\n        }\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeItems = items.slice();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        const root = this._element;\n        const previousSwap = this._previousSwap;\n        // Moving elements around in the DOM can break things like the `@for` loop, because it\n        // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n        // the DOM nodes in the list to their original order when the list is reset.\n        // Note that this could be simpler if we just saved all the nodes, cleared the root\n        // and then appended them in the original order. We don't do it, because it can break\n        // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n        // placeholder element which is removed after dragging.\n        for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n            const [node, nextSibling] = this._relatedNodes[i];\n            if (node.parentNode === root && node.nextSibling !== nextSibling) {\n                if (nextSibling === null) {\n                    root.appendChild(node);\n                }\n                else if (nextSibling.parentNode === root) {\n                    root.insertBefore(node, nextSibling);\n                }\n            }\n        }\n        this._relatedNodes = [];\n        this._activeItems = [];\n        previousSwap.drag = null;\n        previousSwap.deltaX = previousSwap.deltaY = 0;\n        previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeItems;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        return this._activeItems.indexOf(item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll() {\n        this._activeItems.forEach(item => {\n            if (this._dragDropRegistry.isDragging(item)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                item._sortFromLastPointerPosition();\n            }\n        });\n    }\n    withElementContainer(container) {\n        if (container !== this._element) {\n            this._element = container;\n            this._rootNode = undefined;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n        const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n        const index = elementAtPoint\n            ? this._activeItems.findIndex(item => {\n                const root = item.getRootElement();\n                return elementAtPoint === root || root.contains(elementAtPoint);\n            })\n            : -1;\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n    /** Lazily resolves the list's root node. */\n    _getRootNode() {\n        // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n        if (!this._rootNode) {\n            this._rootNode = _getShadowRoot(this._element) || this._document;\n        }\n        return this._rootNode;\n    }\n    /**\n     * Finds the index of the item that's closest to the item being dragged.\n     * @param item Item being dragged.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n        if (this._activeItems.length === 0) {\n            return -1;\n        }\n        if (this._activeItems.length === 1) {\n            return 0;\n        }\n        let minDistance = Infinity;\n        let minIndex = -1;\n        // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n        // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n        // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n        // for our purposes.\n        for (let i = 0; i < this._activeItems.length; i++) {\n            const current = this._activeItems[i];\n            if (current !== item) {\n                const { x, y } = current.getRootElement().getBoundingClientRect();\n                const distance = Math.hypot(pointerX - x, pointerY - y);\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minIndex = i;\n                }\n            }\n        }\n        return minIndex;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Elements that can be scrolled while the user is dragging. */\n        this._scrollableElements = [];\n        /** Direction of the list's layout. */\n        this._direction = 'ltr';\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        const coercedElement = (this.element = coerceElement(element));\n        this._document = _document;\n        this.withOrientation('vertical').withElementContainer(coercedElement);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n            this._sortStrategy.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        if (orientation === 'mixed') {\n            this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n        }\n        else {\n            const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n            strategy.direction = this._direction;\n            strategy.orientation = orientation;\n            this._sortStrategy = strategy;\n        }\n        this._sortStrategy.withElementContainer(this._container);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = this._container;\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /**\n     * Configures the drop list so that a different element is used as the container for the\n     * dragged items. This is useful for the cases when one might not have control over the\n     * full DOM that sets up the dragging.\n     * Note that the alternate container needs to be a descendant of the drop list.\n     * @param container New element container to be assigned.\n     */\n    withElementContainer(container) {\n        if (container === this._container) {\n            return this;\n        }\n        const element = coerceElement(this.element);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            container !== element &&\n            !element.contains(container)) {\n            throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n        }\n        const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n        const newContainerIndex = this._scrollableElements.indexOf(container);\n        if (oldContainerIndex > -1) {\n            this._scrollableElements.splice(oldContainerIndex, 1);\n        }\n        if (newContainerIndex > -1) {\n            this._scrollableElements.splice(newContainerIndex, 1);\n        }\n        if (this._sortStrategy) {\n            this._sortStrategy.withElementContainer(container);\n        }\n        this._cachedShadowRoot = null;\n        this._scrollableElements.unshift(container);\n        this._container = container;\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._domRect ||\n            !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const domRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = this._container.style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            // Prevent the check from running on apps not using an alternate container. Ideally we\n            // would always run it, but introducing it at this stage would be a breaking change.\n            this._container !== coerceElement(this.element)) {\n            for (const drag of this._draggables) {\n                if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n                    throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n                }\n            }\n        }\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `DOMRect`.\n        this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = this._container.style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._domRect ||\n            !isInsideClientRect(this._domRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        // The `DOMRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(this._container);\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return AutoScrollVerticalDirection.UP;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return AutoScrollVerticalDirection.DOWN;\n    }\n    return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return AutoScrollHorizontalDirection.LEFT;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return AutoScrollHorizontalDirection.RIGHT;\n    }\n    return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === AutoScrollVerticalDirection.UP) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = AutoScrollVerticalDirection.UP;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (direction === 'rtl') {\n            if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n                // In RTL `scrollLeft` will be negative when scrolled.\n                if (scrollLeft < 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n                }\n            }\n            else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n            }\n        }\n        else {\n            if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n                if (scrollLeft > 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n                }\n            }\n            else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n            }\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/** Keeps track of the apps currently containing drag items. */\nconst activeApps = new Set();\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: _ResetsLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: _ResetsLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-drag-resets-container\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: _ResetsLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, host: { 'cdk-drag-resets-container': '' }, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"] }]\n        }] });\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        this._appRef = inject(ApplicationRef);\n        this._environmentInjector = inject(EnvironmentInjector);\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = signal([]);\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances().length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances().length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances().some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances().indexOf(drag) > -1) {\n            return;\n        }\n        this._loadResets();\n        this._activeDragInstances.update(instances => [...instances, drag]);\n        if (this._activeDragInstances().length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.update(instances => {\n            const index = instances.indexOf(drag);\n            if (index > -1) {\n                instances.splice(index, 1);\n                return [...instances];\n            }\n            return instances;\n        });\n        if (this._activeDragInstances().length === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances().indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances().length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    // TODO(crisbeto): abstract this away into something reusable.\n    /** Loads the CSS resets needed for the module to work correctly. */\n    _loadResets() {\n        if (!activeApps.has(this._appRef)) {\n            activeApps.add(this._appRef);\n            const componentRef = createComponent(_ResetsLoader, {\n                environmentInjector: this._environmentInjector,\n            });\n            this._appRef.onDestroy(() => {\n                activeApps.delete(this._appRef);\n                if (activeApps.size === 0) {\n                    componentRef.destroy();\n                }\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }] });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._stateChanges.next(this);\n    }\n    constructor(element, _parentDrag) {\n        this.element = element;\n        this._parentDrag = _parentDrag;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        _parentDrag?._addHandle(this);\n    }\n    ngOnDestroy() {\n        this._parentDrag?._removeHandle(this);\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\", booleanAttribute] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragHandleDisabled', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        this._handles = new BehaviorSubject([]);\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._injector = inject(Injector);\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // We need to wait until after render, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position, and then they get transferred to the portal.\n        afterNextRender(() => {\n            this._updateRootElement();\n            this._setupHandlesListener();\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }, { injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in the `afterNextRender` queued up in the constructor.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n        // constructor.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._handles.complete();\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    _addHandle(handle) {\n        const handles = this._handles.getValue();\n        handles.push(handle);\n        this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n        const handles = this._handles.getValue();\n        const index = handles.indexOf(handle);\n        if (index > -1) {\n            handles.splice(index, 1);\n            this._handles.next(handles);\n        }\n    }\n    _setPreviewTemplate(preview) {\n        this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n        if (preview === this._previewTemplate) {\n            this._previewTemplate = null;\n        }\n    }\n    _setPlaceholderTemplate(placeholder) {\n        this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n        if (placeholder === this._placeholderTemplate) {\n            this._placeholderTemplate = null;\n        }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles\n            .pipe(\n        // Sync the new handles with the DragRef.\n        tap(handles => {\n            const handleElements = handles.map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                handleElements.push(this.element);\n            }\n            this._dragRef.withHandles(handleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i1$1.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\", booleanAttribute], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }], propDecorators: { data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragDisabled', transform: booleanAttribute }]\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        this.disabled = false;\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListGroupDisabled', transform: booleanAttribute }]\n            }] } });\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            if (this.elementContainerSelector) {\n                const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n                if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n                }\n                ref.withElementContainer(container);\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i1$1.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\", booleanAttribute], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"], elementContainerSelector: [\"cdkDropListElementContainer\", \"elementContainerSelector\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }], propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListDisabled', transform: booleanAttribute }]\n            }], sortingDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListSortingDisabled', transform: booleanAttribute }]\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListAutoScrollDisabled', transform: booleanAttribute }]\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], elementContainerSelector: [{\n                type: Input,\n                args: ['cdkDropListElementContainer']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        /** Whether the preview should preserve the same size as the item that is being dragged. */\n        this.matchSize = false;\n        this._drag?._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPreviewTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: [\"matchSize\", \"matchSize\", booleanAttribute] }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        this._drag?._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPlaceholderTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatDivider, isStandalone: true, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatDivider], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatDivider],\n                    exports: [MatDivider, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, inject, Input, ANIMATION_MODULE_TYPE, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, EventEmitter, Output, forwardRef, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { CdkObserveContent, ObserversModule } from '@angular/cdk/observers';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst LIST_OPTION = new InjectionToken('ListOption');\n\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nclass MatListItemTitle {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemTitle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemTitle, isStandalone: true, selector: \"[matListItemTitle]\", host: { classAttribute: \"mat-mdc-list-item-title mdc-list-item__primary-text\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemTitle]',\n                    host: { 'class': 'mat-mdc-list-item-title mdc-list-item__primary-text' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nclass MatListItemLine {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemLine, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemLine, isStandalone: true, selector: \"[matListItemLine]\", host: { classAttribute: \"mat-mdc-list-item-line mdc-list-item__secondary-text\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemLine]',\n                    host: { 'class': 'mat-mdc-list-item-line mdc-list-item__secondary-text' },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nclass MatListItemMeta {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemMeta, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemMeta, isStandalone: true, selector: \"[matListItemMeta]\", host: { classAttribute: \"mat-mdc-list-item-meta mdc-list-item__end\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemMeta, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemMeta]',\n                    host: { 'class': 'mat-mdc-list-item-meta mdc-list-item__end' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n * position content such as icons or checkboxes/radios that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox/radio and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nclass _MatListItemGraphicBase {\n    constructor(_listOption) {\n        this._listOption = _listOption;\n    }\n    _isAlignedAtStart() {\n        // By default, in all list items the graphic is aligned at start. In list options,\n        // the graphic is only aligned at start if the checkbox/radio is at the end.\n        return !this._listOption || this._listOption?._getTogglePosition() === 'after';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: _MatListItemGraphicBase, deps: [{ token: LIST_OPTION, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: _MatListItemGraphicBase, isStandalone: true, host: { properties: { \"class.mdc-list-item__start\": \"_isAlignedAtStart()\", \"class.mdc-list-item__end\": \"!_isAlignedAtStart()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: _MatListItemGraphicBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // MDC uses intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n                        // position content such as icons or checkboxes/radios that comes either before or after the\n                        // text content respectively. This directive detects the placement of the checkbox/radio and\n                        // applies the correct MDC class to position the icon/avatar on the opposite side.\n                        '[class.mdc-list-item__start]': '_isAlignedAtStart()',\n                        '[class.mdc-list-item__end]': '!_isAlignedAtStart()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIST_OPTION]\n                }] }] });\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nclass MatListItemAvatar extends _MatListItemGraphicBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemAvatar, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemAvatar, isStandalone: true, selector: \"[matListItemAvatar]\", host: { classAttribute: \"mat-mdc-list-item-avatar\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemAvatar]',\n                    host: { 'class': 'mat-mdc-list-item-avatar' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nclass MatListItemIcon extends _MatListItemGraphicBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemIcon, isStandalone: true, selector: \"[matListItemIcon]\", host: { classAttribute: \"mat-mdc-list-item-icon\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemIcon]',\n                    host: { 'class': 'mat-mdc-list-item-icon' },\n                    standalone: true,\n                }]\n        }] });\n\n/** Injection token that can be used to provide the default options for the list module. */\nconst MAT_LIST_CONFIG = new InjectionToken('MAT_LIST_CONFIG');\n\n/** @docs-private */\nclass MatListBase {\n    constructor() {\n        this._isNonInteractive = true;\n        this._disableRipple = false;\n        this._disabled = false;\n        this._defaultOptions = inject(MAT_LIST_CONFIG, { optional: true });\n    }\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListBase, isStandalone: true, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"attr.aria-disabled\": \"disabled\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], propDecorators: { disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/** @docs-private */\nclass MatListItemBase {\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n        this._explicitLines = coerceNumberProperty(lines, null);\n        this._updateItemLines(false);\n    }\n    /** Whether ripples for list items are disabled. */\n    get disableRipple() {\n        return (this.disabled ||\n            this._disableRipple ||\n            this._noopAnimations ||\n            !!this._listBase?.disableRipple);\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /** Whether the list-item is disabled. */\n    get disabled() {\n        return this._disabled || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_elementRef, _ngZone, _listBase, _platform, globalRippleOptions, animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._listBase = _listBase;\n        this._platform = _platform;\n        this._explicitLines = null;\n        this._disableRipple = false;\n        this._disabled = false;\n        this._subscriptions = new Subscription();\n        this._rippleRenderer = null;\n        /** Whether the list item has unscoped text content. */\n        this._hasUnscopedTextContent = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this._hostElement = this._elementRef.nativeElement;\n        this._isButtonElement = this._hostElement.nodeName.toLowerCase() === 'button';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (_listBase && !_listBase._isNonInteractive) {\n            this._initInteractiveListItem();\n        }\n        // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n        // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n        // TODO: Determine if we intend to continue doing this for the MDC-based list.\n        if (this._isButtonElement && !this._hostElement.hasAttribute('type')) {\n            this._hostElement.setAttribute('type', 'button');\n        }\n    }\n    ngAfterViewInit() {\n        this._monitorProjectedLinesAndTitle();\n        this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        if (this._rippleRenderer !== null) {\n            this._rippleRenderer._removeTriggerEvents();\n        }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n        return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n        this._hostElement.classList.add('mat-mdc-list-item-interactive');\n        this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform);\n        this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n        this._ngZone.runOutsideAngular(() => {\n            this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n        });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n        // If the updated is triggered too early before the view and content is initialized,\n        // we just skip the update. After view initialization the update is triggered again.\n        if (!this._lines || !this._titles || !this._unscopedContent) {\n            return;\n        }\n        // Re-check the DOM for unscoped text content if requested. This needs to\n        // happen before any computation or sanity checks run as these rely on the\n        // result of whether there is unscoped text content or not.\n        if (recheckUnscopedContent) {\n            this._checkDomForUnscopedTextContent();\n        }\n        // Sanity check the list item lines and title in the content. This is a dev-mode only\n        // check that can be dead-code eliminated by Terser in production.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            sanityCheckListItemContent(this);\n        }\n        const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n        const unscopedContentEl = this._unscopedContent.nativeElement;\n        // Update the list item element to reflect the number of lines.\n        this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n        this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n        // If there is no title and the unscoped content is the is the only line, the\n        // unscoped text content will be treated as the title of the list-item.\n        if (this._hasUnscopedTextContent) {\n            const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n            unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n            unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n        }\n        else {\n            unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n            unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n        }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n        let numOfLines = this._titles.length + this._lines.length;\n        if (this._hasUnscopedTextContent) {\n            numOfLines += 1;\n        }\n        return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n        this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes)\n            .filter(node => node.nodeType !== node.COMMENT_NODE)\n            .some(node => !!(node.textContent && node.textContent.trim()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItemBase, isStandalone: true, inputs: { lines: \"lines\", disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mdc-list-item--disabled\": \"disabled\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"(_isButtonElement && disabled) || null\" } }, queries: [{ propertyName: \"_avatars\", predicate: MatListItemAvatar }, { propertyName: \"_icons\", predicate: MatListItemIcon }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItemBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': '(_isButtonElement && disabled) || null',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _avatars: [{\n                type: ContentChildren,\n                args: [MatListItemAvatar, { descendants: false }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatListItemIcon, { descendants: false }]\n            }], lines: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n    const numTitles = item._titles.length;\n    const numLines = item._lines.length;\n    if (numTitles > 1) {\n        console.warn('A list item cannot have multiple titles.');\n    }\n    if (numTitles === 0 && numLines > 0) {\n        console.warn('A list item line can only be used if there is a list item title.');\n    }\n    if (numTitles === 0 &&\n        item._hasUnscopedTextContent &&\n        item._explicitLines !== null &&\n        item._explicitLines > 1) {\n        console.warn('A list item cannot have wrapping content without a title.');\n    }\n    if (numLines > 2 || (numLines === 2 && item._hasUnscopedTextContent)) {\n        console.warn('A list item can have at maximum three lines.');\n    }\n}\n\nclass MatActionList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatActionList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatActionList, isStandalone: true, selector: \"mat-action-list\", host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-action-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatActionList }], exportAs: [\"matActionList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatActionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-action-list', exportAs: 'matActionList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n                        'role': 'group',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatActionList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"] }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\nclass MatList extends MatListBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatList, isStandalone: true, selector: \"mat-list\", host: { classAttribute: \"mat-mdc-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list', exportAs: 'matList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"] }]\n        }] });\nclass MatListItem extends MatListItemBase {\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n        return this._activated;\n    }\n    set activated(activated) {\n        this._activated = coerceBooleanProperty(activated);\n    }\n    constructor(element, ngZone, listBase, platform, globalRippleOptions, animationMode) {\n        super(element, ngZone, listBase, platform, globalRippleOptions, animationMode);\n        this._activated = false;\n    }\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n        return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n    _hasBothLeadingAndTrailing() {\n        return this._meta.length !== 0 && (this._avatars.length !== 0 || this._icons.length !== 0);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListItem, isStandalone: true, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { activated: \"activated\" }, host: { properties: { \"class.mdc-list-item--activated\": \"activated\", \"class.mdc-list-item--with-leading-avatar\": \"_avatars.length !== 0\", \"class.mdc-list-item--with-leading-icon\": \"_icons.length !== 0\", \"class.mdc-list-item--with-trailing-meta\": \"_meta.length !== 0\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-current\": \"_getAriaCurrent()\" }, classAttribute: \"mat-mdc-list-item mdc-list-item\" }, queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }, { propertyName: \"_meta\", predicate: MatListItemMeta, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }, { propertyName: \"_itemText\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", dependencies: [{ kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-mdc-list-item mdc-list-item',\n                        '[class.mdc-list-item--activated]': 'activated',\n                        '[class.mdc-list-item--with-leading-avatar]': '_avatars.length !== 0',\n                        '[class.mdc-list-item--with-leading-icon]': '_icons.length !== 0',\n                        '[class.mdc-list-item--with-trailing-meta]': '_meta.length !== 0',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CdkObserveContent], template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _meta: [{\n                type: ContentChildren,\n                args: [MatListItemMeta, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], _itemText: [{\n                type: ViewChild,\n                args: ['text']\n            }], activated: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = new InjectionToken('SelectionList');\nclass MatListOption extends MatListItemBase {\n    /**\n     * Whether the label should appear before or after the checkbox/radio. Defaults to 'after'\n     *\n     * @deprecated Use `togglePosition` instead.\n     * @breaking-change 17.0.0\n     */\n    get checkboxPosition() {\n        return this.togglePosition;\n    }\n    set checkboxPosition(value) {\n        this.togglePosition = value;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox/radio.\n     * This API is supported in M2 themes only, it has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this._selectionList.multiple) {\n                this._selectionList._reportValueChange();\n            }\n        }\n    }\n    constructor(elementRef, ngZone, _selectionList, platform, _changeDetectorRef, globalRippleOptions, animationMode) {\n        super(elementRef, ngZone, _selectionList, platform, globalRippleOptions, animationMode);\n        this._selectionList = _selectionList;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox/radio. Defaults to 'after' */\n        this.togglePosition = 'after';\n        this._selected = false;\n        /**\n         * This is set to true after the first OnChanges cycle so we don't\n         * clear the value of `selected` in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    ngOnInit() {\n        const list = this._selectionList;\n        if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n        const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n        // If there is no explicit title element, the unscoped text content\n        // is treated as the list item title.\n        const labelEl = titleElement || this._unscopedContent?.nativeElement;\n        return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n        return this._selectionList.multiple && this._getTogglePosition() === position;\n    }\n    /** Where a radio indicator is shown at the given position. */\n    _hasRadioAt(position) {\n        return (!this._selectionList.multiple &&\n            this._getTogglePosition() === position &&\n            !this._selectionList.hideSingleSelectionIndicator);\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n        return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n        // If the checkbox/radio is shown at the specified position, neither icons or\n        // avatars can be shown at the position.\n        return (this._getTogglePosition() !== position &&\n            (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0));\n    }\n    _handleBlur() {\n        this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox/radio. */\n    _getTogglePosition() {\n        return this.togglePosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this._selectionList.selectedOptions.select(this);\n        }\n        else {\n            this._selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetectorRef.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n        if (!this.disabled) {\n            if (this._selectionList.multiple) {\n                this.selected = !this.selected;\n                this._selectionList._emitChangeEvent([this]);\n            }\n            else if (!this.selected) {\n                this.selected = true;\n                this._selectionList._emitChangeEvent([this]);\n            }\n        }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n        this._hostElement.setAttribute('tabindex', value + '');\n    }\n    _hasBothLeadingAndTrailing() {\n        const hasLeading = this._hasProjected('avatars', 'before') ||\n            this._hasProjected('icons', 'before') ||\n            this._hasCheckboxAt('before') ||\n            this._hasRadioAt('before');\n        const hasTrailing = this._hasProjected('icons', 'after') ||\n            this._hasProjected('avatars', 'after') ||\n            this._hasCheckboxAt('after') ||\n            this._hasRadioAt('after');\n        return hasLeading && hasTrailing;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: SELECTION_LIST }, { token: i1.Platform }, { token: i0.ChangeDetectorRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.1.0\", type: MatListOption, isStandalone: true, selector: \"mat-list-option\", inputs: { togglePosition: \"togglePosition\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"blur\": \"_handleBlur()\", \"click\": \"_toggleOnInteraction()\" }, properties: { \"class.mdc-list-item--selected\": \"selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator\", \"class.mdc-list-item--with-leading-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"before\\\")\", \"class.mdc-list-item--with-leading-icon\": \"_hasProjected(\\\"icons\\\", \\\"before\\\")\", \"class.mdc-list-item--with-trailing-icon\": \"_hasProjected(\\\"icons\\\", \\\"after\\\")\", \"class.mat-mdc-list-option-with-trailing-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"after\\\")\", \"class.mdc-list-item--with-leading-checkbox\": \"_hasCheckboxAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-checkbox\": \"_hasCheckboxAt(\\\"after\\\")\", \"class.mdc-list-item--with-leading-radio\": \"_hasRadioAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-radio\": \"_hasRadioAt(\\\"after\\\")\", \"class.mat-mdc-list-item-both-leading-and-trailing\": \"_hasBothLeadingAndTrailing()\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-selected\": \"selected\" }, classAttribute: \"mat-mdc-list-item mat-mdc-list-option mdc-list-item\" }, providers: [\n            { provide: MatListItemBase, useExisting: MatListOption },\n            { provide: LIST_OPTION, useExisting: MatListOption },\n        ], queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-unselected-icon-color);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color)}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color);opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color);opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', host: {\n                        'class': 'mat-mdc-list-item mat-mdc-list-option mdc-list-item',\n                        'role': 'option',\n                        // As per MDC, only list items without checkbox or radio indicator should receive the\n                        // `--selected` class.\n                        '[class.mdc-list-item--selected]': 'selected && !_selectionList.multiple && _selectionList.hideSingleSelectionIndicator',\n                        // Based on the checkbox/radio position and whether there are icons or avatars, we apply MDC's\n                        // list-item `--leading` and `--trailing` classes.\n                        '[class.mdc-list-item--with-leading-avatar]': '_hasProjected(\"avatars\", \"before\")',\n                        '[class.mdc-list-item--with-leading-icon]': '_hasProjected(\"icons\", \"before\")',\n                        '[class.mdc-list-item--with-trailing-icon]': '_hasProjected(\"icons\", \"after\")',\n                        '[class.mat-mdc-list-option-with-trailing-avatar]': '_hasProjected(\"avatars\", \"after\")',\n                        // Based on the checkbox/radio position, we apply the `--leading` or `--trailing` MDC classes\n                        // which ensure that the checkbox/radio is positioned correctly within the list item.\n                        '[class.mdc-list-item--with-leading-checkbox]': '_hasCheckboxAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-checkbox]': '_hasCheckboxAt(\"after\")',\n                        '[class.mdc-list-item--with-leading-radio]': '_hasRadioAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-radio]': '_hasRadioAt(\"after\")',\n                        // Utility class that makes it easier to target the case where there's both a leading\n                        // and a trailing icon. Avoids having to write out all the combinations.\n                        '[class.mat-mdc-list-item-both-leading-and-trailing]': '_hasBothLeadingAndTrailing()',\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-selected]': 'selected',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_toggleOnInteraction()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MatListItemBase, useExisting: MatListOption },\n                        { provide: LIST_OPTION, useExisting: MatListOption },\n                    ], standalone: true, imports: [NgTemplateOutlet, CdkObserveContent], template: \"<!--\\n  Save icons and the pseudo checkbox/radio so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #radio>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <input type=\\\"radio\\\" class=\\\"mdc-radio__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n@if (_hasCheckboxAt('before')) {\\n  <!-- Container for the checkbox at start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('before')) {\\n  <!-- Container for the radio at the start. -->\\n  <span class=\\\"mdc-list-item__start mat-mdc-list-option-radio-before\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n@if (_hasIconsOrAvatarsAt('before')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n@if (_hasCheckboxAt('after')) {\\n  <!-- Container for the checkbox at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n  </span>\\n} @else if (_hasRadioAt('after')) {\\n  <!-- Container for the radio at the end. -->\\n  <span class=\\\"mdc-list-item__end\\\">\\n    <ng-template [ngTemplateOutlet]=\\\"radio\\\"></ng-template>\\n  </span>\\n}\\n\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n@if (_hasIconsOrAvatarsAt('after')) {\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n}\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-unselected-icon-color);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color)}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color);opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color);opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SELECTION_LIST]\n                }] }, { type: i1.Platform }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], selectedChange: [{\n                type: Output\n            }], togglePosition: [{\n                type: Input\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatListSubheaderCssMatStyler, isStandalone: true, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-mdc-subheader mdc-list-group__subheader\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n                    //  make a change in one of the repos to visually distinguish.\n                    host: { 'class': 'mat-mdc-subheader mdc-list-group__subheader' },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatNavList, isStandalone: true, selector: \"mat-nav-list\", host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-mdc-nav-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n                        'role': 'navigation',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatNavList }], standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"] }]\n        }] });\n\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.options = options;\n    }\n}\nclass MatSelectionList extends MatListBase {\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /** Whether radio indicator for all list items is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    }\n    constructor(_element, _ngZone) {\n        super();\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._initialized = false;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all\n         * list options. This API is supported in M2 themes only, it has no effect in\n         * M3 themes.\n         *\n         * For information on applying color variants in M3, see\n         * https://material.angular.io/guide/theming#using-component-color-variants.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._multiple = true;\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        this._selectionListDisabled = false;\n        /** Handles focusout events within the list. */\n        this._handleFocusout = () => {\n            // Focus takes a while to update so we have to wrap our call in a timeout.\n            setTimeout(() => {\n                if (!this._containsFocus()) {\n                    this._resetActiveOption();\n                }\n            });\n        };\n        /** Handles focusin events within the list. */\n        this._handleFocusin = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const activeIndex = this._items\n                .toArray()\n                .findIndex(item => item._elementRef.nativeElement.contains(event.target));\n            if (activeIndex > -1) {\n                this._setActiveOption(activeIndex);\n            }\n            else {\n                this._resetActiveOption();\n            }\n        };\n        this._isNonInteractive = false;\n    }\n    ngAfterViewInit() {\n        // Mark the selection list as initialized so that the `multiple`\n        // binding can no longer be changed.\n        this._initialized = true;\n        this._setupRovingTabindex();\n        // These events are bound outside the zone, because they don't change\n        // any change-detected properties and they can trigger timeouts.\n        this._ngZone.runOutsideAngular(() => {\n            this._element.nativeElement.addEventListener('focusin', this._handleFocusin);\n            this._element.nativeElement.addEventListener('focusout', this._handleFocusout);\n        });\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n        const disabledChanges = changes['disabled'];\n        const disableRippleChanges = changes['disableRipple'];\n        const hideSingleSelectionIndicatorChanges = changes['hideSingleSelectionIndicator'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (disabledChanges && !disabledChanges.firstChange) ||\n            (hideSingleSelectionIndicatorChanges && !hideSingleSelectionIndicatorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._element.nativeElement.removeEventListener('focusin', this._handleFocusin);\n        this._element.nativeElement.removeEventListener('focusout', this._handleFocusout);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n        return this._selectionListDisabled;\n    }\n    set disabled(value) {\n        // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n        // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n        // a super property.\n        this._selectionListDisabled = coerceBooleanProperty(value);\n        if (this._selectionListDisabled) {\n            this._keyManager?.setActiveItem(-1);\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            // Sync external changes to the model back to the options.\n            for (let item of event.added) {\n                item.selected = true;\n            }\n            for (let item of event.removed) {\n                item.selected = false;\n            }\n            if (!this._containsFocus()) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n        }\n        return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n        return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n        const activeItem = this._keyManager.activeItem;\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this._keyManager.isTyping() &&\n            activeItem &&\n            !activeItem.disabled) {\n            event.preventDefault();\n            activeItem._toggleOnInteraction();\n        }\n        else if (event.keyCode === A &&\n            this.multiple &&\n            !this._keyManager.isTyping() &&\n            hasModifierKey(event, 'ctrlKey')) {\n            const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n            event.preventDefault();\n            this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHomeAndEnd()\n            .withTypeAhead()\n            .withWrap()\n            .skipPredicate(() => this.disabled);\n        // Set the initial focus.\n        this._resetActiveOption();\n        // Move the tabindex to the currently-focused list item.\n        this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n        // If the active item is removed from the list, reset back to the first one.\n        this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const activeItem = this._keyManager.activeItem;\n            if (!activeItem || this._items.toArray().indexOf(activeItem) === -1) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n        this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n        this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n        if (this.disabled) {\n            this._setActiveOption(-1);\n            return;\n        }\n        const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n        this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0\", type: MatSelectionList, isStandalone: true, selector: \"mat-selection-list\", inputs: { color: \"color\", compareWith: \"compareWith\", multiple: \"multiple\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\" }, classAttribute: \"mat-mdc-selection-list mat-mdc-list-base mdc-list\" }, providers: [\n            MAT_SELECTION_LIST_VALUE_ACCESSOR,\n            { provide: MatListBase, useExisting: MatSelectionList },\n            { provide: SELECTION_LIST, useExisting: MatSelectionList },\n        ], queries: [{ propertyName: \"_items\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', host: {\n                        'class': 'mat-mdc-selection-list mat-mdc-list-base mdc-list',\n                        'role': 'listbox',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [\n                        MAT_SELECTION_LIST_VALUE_ACCESSOR,\n                        { provide: MatListBase, useExisting: MatSelectionList },\n                        { provide: SELECTION_LIST, useExisting: MatSelectionList },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape)}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color);width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font);line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height);font-size:var(--mdc-list-list-item-trailing-supporting-text-size);font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking)}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color);width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color)}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color)}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color);font-family:var(--mdc-list-list-item-label-text-font);line-height:var(--mdc-list-list-item-label-text-line-height);font-size:var(--mdc-list-list-item-label-text-size);font-weight:var(--mdc-list-list-item-label-text-weight);letter-spacing:var(--mdc-list-list-item-label-text-tracking)}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color)}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color)}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color);font-family:var(--mdc-list-list-item-supporting-text-font);line-height:var(--mdc-list-list-item-supporting-text-line-height);font-size:var(--mdc-list-list-item-supporting-text-size);font-weight:var(--mdc-list-list-item-supporting-text-weight);letter-spacing:var(--mdc-list-list-item-supporting-text-tracking)}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color);opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color);opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color)}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color);opacity:var(--mdc-list-list-item-hover-state-layer-opacity)}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color);opacity:var(--mdc-list-list-item-disabled-state-layer-opacity)}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color);opacity:var(--mdc-list-list-item-focus-state-layer-opacity)}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape);background-color:var(--mdc-list-list-item-leading-avatar-color)}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape);--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape)}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color)}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], hideSingleSelectionIndicator: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass MatListModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule,\n            MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListSubheaderCssMatStyler,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta], exports: [MatList,\n            MatActionList,\n            MatNavList,\n            MatSelectionList,\n            MatListItem,\n            MatListOption,\n            MatListItemAvatar,\n            MatListItemIcon,\n            MatListSubheaderCssMatStyler,\n            MatDividerModule,\n            MatListItemLine,\n            MatListItemTitle,\n            MatListItemMeta] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            MatPseudoCheckboxModule, MatDividerModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        ObserversModule,\n                        CommonModule,\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatPseudoCheckboxModule,\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListSubheaderCssMatStyler,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                    exports: [\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListSubheaderCssMatStyler,\n                        MatDividerModule,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_LIST_CONFIG, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MultiLineTextComponent } from './question/multi-line-text.component';\nimport { QuestionComponent } from './question/question.component';\nimport { RatingsComponent } from './question/rating.component';\nimport { SelectionComponent } from './question/selection.component';\nimport { SingleLineTextComponent } from './question/single-line-text.component';\nimport { RatingsWidgetComponent } from './survey-widget/ratings-widget.component';\nimport { SelectionWidgetComponent } from './survey-widget/selection.widget.component';\nimport { SurveyWidgetComponent } from './survey-widget/survey-widget.component';\nimport { TableWidgetComponent } from './survey-widget/table-widget.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule\n    ],\n    declarations: [\n        QuestionComponent,\n        SingleLineTextComponent,\n        SelectionComponent,\n        MultiLineTextComponent,\n        RatingsComponent,\n        SurveyWidgetComponent,\n        SelectionWidgetComponent,\n        RatingsWidgetComponent,\n        TableWidgetComponent\n    ],\n    exports: [QuestionComponent,SurveyWidgetComponent],\n})\nexport class SurveySuiteModule {}\n","import { Question, QuestionType, UISurveyObj, UISurveyPage } from \"./types\";\nimport { Survey, SurveyQuestion } from '@placeos/ts-client';\n\nexport function generateNewQuestion(): Question{\n    return {\n        title: '',\n        name: '',\n        tags: [],\n        type: QuestionType.Single_Line_Text,\n        isRequired: false,\n        deleted:false\n    };\n}\n\nexport function generateNewSurvey(){\n    return {\n        title:'New Survey Title',\n        description: '',\n        pages:[\n            {\n                title:'',\n                elements:[]\n            }\n        ]\n    } as UISurveyObj;\n}\n\nexport function translateToSurveyPage(pages: UISurveyPage[]){\n    if(!pages) return [];\n    let surveyPages = [];\n    pages.forEach(p => {\n        const { title, description } = p;\n        const question_order = (p.elements || []).map(e => e.id);\n        surveyPages.push({title,description,question_order})\n    })\n    return surveyPages;\n}\n\nexport function translateToUISurveyObj(survey: Survey, questions: Question[]){\n    const {id, title, description, trigger, zone_id, building_id, pages} = survey;\n    let questSet = new Map();\n    questions.forEach(e => questSet.set(e.id, e));\n\n    let transPages:UISurveyPage[] = [];\n    pages.forEach(p => {\n        const {title, description, question_order} = p;\n        let elements = [];\n        question_order.forEach(q => elements.push(questSet.get(q)));\n        transPages.push({title,description, elements});\n    })\n\n    return { id, title, description, trigger, zone_id, building_id, pages: transPages} as UISurveyObj\n\n}\n\nexport function translateToSurveyQuestion(q: Question) {\n    const { id, title, description, type, isRequired, options, tags, rateMax, choices } = q;\n    return {\n        id,\n        title,\n        description,\n        type,\n        options,\n        choices,\n        tags,\n        required: isRequired,\n        max_rating: rateMax\n    } as Partial<SurveyQuestion>;\n}\n\nexport function translateToQuestion(q: SurveyQuestion) {\n    return {\n        id: q.id,\n        title: q.title,\n        description: q.description,\n        name: `${q.id}`,\n        type: q.type,\n        rateMax: q.max_rating,\n        choices: q.choices || [],\n        isRequired: q.required || false,\n        tags: q.tags || [],\n        deleted: q.deleted || false\n    } as Question;\n}\n\nexport function underToSpace(str: string) {\n    return str.replace(/_/g, ' ');\n}\n\nexport function getEnumOptions<T>(targetEnum: T) {\n    return filterStringEnumItems(targetEnum).map((e) => ({\n        name: underToSpace(e[0]),\n        value: e[1],\n    }));\n}\n\nexport function getEnumMap<T>(targetEnum: T) {\n    let emap = {};\n    filterStringEnumItems(targetEnum).forEach(\n        (e) => (emap[e[1]] = underToSpace(e[0]))\n    );\n    return emap;\n}\n\nexport function filterStringEnumItems<T>(targetEnum: T) {\n    return Object.entries(targetEnum).filter((e) => isNaN(Number(e[0])));\n}\n\nexport function makeHTMLId(length: number){\n    let result           = '';\n    const characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","import { getEnumMap, getEnumOptions } from './helper';\n\nexport enum TriggerEnum {\n    None = 'NONE',\n    Reserved = 'RESERVED',\n    Checked_In = 'CHECKEDIN',\n    Checked_Out = 'CHECKEDOUT',\n    // No_Show = 'NOSHOW',\n    Rejected = 'REJECTED',\n    Cancelled = 'CANCELLED',\n    // Ended = 'ENDED'\n    Visitor = 'VISITOR',\n}\n\nexport enum QuestionType {\n    Single_Line_Text = 'text',\n    Comment_Box = 'comment',\n    Radio_Group = 'radiogroup',\n    Drop_Down = 'dropdown',\n    Check_Box = 'checkbox',\n    Rating = 'rating',\n}\n\n/** Enum Options key-value pair */\nexport const QuestionTypeOptions = getEnumOptions(QuestionType);\nexport const TriggerOptions = getEnumOptions(TriggerEnum);\n\n/** Enum Map */\nexport const QuestionTypeEnumMap = getEnumMap(QuestionType);\nexport const TriggerEnumMap = getEnumMap(TriggerEnum);\n\nexport interface UISurveyStats {\n    answer_count: number;\n}\nexport interface UISurveyResponse {\n    question: Question;\n    answers: UISurveyAnswer[];\n}\nexport interface UISurveyAnswer {\n    id: number;\n    question_id: number;\n    survey_id: number;\n    type: string;\n    answer_json: any;\n}\n\nexport interface UISurveyObj {\n    id: number;\n    title: string;\n    description?: string;\n    trigger: TriggerEnum;\n    zone_id: string;\n    building_id: string;\n    pages: UISurveyPage[];\n}\n\nexport interface UISurveyPage {\n    title: string;\n    description?: string;\n    elements: Question[];\n}\n\nexport interface Question {\n    id?: number;\n    selected?: boolean;\n    type: QuestionType;\n    name?: string;\n    title: string;\n    description?: string;\n    choices?: any[];\n    tags?: string[];\n    isRequired?: boolean;\n    options?: any;\n    rateMax?: number;\n    deleted: boolean;\n}\n\nexport interface Choice {\n    text: string;\n    value?: string;\n}\n\nexport enum Tag {\n    desk = 'Desk',\n    room = 'Room',\n    parking = 'Parking',\n}\n\nexport class Survey {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Survey title entered by user */\n    public readonly title: string;\n    /** Survey description */\n    public readonly description: string;\n    /** Survey description */\n    public readonly question_order: number;\n    /** Type of event that triggers survey being sent */\n    public readonly type: string;\n    /** Building that survey is associated with */\n    public readonly building_name: string;\n    /** Level that survey is associated with */\n    public readonly level?: string;\n    /** Date of survey creation */\n    public readonly date_created: string;\n    /** Link to survey for user completion */\n    public readonly link: string;\n    /** Survey options in Survey List component */\n    public readonly options: string[];\n\n    constructor(data: any = {}) {\n        this.id = data.id || '';\n        this.title = data.title || '';\n        this.description = data.description || '';\n        this.question_order = data.question_order || 0;\n        this.type = data.survey_type || '';\n        this.building_name = data.name || '';\n        this.date_created = '';\n        this.link = data.link || '';\n        this.options = ['open'];\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Question, QuestionType } from \"../types\";\n\n@Component({\n    selector: 'base-question',\n    styles: [],\n    template: ``\n})\n\nexport class BaseQuestionComponent{\n    @Input() preview: boolean = false;\n    // @Input() readonly: boolean = false;\n    @Input() set value(value:Question){\n        if(value){\n            this.question = value;\n        }\n        this.hasValue = !!value;\n    }\n\n    protected hasValue = false;\n    protected question:Question;\n\n    protected readonly placeholderTitle = 'Enter your question here';\n\n    constructor(){}\n}","import { Component } from \"@angular/core\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n\n@Component({\n    selector: 'single-line-text',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full\" *ngIf=\"preview\">\n            <mat-form-field apppearance=\"outline\">\n                <input matInput type=\"text\"/>\n                <mat-hint>*Type your answer above</mat-hint>\n            </mat-form-field>\n        </div>\n    `\n})\n\nexport class SingleLineTextComponent extends BaseQuestionComponent{\n\n    constructor(){\n        super();\n    }\n}","import { ChangeDetectionStrategy, Component, Input, OnInit } from \"@angular/core\";\nimport { Question, QuestionType } from \"../types\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'selection',\n    styles: [`\n        .item-textbox{\n            padding: 0.25rem;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n\n    <ng-container *ngIf=\"question\">\n        <div class=\"flex flex-col w-full\">\n            <ng-container *ngIf=\"!preview;else previewState;\">\n                <div class=\"flex flex-col w-full mb-4 pl-2\">\n                    \n                        <div \n                            *ngFor=\"let item of question.choices; let i = index;\" \n                            class=\"flex flex-row w-full items-center space-x-3 pb-3\">\n                                \n                                    <span>{{i+1}}. </span>\n                                    <mat-form-field \n                                        class=\"w-full\" \n                                        appearance=\"outline\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <input matInput type=\"text\" [(ngModel)]=\"item.text\" name=\"item{{i}}\"/>\n                                    </mat-form-field>\n                                    <button matSuffix mat-icon-button (click)=\"deleteOption(i)\">\n                                        <mat-icon>\n                                            delete_outline\n                                        </mat-icon>\n                                    </button>\n                        </div>\n                    \n                </div>\n                <button  \n                    mat-stroked-button \n                    (click)=\"addOption()\">\n                    <div class=\"flex flex-row items-center text-gray-800\">\n                        <mat-icon>add_circle</mat-icon>\n                        <span>Add option</span>\n                    </div>\n                </button>\n\n            </ng-container>\n\n            <ng-template #previewState>\n                <mat-form-field *ngIf=\"isDropDown; else inputType;\">\n                    <mat-select>\n                        <mat-option *ngFor=\"let item of question.choices\" [value]=\"item.value\">{{item.text}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n            <ng-template #inputType>\n                <div class=\"flex flex-col w-full pl-2\">\n                    <div \n                        *ngFor=\"let item of question.choices; let i = index;\" \n                        class=\"flex flex-row w-full items-center space-x-3 pb-3\">\n                            <input [type]=\"multiple ? 'checkbox' : 'radio'\" name=\"options\">\n                            <span>{{item.text}}</span>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </ng-container>\n    `\n})\n\nexport class SelectionComponent extends BaseQuestionComponent implements OnInit{\n\n\n    public get isDropDown(){\n        return this.question?.type === QuestionType.Drop_Down;\n    }\n    public get multiple(){\n        return this.question?.type === QuestionType.Check_Box;\n    }\n\n    ngOnInit(){\n        if(!this.question?.choices){\n            this.question.choices = [];\n        }\n    }\n\n    addOption(){\n        this.question.choices.push({text:''});\n    }\n\n    deleteOption(index: number){\n        this.question.choices.splice(index,1);\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionType } from \"../types\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'multi-line-text',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full\" *ngIf=\"preview\">\n            <mat-form-field appearance=\"outline\">\n                <textarea matInput cols=\"30\" rows=\"5\"></textarea>\n                <mat-hint>*Type your answer above. Multiple lines supported</mat-hint>\n            </mat-form-field>\n        </div>\n    `\n})\n\nexport class MultiLineTextComponent extends BaseQuestionComponent{\n\n    constructor(){\n        super();\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'rating',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full p-4\">\n            <div class=\"flex flex-row items-center mb-4 space-x-2\">\n                <div *ngFor=\"let i of generateArray(question.rateMax)\" \n                    class=\"flex justify-center items-center h-10 w-10 border rounded-full\">\n                    <span class=\"font-semibold\">{{i}}</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"!preview\">\n                <mat-slider\n                    [max]=\"10\" [min]=\"3\" \n                    [thumbLabel]=\"true\" \n                    [step]=\"1\">\n                    <input matSliderThumb [(ngModel)]=\"question.rateMax\">\n                </mat-slider>\n                <span class=\"text-xs\">Move the slider to adjust the rating options</span>\n            </div>\n\n        </div>\n    `\n})\n\nexport class RatingsComponent extends BaseQuestionComponent implements OnInit{\n\n    constructor(){\n        super();\n    }\n\n    ngOnInit(){\n        if(!this.question.rateMax){\n            this.question.rateMax = 3;\n        }\n    }\n\n    generateArray(max:number){\n        return Array.from({length: max}, (val, index) => (index+1));\n    }\n\n\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { Question, QuestionType, QuestionTypeOptions } from '../types';\n\n@Component({\n    selector: 'placeos-question',\n    styles: [],\n    template: `\n        <div\n            class=\"border bg-base-100 shadow flex flex-col w-full items-center justify-between px-4 py-2 pt-4\"\n        >\n            <ng-container *ngIf=\"!preview; else previewTitle\">\n                <mat-form-field class=\"w-full\" appearance=\"outline\">\n                    <input\n                        matInput\n                        placeholder=\"Enter your question here\"\n                        type=\"text\"\n                        [(ngModel)]=\"question.title\"\n                    />\n                    <mat-error class=\"input-error\" *ngIf=\"!question?.title\"\n                        >Please enter a question</mat-error\n                    >\n                </mat-form-field>\n            </ng-container>\n\n            <ng-template #previewTitle>\n                <span class=\"text-xl w-full mb-4\">{{\n                    question.title || 'No question'\n                }}</span>\n            </ng-template>\n\n            <div class=\"flex flex-col w-full mb-4\" [ngSwitch]=\"question.type\">\n                <ng-container *ngSwitchCase=\"QuestionType.Comment_Box\">\n                    <multi-line-text\n                        [question]=\"question\"\n                        [preview]=\"preview\"\n                    ></multi-line-text>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Single_Line_Text\">\n                    <single-line-text\n                        [question]=\"question\"\n                        [preview]=\"preview\"\n                    ></single-line-text>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Check_Box\">\n                    <selection\n                        [value]=\"question\"\n                        [preview]=\"preview\"\n                    ></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Radio_Group\">\n                    <selection\n                        [value]=\"question\"\n                        [preview]=\"preview\"\n                    ></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Drop_Down\">\n                    <selection\n                        [value]=\"question\"\n                        [preview]=\"preview\"\n                    ></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Rating\">\n                    <rating [value]=\"question\" [preview]=\"preview\"></rating>\n                </ng-container>\n            </div>\n\n            <div\n                class=\"flex flex-row w-full items-center justify-end space-x-4\"\n                *ngIf=\"!preview\"\n            >\n                <!-- <mat-form-field appearance=\"outline\" class=\"h-[2rem]\">\n                    <div class=\"mat-form-field-wrapper\" style=\"margin-bottom: 0;\">\n                        <mat-select [(ngModel)]=\"question.type\">\n                            <mat-option\n                                *ngFor=\"let item of typeOptions\"\n                                [value]=\"item.value\"\n                            >\n                                {{ item.name }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                </mat-form-field> -->\n\n                <select [(ngModel)]=\"question.type\">\n                    <option\n                        *ngFor=\"let item of typeOptions\"\n                        [value]=\"item.value\"\n                    >\n                        {{ item.name }}\n                    </option>\n                </select>\n\n                <mat-slide-toggle [(ngModel)]=\"question.isRequired\">\n                    Required</mat-slide-toggle\n                >\n                <!-- <mat-slide-toggle [(ngModel)]=\"preview\"> Preview</mat-slide-toggle> -->\n            </div>\n        </div>\n    `,\n})\nexport class QuestionComponent implements OnInit {\n    @Input() preview: boolean = false;\n    @Input() set value(value: Question) {\n        if (value) {\n            this.question = value;\n        }\n        this.hasValue = !!value;\n    }\n\n    public QuestionType = QuestionType;\n    public typeOptions = QuestionTypeOptions;\n\n    public hasValue = false;\n    public question: Question;\n\n    constructor() {}\n\n    public get valid() {\n        if (!this.question?.title) return false;\n        const q = this.question;\n        let valid = true;\n\n        switch (q.type) {\n            case QuestionType.Check_Box:\n            case QuestionType.Radio_Group:\n            case QuestionType.Drop_Down:\n                const checkop = q.choices?.map((e) => !!e?.text?.length);\n                valid =\n                    !!checkop?.length &&\n                    checkop.reduce((acc, val) => acc && val);\n                break;\n            case QuestionType.Rating:\n                valid = q.rateMax >= 3;\n        }\n\n        return valid;\n    }\n\n    ngOnInit(): void {}\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport { TriggerEnum } from '@placeos/survey-suite';\nimport { queryAnswers, querySurveys, Survey } from '@placeos/ts-client';\nimport { BehaviorSubject, forkJoin, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nexport interface BuildingSurveyStats {\n    lives: number;\n    drafts: number;\n    responses: number;\n}\n\n@Injectable()\nexport class BuildingListItemService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _stats = new BehaviorSubject<BuildingSurveyStats>({\n        lives: 0,\n        drafts: 0,\n        responses: 0,\n    });\n    public readonly stats$ = this._stats.asObservable();\n    set stats(value: BuildingSurveyStats) {\n        this._stats.next(value);\n    }\n\n    constructor() {}\n\n    async initStats(building_id: string) {\n        if (!building_id?.length) return;\n        const stats = {\n            lives: 0,\n            drafts: 0,\n            responses: 0,\n        };\n\n        this.loading = 'Loading statistics';\n        const surveys = await this.getBuildingSurveys(building_id);\n        let resArr = [];\n        surveys.forEach((s) => {\n            if (s.trigger === TriggerEnum.None) stats.drafts += 1;\n            else stats.lives += 1;\n            resArr.push(this.getSurveyResponses(`${s.id}`));\n        });\n        if (resArr.length > 0) {\n            const res = await forkJoin(resArr)\n                .pipe(\n                    map((res: number[]) =>\n                        res.reduce((arr, curr) => arr + curr, 0)\n                    )\n                )\n                .toPromise();\n            stats.responses = res;\n        }\n        this.stats = stats;\n        this.loading = '';\n    }\n\n    private async getBuildingSurveys(building_id: string) {\n        return querySurveys({ building_id })\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Error loading surveys');\n                    return of(null);\n                })\n            )\n            .toPromise() as Promise<Survey[]>;\n    }\n\n    private async getSurveyResponses(survey_id: string) {\n        return queryAnswers({ survey_id })\n            .pipe(\n                first(),\n                map((answers) => answers?.length || 0),\n                catchError((err) => of(0))\n            )\n            .toPromise();\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Building } from '@placeos/organisation';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BuildingListItemService } from '../services/building-list-item.service';\nimport { shareReplay } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'building-list-item',\n    template: `\n        <section\n            class=\"building-wrapper bg-base-100 my-4 mx-auto rounded-md overflow-hidden\"\n        >\n            <div *ngIf=\"building.image\" class=\"image-container\">\n                <img\n                    auth\n                    class=\"flex object-fill \"\n                    [source]=\"building.image\"\n                    alt=\"image of building\"\n                />\n            </div>\n            <div *ngIf=\"!building.image\" class=\"image-container\">\n                <span> <app-icon class=\"domain-icon\">domain</app-icon></span>\n            </div>\n            <div class=\"details-container my-4 mx-8 w-full relative\">\n                <div class=\"location-wrapper\">\n                    <app-icon\n                        class=\"location-icon\"\n                        aria-hidden=\"false\"\n                        aria-label=\"Material icon of location pointer\"\n                        >location_on</app-icon\n                    >\n                    <span> {{ building.address }} </span>\n                </div>\n\n                <span class=\"building-title\">\n                    {{ building.display_name }}\n                </span>\n                <ng-container\n                    *ngIf=\"!(loading$ | async)?.length; else loadState\"\n                >\n                    <ng-container *ngIf=\"stats$ | async as stats\">\n                        <div class=\"flex py-4 justify-end space-x-2\">\n                            <div class=\"flex flex-col items-center flex-1\">\n                                <h3>Live Surveys</h3>\n                                <p class=\"text-4xl\">\n                                    {{ stats?.lives || 0 }}\n                                </p>\n                            </div>\n                            <div class=\"flex flex-col items-center flex-1\">\n                                <h3>Draft Surveys</h3>\n                                <p class=\"text-4xl\">\n                                    {{ stats?.drafts || 0 }}\n                                </p>\n                            </div>\n                            <div class=\"flex flex-col items-center flex-1\">\n                                <h3>Total Answers</h3>\n                                <p class=\"text-4xl\">\n                                    {{ stats?.responses || 0 }}\n                                </p>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n                <div class=\"flex justify-end w-full mt-4\">\n                    <button btn matRipple class=\"inverse\" (click)=\"navigate()\">\n                        <span class=\"ml-2\">View</span>\n                        <app-icon class=\"ml-1 text-2xl\">chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n        </section>\n        <ng-template #loadState>\n            <div class=\"flex absolute inset-0 opacity-60 bg-base-100 z-10\">\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .building-wrapper {\n                display: flex;\n                position: relative;\n                flex-direction: row;\n                position: relative;\n                justify-content: flex-start;\n                height: 260px;\n                max-width: 68rem;\n                border: 1px solid #e6e6e6;\n                box-shadow: 0px 2px 4px rgba(5, 28, 44, 0.1);\n            }\n            .options {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                background-color: var(--b1);\n                position: absolute;\n                height: 48px;\n                width: 48px;\n                top: 10px;\n                left: 10px;\n                border: 1px solid #e6e6e6;\n                border-radius: 3px;\n            }\n            .menu-wrapper {\n                display: flex;\n                flex-direction: column;\n                height: 90px;\n                width: 135px;\n                justify-content: center;\n            }\n            .image-container {\n                display: flex;\n                height: 100%;\n                width: 380px;\n                background-color: rgba(0, 0, 0, 0.22);\n                align-items: center;\n                justify-content: center;\n            }\n            .details-container {\n                display: flex;\n                flex-direction: column;\n                min-width: 600px;\n            }\n            .location-wrapper {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                margin-bottom: 20px;\n            }\n            .location-icon {\n                color: #5295f7;\n                margin-right: 10px;\n            }\n            .domain-icon {\n                display: flex;\n                color: #fff;\n                height: 100%;\n                width: 100%;\n            }\n            .building-title {\n                font-size: 18px;\n                font-weight: 500;\n            }\n            .details-text {\n                display: flex;\n                flex-direction: column;\n                font-size: 14px;\n                font-weight: 400;\n                color: #020202;\n                margin-bottom: 10px;\n                justify-content: space-between;\n                height: 70px;\n            }\n            .button-container {\n                display: flex;\n                position: absolute;\n                bottom: 20px;\n                right: 20px;\n            }\n            /* .view-button {\n                display: inline-flex;\n                color: #292f5b;\n                background-color: var(--b1);\n                border-radius: 2px;\n                margin: 20px 0px 20px 20px;\n                justify-content: center;\n                padding-left: 20px;\n            }\n            .view-button span {\n                display: inline-flex;\n            }\n            .view-button app-icon {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            } */\n        `,\n    ],\n    providers: [BuildingListItemService],\n})\nexport class BuildingListItemComponent implements OnInit {\n    @Input() building: Building | any;\n\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n    stats$ = this.service.stats$.pipe(shareReplay(1));\n\n    constructor(\n        private _settings: SettingsService,\n        private router: Router,\n        private service: BuildingListItemService\n    ) {}\n\n    ngOnInit(): void {\n        this.service.initStats(this.building.id);\n    }\n\n    navigate(): void {\n        this.router.navigate([\n            this._settings.get('app.default_route').includes('new')\n                ? '/surveys/new'\n                : '/survey',\n            'survey-list',\n            this.building.id,\n        ]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-list',\n    template: `\n        <div class=\"flex flex-col p-4 h-full\">\n            <div\n                class=\"flex w-full items-center justify-between py-4 bg-base-100 max-w-[68rem] m-auto\"\n            >\n                <span class=\"text-2xl\">\n                    {{ (buildings$ | async)?.length }} Building{{\n                        (buildings$ | async)?.length > 1 ? 's' : ''\n                    }}\n                </span>\n            </div>\n            <div *ngFor=\"let building of buildings$ | async\">\n                <building-list-item [building]=\"building\"></building-list-item>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                overflow: auto;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class BuildingListComponent {\n    public readonly buildings$ = this._org.building_list;\n\n    constructor(private _org: OrganisationService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <div\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </div>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ViewChild, Directive, Input, ViewContainerRef, Injectable, HostBinding, ElementRef, Pipe, HostListener, NgModule } from '@angular/core';\nimport * as Survey from 'survey-core';\nimport { createPopupModalViewModel, settings, createDialogOptions, SvgRegistry, PopupSurveyModel, LocalizableString, createPopupViewModel, Helpers, DropdownMultiSelectListModel, RendererFactory, ButtonGroupItemModel, doKey2ClickUp, doKey2ClickDown, doKey2ClickBlur, getActionDropdownButtonTarget, ActionDropdownViewModel, SurveyProgressModel, ProgressButtonsResponsivityManager, SurveyModel } from 'survey-core';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/platform-browser';\n\nclass EmbeddedViewContentComponent {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnInit() {\n        var _a;\n        if (!!this.templateRef) {\n            this.embeddedView = (_a = this.viewContainerRef) === null || _a === void 0 ? void 0 : _a.createEmbeddedView(this.templateRef);\n        }\n    }\n}\nEmbeddedViewContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: EmbeddedViewContentComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nEmbeddedViewContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: EmbeddedViewContentComponent, selector: \"ng-component\", viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: [\"template\"], descendants: true, read: TemplateRef, static: true }], ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: EmbeddedViewContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\",\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { templateRef: [{\n                type: ViewChild,\n                args: [\"template\", { read: TemplateRef, static: true }]\n            }] } });\n\nclass BaseAngular extends EmbeddedViewContentComponent {\n    constructor(changeDetectorRef, viewContainerRef) {\n        super(viewContainerRef);\n        this.changeDetectorRef = changeDetectorRef;\n        this.isModelSubsribed = false;\n        this.isDestroyed = false;\n    }\n    get surveyModel() {\n        return this.getModel().getSurvey();\n    }\n    ngDoCheck() {\n        if (this.previousModel !== this.getModel()) {\n            this.unMakeBaseElementAngular(this.previousModel);\n            this.makeBaseElementAngular(this.getModel());\n            this.onModelChanged();\n            this.previousModel = this.getModel();\n        }\n        this.setIsRendering(true);\n    }\n    onModelChanged() { }\n    setIsRendering(val) {\n        const model = this.getModel();\n        if (!!model) {\n            model.isRendering = val;\n        }\n    }\n    getIsRendering() {\n        const model = this.getModel();\n        return !!model && !!model.isRendering;\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true;\n        this.unMakeBaseElementAngular(this.getModel());\n        this.previousModel = undefined;\n    }\n    makeBaseElementAngular(stateElement) {\n        if (!!stateElement && !stateElement.__ngImplemented) {\n            this.isModelSubsribed = true;\n            stateElement.__ngImplemented = true;\n            stateElement.iteratePropertiesHash((hash, key) => {\n                var val = hash[key];\n                if (Array.isArray(val)) {\n                    var val = val;\n                    val[\"onArrayChanged\"] = (arrayChanges) => {\n                        this.update(key);\n                    };\n                }\n            });\n            stateElement.setPropertyValueCoreHandler = (hash, key, val) => {\n                if (hash[key] !== val) {\n                    hash[key] = val;\n                    this.update(key);\n                }\n            };\n            stateElement.enableOnElementRenderedEvent();\n        }\n    }\n    unMakeBaseElementAngular(stateElement) {\n        if (!!stateElement && this.isModelSubsribed) {\n            this.isModelSubsribed = false;\n            stateElement.__ngImplemented = false;\n            stateElement.setPropertyValueCoreHandler = undefined;\n            stateElement.iteratePropertiesHash((hash, key) => {\n                var val = hash[key];\n                if (Array.isArray(val)) {\n                    var val = val;\n                    val[\"onArrayChanged\"] = () => { };\n                }\n            });\n            stateElement.disableOnElementRenderedEvent();\n        }\n    }\n    update(key) {\n        if (this.getIsRendering())\n            return;\n        this.beforeUpdate();\n        if (key && this.getPropertiesToUpdateSync().indexOf(key) > -1) {\n            this.detectChanges();\n            this.afterUpdate(true);\n        }\n        else {\n            queueMicrotask(() => {\n                if (!this.isDestroyed) {\n                    this.setIsRendering(true);\n                    this.detectChanges();\n                }\n                this.afterUpdate();\n            });\n        }\n    }\n    getChangeDetectorRef() {\n        return this.embeddedView ? this.embeddedView : this.changeDetectorRef;\n    }\n    getPropertiesToUpdateSync() {\n        return [];\n    }\n    detectChanges() {\n        this.getChangeDetectorRef().detectChanges();\n    }\n    getShouldReattachChangeDetector() {\n        return true;\n    }\n    beforeUpdate() {\n        this.setIsRendering(true);\n    }\n    afterUpdate(isSync = false) {\n        this.setIsRendering(false);\n        const model = this.getModel();\n        if (model && !this.isDestroyed) {\n            model.afterRerender();\n        }\n    }\n    ngAfterViewChecked() {\n        this.setIsRendering(false);\n    }\n}\nBaseAngular.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BaseAngular, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nBaseAngular.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BaseAngular, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BaseAngular, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }]; } });\n\nclass AngularComponentFactory {\n    constructor() {\n        this.creatorHash = {};\n    }\n    registerComponent(typeName, componentType) {\n        this.creatorHash[typeName] = componentType;\n    }\n    getAllTypes() {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    }\n    isComponentRegistered(elementType) {\n        return !!this.creatorHash[elementType];\n    }\n    create(containerRef, elementType, resolver) {\n        var componentType = this.creatorHash[elementType];\n        if (!componentType)\n            return null;\n        return containerRef.createComponent(resolver.resolveComponentFactory(componentType));\n    }\n}\nAngularComponentFactory.Instance = new AngularComponentFactory();\n\nclass DynamicComponentDirective {\n    constructor(containerRef, templateRef, resolver) {\n        this.containerRef = containerRef;\n        this.templateRef = templateRef;\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        var _a;\n        const componentChanges = changes[\"component\"];\n        if (componentChanges.currentValue.name !== ((_a = componentChanges.previousValue) === null || _a === void 0 ? void 0 : _a.name) ||\n            (componentChanges.currentValue.name === undefined && componentChanges.previousValue === undefined && !this.componentInstance)) {\n            this.createComponent();\n        }\n        else {\n            this.updateComponentData();\n        }\n    }\n    createComponent() {\n        this.containerRef.clear();\n        if (AngularComponentFactory.Instance.isComponentRegistered(this.component.name)) {\n            this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.name, this.resolver).instance;\n        }\n        else if (this.component.default) {\n            this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.default, this.resolver).instance;\n        }\n        if (!this.componentInstance) {\n            throw new Error(`Can't create component with name: ${this.component.name} and default: ${this.component.default}`);\n        }\n        else {\n            this.componentInstance.contentTempl = this.templateRef;\n        }\n        this.updateComponentData();\n    }\n    updateComponentData() {\n        const data = this.component.data;\n        Object.keys(data).forEach((key) => {\n            this.componentInstance[key] = data[key];\n        });\n    }\n}\nDynamicComponentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DynamicComponentDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicComponentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DynamicComponentDirective, selector: \"[component]\", inputs: { component: \"component\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DynamicComponentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[component]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }]; }, propDecorators: { component: [{\n                type: Input\n            }] } });\n\nclass ActionComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    getPropertiesToUpdateSync() {\n        return [\"mode\"];\n    }\n    get id() {\n        return this.model.id || '';\n    }\n}\nActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ActionComponent, selector: \"sv-ng-action\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"actionContent\", first: true, predicate: [\"actionContent\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.getActionRootCss()\\\" [id]=\\\"id\\\">\\n    <div class=\\\"sv-action__content\\\">\\n      <ng-container *ngIf=\\\"model.needSeparator\\\">\\n        <div class=\\\"sv-action-bar-separator\\\"></div>\\n      </ng-container>\\n      <ng-template [component]=\\\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\\\"></ng-template>\\n    </div>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none; }\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-action\",\n                    templateUrl: \"./action.component.html\",\n                    styles: [\":host { display: none; }\"],\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], actionContent: [{\n                type: ViewChild,\n                args: [\"actionContent\", { read: ViewContainerRef, static: true }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action\", ActionComponent);\n\nclass ActionBarComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get allowOnClick() {\n        return this.handleClick !== undefined ? this.handleClick : true;\n    }\n    onModelChanged() {\n        var _a;\n        super.onModelChanged();\n        (_a = this.previousModel) === null || _a === void 0 ? void 0 : _a.resetResponsivityManager();\n        if (!!this.model.hasActions && !!this.container && !!this.container.nativeElement) {\n            this.model.initResponsivityManager(this.container.nativeElement);\n        }\n    }\n    onClick(event) {\n        if (this.allowOnClick) {\n            event.stopPropagation();\n        }\n    }\n    ngAfterViewInit() {\n        if (!!this.model.hasActions) {\n            this.model.initResponsivityManager(this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.resetResponsivityManager();\n    }\n}\nActionBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: { model: \"model\", handleClick: \"handleClick\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"model.hasActions\\\" [class]=\\\"model.getRootCss()\\\" (click)=\\\"onClick($event)\\\" #container>\\n    <ng-container *ngFor=\\\"let action of model.renderedActions\\\">\\n      <sv-ng-action [model]=\\\"action\\\"></sv-ng-action>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none }\"], components: [{ type: ActionComponent, selector: \"sv-ng-action\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-action-bar, sv-ng-action-bar\",\n                    templateUrl: \"./action-bar.component.html\",\n                    styles: [\":host { display: none }\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], handleClick: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar\", ActionBarComponent);\n\nclass VisibleDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    ngOnChanges(changes) {\n        changes[\"visible\"].currentValue ? this.show() : this.hide();\n    }\n    hide() {\n        this.el.nativeElement.style.display = \"none\";\n    }\n    show() {\n        this.el.nativeElement.style.display = \"\";\n    }\n}\nVisibleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: VisibleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nVisibleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: VisibleDirective, selector: \"[visible]\", inputs: { visible: \"visible\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: VisibleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[visible]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { visible: [{\n                type: Input\n            }] } });\n\nclass PopupBaseContainerComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        this.changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.model;\n    }\n    get applyButtonText() {\n        const popupModalModel = this.model;\n        if (!popupModalModel)\n            return null;\n        return popupModalModel.applyButtonText;\n    }\n    apply() {\n        const popupModalModel = this.model;\n        if (!popupModalModel)\n            return;\n        popupModalModel.apply();\n    }\n    getPropertiesToUpdateSync() {\n        return [\"height\"];\n    }\n    getShouldReattachChangeDetector() {\n        return false;\n    }\n    onModelChanged() {\n        this.changeDetectorRef.detectChanges();\n    }\n    afterUpdate(isSync = false) {\n        super.afterUpdate(isSync);\n        if (!isSync) {\n            if (!this.model.isPositionSet && this.model.isVisible) {\n                this.model.updateOnShowing();\n            }\n        }\n    }\n    clickInside(event) {\n        event.stopPropagation();\n    }\n}\nPopupBaseContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupBaseContainerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPopupBaseContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PopupBaseContainerComponent, selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"sv-popup\\\" tabindex=\\\"-1\\\" [class]=\\\"model.styleClass\\\" [visible]=\\\"model.isVisible\\\" (click)=\\\"model.clickOutside($event)\\\" (keydown)=\\\"model.onKeyDown($event)\\\">\\n    <div class=\\\"sv-popup__container\\\" [style]=\\\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\\\" (click)=\\\"clickInside($event)\\\">\\n        <div class=\\\"sv-popup__shadow\\\">\\n            <ng-container *ngIf=\\\"model.showHeader\\\">\\n                <ng-template [component]=\\\"{ name: model.popupHeaderTemplate, data: { model: model } }\\\"></ng-template>\\n            </ng-container>\\n            <div class=\\\"sv-popup__body-content\\\">\\n                <div *ngIf=\\\"model.title\\\" class=\\\"sv-popup__body-header\\\">{{ model.title }}</div>\\n                <div class=\\\"sv-popup__scrolling-content\\\">\\n                    <div class=\\\"sv-popup__content\\\">\\n                        <ng-template [component]=\\\"{ name: model.contentComponentName, data: model.contentComponentData }\\\"></ng-template>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"model.showFooter\\\" class=\\\"sv-popup__body-footer\\\">\\n                    <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\", components: [{ type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupBaseContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\",\n                    templateUrl: \"./popup-container.component.html\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass PopupService {\n    constructor(injector, applicationRef, componentFactoryResolver) {\n        this.injector = injector;\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n    createComponent(popupViewModel) {\n        const portalHost = new DomPortalOutlet(popupViewModel.container, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(PopupBaseContainerComponent);\n        const componentRef = portalHost.attach(portal);\n        popupViewModel.setComponentElement(popupViewModel.container.children[0]);\n        componentRef.instance.model = popupViewModel;\n        componentRef.changeDetectorRef.detectChanges();\n        return portalHost;\n    }\n}\nPopupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupService, deps: [{ token: i0.Injector }, { token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Injectable });\nPopupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }]; } });\n\nclass ModalComponent {\n    constructor(popupService) {\n        this.popupService = popupService;\n        this.functionDefined = false;\n    }\n    showDialog(dialogOptions, rootElement) {\n        const popupViewModel = this.model = createPopupModalViewModel(dialogOptions, rootElement);\n        const onVisibilityChangedCallback = (_, options) => {\n            if (!options.isVisible) {\n                this.portalHost.detach();\n                this.model.dispose();\n            }\n        };\n        popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n        this.portalHost = this.popupService.createComponent(this.model);\n        this.model.model.isVisible = true;\n        return this.model;\n    }\n    ngOnInit() {\n        if (!!settings.showModal)\n            return;\n        this.functionDefined = true;\n        settings.showModal = (componentName, data, onApply, onCancel, cssClass, title, displayMode = \"popup\") => {\n            const options = createDialogOptions(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);\n            return this.showDialog(options);\n        };\n        settings.showDialog = (dialogOptions, rootElement) => {\n            return this.showDialog(dialogOptions, rootElement);\n        };\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        (_a = this.portalHost) === null || _a === void 0 ? void 0 : _a.detach();\n        (_b = this.model) === null || _b === void 0 ? void 0 : _b.dispose();\n        if (this.functionDefined) {\n            settings.showModal = undefined;\n            settings.showDialog = undefined;\n        }\n    }\n}\nModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ModalComponent, deps: [{ token: PopupService }], target: i0.ɵɵFactoryTarget.Component });\nModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ModalComponent, selector: \"sv-ng-modal-container\", ngImport: i0, template: \"\", isInline: true, styles: [\":host{display:none}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ModalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-modal-container\",\n                    template: \"\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], ctorParameters: function () { return [{ type: PopupService }]; } });\n\nclass SvgBundleComponent {\n    ngOnInit() {\n        this.svgContainer.nativeElement.innerHTML = SvgRegistry.iconsRenderedHtml();\n    }\n}\nSvgBundleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SvgBundleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgBundleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SvgBundleComponent, selector: \"sv-svg-bundle\", viewQueries: [{ propertyName: \"svgContainer\", first: true, predicate: [\"svgContainer\"], descendants: true, static: true }], ngImport: i0, template: \"<svg id='sv-icon-holder-global-container' #svgContainer></svg>\", isInline: true, styles: [\":host { display: none; }\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SvgBundleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-svg-bundle\",\n                    template: \"<svg id='sv-icon-holder-global-container' #svgContainer></svg>\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { svgContainer: [{\n                type: ViewChild,\n                args: [\"svgContainer\", { static: true }]\n            }] } });\n\nclass DynamicHeadComponent extends EmbeddedViewContentComponent {\n    get ariaLabel() {\n        return this.element.titleAriaLabel;\n    }\n}\nDynamicHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DynamicHeadComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynamicHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DynamicHeadComponent, selector: \"sv-ng-dynamic-head\", inputs: { tagName: \"tagName\", element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container [ngSwitch]=\\\"tagName\\\">\\n    <h1 *ngSwitchCase=\\\"'h1'\\\" [class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h1>\\n    <h2 *ngSwitchCase=\\\"'h2'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h2>\\n    <h3 *ngSwitchCase=\\\"'h3'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h3>\\n    <h4 *ngSwitchCase=\\\"'h4'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h4>\\n    <h5 *ngSwitchCase=\\\"'h5'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h5>\\n    <h6 *ngSwitchCase=\\\"'h6'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"element.titleAriaRole\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h6>\\n  </ng-container>\\n  <ng-template #titleContent>\\n    <ng-content></ng-content>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DynamicHeadComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dynamic-head\",\n                    templateUrl: \"./dynamic-head.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { tagName: [{\n                type: Input\n            }], element: [{\n                type: Input\n            }] } });\n\nclass SurveyStringComponent {\n}\nSurveyStringComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyStringComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyStringComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\", isInline: true, directives: [{ type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyStringComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-string, '[sv-ng-string]'\",\n                    template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass ElementTitleActionsComponent extends EmbeddedViewContentComponent {\n    get cssClasses() {\n        return (this.element.isPanel ? this.element.cssClasses.panel : this.element.cssClasses) || {};\n    }\n}\nElementTitleActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementTitleActionsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementTitleActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!element.hasTitleActions\\\">\\n    <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"element.hasTitleActions\\\">\\n    <div class=\\\"sv-title-actions\\\">\\n      <span class=\\\"sv-title-actions__title\\\">\\n        <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n      </span>\\n      <sv-ng-action-bar [model]=\\\"element.getTitleToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </ng-container>\\n  <ng-template #elementTitleContent>\\n    <sv-ng-string *ngIf=\\\"element.isTitleRenderedAsString\\\" [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n    <ng-container *ngIf=\\\"!element.isTitleRenderedAsString\\\">\\n      <span\\n        *ngIf=\\\"element.isRequireTextOnStart\\\"\\n        [class]=\\\"cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span\\n        *ngIf=\\\"element.no\\\"\\n        style=\\\"position: static\\\"\\n        [class]=\\\"element.cssTitleNumber\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.no }}</span>\\n      <span *ngIf=\\\"element.no\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\"element.isRequireTextBeforeTitle\\\"\\n        [class]=\\\"cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span *ngIf=\\\"element.isRequireTextBeforeTitle\\\">&nbsp;</span>\\n      <sv-ng-string [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n      <span *ngIf=\\\"element.isRequireTextAfterTitle\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\" element.isRequireTextAfterTitle\\\"\\n        [class]=\\\"cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span> \\n  </ng-container>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementTitleActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-element-title-actions\",\n                    templateUrl: \"./title-actions.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\n\nclass ElementTitleComponent extends EmbeddedViewContentComponent {\n}\nElementTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementTitleComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <sv-ng-dynamic-head [tagName]=\\\"element.titleTagName\\\" [element]=\\\"element\\\" *ngIf=\\\"element.hasTitle\\\">\\n    <sv-ng-element-title-actions [element]=\\\"element\\\"></sv-ng-element-title-actions>\\n  </sv-ng-dynamic-head>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: DynamicHeadComponent, selector: \"sv-ng-dynamic-head\", inputs: [\"tagName\", \"element\"] }, { type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: [\"element\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementTitleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-element-title\",\n                    templateUrl: \"./element-title.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\n\nclass SurveyHeaderComponent {\n    constructor(viewContainerRef, changeDetectorRef) {\n        this.viewContainerRef = viewContainerRef;\n        this.changeDetectorRef = changeDetectorRef;\n    }\n    ngAfterViewInit() {\n        this.survey.afterRenderHeader(this.viewContainerRef.element.nativeElement);\n        this.survey.locLogo.onChanged = () => {\n            this.changeDetectorRef.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        this.survey.locLogo.onChanged = () => { };\n    }\n}\nSurveyHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyHeaderComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSurveyHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyHeaderComponent, selector: \"'[sv-ng-survey-header]'\", inputs: { survey: \"survey\" }, ngImport: i0, template: \"<ng-template *ngIf=\\\"survey.isLogoBefore\\\" [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n<div\\n  *ngIf=\\\"survey.renderedHasTitle\\\"\\n  [class]=\\\"survey.css.headerText\\\"\\n  [style.maxWidth]=\\\"survey.titleMaxWidth\\\"\\n>\\n  <sv-ng-element-title [element]=\\\"survey\\\"></sv-ng-element-title>\\n  <div *ngIf=\\\"survey.renderedHasDescription\\\" [class]=\\\"survey.css.description\\\" [model]=\\\"survey.locDescription\\\" sv-ng-string></div>\\n</div>\\n\\n<ng-template *ngIf=\\\"survey.isLogoAfter\\\" [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n<div [class]=\\\"survey.css.headerClose\\\"></div>\", components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyHeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"'[sv-ng-survey-header]'\",\n                    templateUrl: \"survey-header.component.html\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { survey: [{\n                type: Input\n            }] } });\n\nclass ErrorsComponent {\n    constructor() { }\n    get role() {\n        return \"alert\";\n    }\n    get id() {\n        return this.element.id + \"_errors\";\n    }\n    get ariaLive() {\n        return \"polite\";\n    }\n    get class() {\n        return this.element.cssError;\n    }\n}\nErrorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ErrorsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nErrorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: { element: \"element\", location: \"location\" }, host: { properties: { \"attr.role\": \"this.role\", \"id\": \"this.id\", \"attr.aria-live\": \"this.ariaLive\", \"class\": \"this.class\" } }, ngImport: i0, template: \"<ng-container *ngFor=\\\"let error of element.errors;\\\">\\n  <ng-template [component]=\\\"{ name: element.survey.questionErrorComponent, data: { element: element, cssClasses: element.cssClasses, error: error } }\\\"></ng-template>\\n</ng-container>\\n\", directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ErrorsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"./errors.component.html\",\n                    selector: \"'[sv-ng-errors]'\"\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { element: [{\n                type: Input\n            }], location: [{\n                type: Input\n            }], role: [{\n                type: HostBinding,\n                args: [\"attr.role\"]\n            }], id: [{\n                type: HostBinding,\n                args: [\"id\"]\n            }], ariaLive: [{\n                type: HostBinding,\n                args: [\"attr.aria-live\"]\n            }], class: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }] } });\n\nclass ElementComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get elementComponentName() {\n        return this.model.isPanel ? \"panel\" : \"question\";\n    }\n    onModelChanged() {\n        var _a;\n        super.onModelChanged();\n        if (this.previousModel) {\n            this.previousModel.setWrapperElement(undefined);\n        }\n        if (this.model && ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.setWrapperElement(this.container.nativeElement);\n        }\n    }\n    get componentName() {\n        const survey = this.surveyModel;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(this.model);\n            if (!!name) {\n                return name;\n            }\n        }\n        return this.elementComponentName;\n    }\n    get rootStyle() {\n        //use this if to check if cssClassses are calculated and allowRootStyle flag was set\n        if (!!this.model.cssClasses) {\n            return this.model.rootStyle;\n        }\n        else {\n            return {};\n        }\n    }\n    get componentData() {\n        const survey = this.surveyModel;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(this.model);\n        }\n        return {\n            componentName: this.elementComponentName,\n            componentData: {\n                model: this.model,\n                data: data\n            }\n        };\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (this.model && ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.setWrapperElement(this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.setWrapperElement(undefined);\n    }\n}\nElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ElementComponent, selector: \"sv-ng-element\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <div *ngIf=\\\"!!model\\\" [class]=\\\"model.cssClasses.questionWrapper\\\" [style]=\\\"rootStyle\\\" (focusin)=\\\"model.focusIn()\\\" #container>\\n        <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-element\",\n                    templateUrl: \"./element.component.html\",\n                    styleUrls: [\"./hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\", { static: false, read: ElementRef }]\n            }] } });\n\nclass RowComponent extends BaseAngular {\n    constructor(cdr, vcr, ngZone) {\n        super(cdr, vcr);\n        this.ngZone = ngZone;\n    }\n    getModel() {\n        return this.row;\n    }\n    trackElementBy(index, element) {\n        return element.name + index;\n    }\n    ngAfterViewInit() {\n        var _a;\n        const el = (_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        if (!!el) {\n            this.row.setRootElement(el);\n            if (!this.row.isNeedRender) {\n                this.ngZone.runOutsideAngular(() => {\n                    setTimeout(() => {\n                        this.row.startLazyRendering(el);\n                    }, 10);\n                });\n            }\n        }\n    }\n    onModelChanged() {\n        var _a;\n        super.onModelChanged();\n        if (!this.previousModel) {\n            return;\n        }\n        else {\n            this.previousModel.setRootElement(undefined);\n            if ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement) {\n                this.row.setRootElement(this.container.nativeElement);\n            }\n            this.row.isNeedRender = this.previousModel.isNeedRender;\n            this.stopLazyRendering();\n        }\n    }\n    stopLazyRendering() {\n        this.row.stopLazyRendering();\n        this.row.isNeedRender = !this.row.isLazyRendering();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.row.setRootElement(undefined);\n        this.stopLazyRendering();\n    }\n}\nRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RowComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RowComponent, selector: \"sv-ng-row\", inputs: { row: \"row\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"row.getRowCss()\\\" #container>\\n    <ng-container *ngFor=\\\"let element of row.visibleElements; trackBy: trackElementBy\\\">\\n      <sv-ng-element [model]=\\\"$any(element)\\\" *ngIf=\\\"row.isNeedRender\\\"></sv-ng-element>\\n      <ng-template *ngIf=\\\"!row.isNeedRender && element.skeletonComponentName\\\" [component]=\\\"{ name: element.skeletonComponentName, data: { element: element } }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ElementComponent, selector: \"sv-ng-element\", inputs: [\"model\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-row\",\n                    templateUrl: \"./row.component.html\",\n                    styleUrls: [\"./hide-host.scss\"]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.NgZone }]; }, propDecorators: { row: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\", { read: ElementRef }]\n            }] } });\n\nclass PageComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    onModelChanged() {\n        if (!!this.pageContainerRef && this.pageContainerRef.nativeElement) {\n            this.model.survey.afterRenderPage(this.pageContainerRef.nativeElement);\n        }\n    }\n    ngAfterViewInit() {\n        var _a, _b;\n        (_a = this.model.survey) === null || _a === void 0 ? void 0 : _a.afterRenderPage((_b = this.pageContainerRef) === null || _b === void 0 ? void 0 : _b.nativeElement);\n    }\n}\nPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PageComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PageComponent, selector: \"page, sv-ng-page\", inputs: { model: \"model\", survey: \"survey\" }, viewQueries: [{ propertyName: \"pageContainerRef\", first: true, predicate: [\"pageContainer\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\\\">\\n    <div [class]=\\\"model.cssRoot\\\" #pageContainer>\\n      <sv-ng-element-title [element]=\\\"model\\\"></sv-ng-element-title>\\n      <div *ngIf=\\\"model._showDescription\\\" [class]=\\\"model.cssClasses.page.description\\\">\\n        <sv-ng-string [model]=\\\"model.locDescription\\\"></sv-ng-string>\\n      </div>\\n      <div *ngIf=\\\"model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n      <ng-container *ngFor=\\\"let row of model.visibleRows\\\">\\n        <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n          <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n        </ng-template>\\n      </ng-container>\\n    </div>\\n  </ng-container>  \\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: RowComponent, selector: \"sv-ng-row\", inputs: [\"row\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"page, sv-ng-page\",\n                    templateUrl: \"./page.component.html\",\n                    styleUrls: [\"./hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], survey: [{\n                type: Input\n            }], pageContainerRef: [{\n                type: ViewChild,\n                args: [\"pageContainer\", { static: false, read: ElementRef }]\n            }] } });\n\nclass BrandInfoComponent {\n}\nBrandInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BrandInfoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBrandInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BrandInfoComponent, selector: \"sv-brand-info\", ngImport: i0, template: \"<div class=\\\"sv-brand-info\\\">\\n  <a class=\\\"sv-brand-info__logo\\\" href=\\\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\\\"><img src=\\\"https://surveyjs.io/Content/Images/poweredby.svg\\\"/></a>\\n  <div class=\\\"sv-brand-info__text\\\">Try and see how easy it is to <a href=\\\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\\\">create a survey</a></div>\\n  <div class=\\\"sv-brand-info__terms\\\"><a href=\\\"https://surveyjs.io/TermsOfUse\\\">Terms of Use & Privacy Statement</a></div>\\n</div>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BrandInfoComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-brand-info\",\n                    templateUrl: \"./brand-info.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-brand-info\", BrandInfoComponent);\n\nclass NotifierComponent extends BaseAngular {\n    getStateElement() {\n        return this.notifier;\n    }\n    getModel() {\n        return this.notifier;\n    }\n}\nNotifierComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NotifierComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNotifierComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: NotifierComponent, selector: \"sv-notifier\", inputs: { notifier: \"notifier\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"notifier.isDisplayed\\\">\\n    <div [class]=\\\"notifier.css\\\" [style]=\\\"{ visibility: notifier.active ? 'visible' : 'hidden' }\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\">\\n      <span>{{notifier.message}}</span>\\n      <sv-action-bar [model]=\\\"notifier.actionBar\\\"></sv-action-bar> \\n    </div>\\n  </ng-container>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NotifierComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-notifier\",\n                    templateUrl: \"./notifier.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { notifier: [{\n                type: Input\n            }] } });\n\nclass SafeHtmlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustHtml(url);\n    }\n}\nSafeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeHtmlPipe, name: \"safeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeHtml\" }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass SurveyContentComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.isSurveyUpdated = false;\n    }\n    getModel() {\n        return this.model;\n    }\n    onModelChanged() {\n        if (!!this.previousModel) {\n            this.previousModel.destroyResizeObserver();\n            this.previousModel.renderCallback = undefined;\n        }\n        if (!!this.model) {\n            this.model.renderCallback = () => {\n                this.detectChanges();\n            };\n        }\n        this.isSurveyUpdated = true;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (!!this.model) {\n            this.model.rootElement = undefined;\n            this.model.destroyResizeObserver();\n            this.model.renderCallback = undefined;\n        }\n    }\n    ngAfterViewInit() {\n        this.isSurveyUpdated = true;\n    }\n    ngAfterViewChecked() {\n        if (!!this.model && this.isSurveyUpdated) {\n            this.model.afterRenderSurvey(this.rootEl.nativeElement);\n            this.model.startTimerFromUI();\n        }\n        super.ngAfterViewChecked();\n    }\n}\nSurveyContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyContentComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSurveyContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyContentComponent, selector: \"survey-content\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"rootEl\", first: true, predicate: [\"surveyContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div #surveyContainer *ngIf=\\\"!!model\\\" [class]=\\\"model.getRootCss()\\\" [style]=\\\"model.themeVariables\\\" [lang]=\\\"model.locale || 'en'\\\" [dir]=\\\"model.localeDir\\\">\\n    <sv-svg-bundle *ngIf=\\\"model.needRenderIcons\\\"></sv-svg-bundle>\\n    <div [class]=\\\"model.wrapperFormCss\\\">\\n      <div *ngIf=\\\"!!model.renderBackgroundImage\\\" [class]=\\\"model.css.rootBackgroundImage\\\" [style]=\\\"model.backgroundImageStyle\\\"></div>\\n      <form onsubmit=\\\"return false;\\\">\\n        <div class=\\\"sv_custom_header\\\" [hidden]=\\\"model.hasLogo\\\"></div>\\n        <div [class]=\\\"model.css.container\\\">\\n          <div *ngIf=\\\"model.headerView === 'basic' && model.renderedHasHeader\\\" [class]=\\\"model.css.header\\\" [survey]=\\\"model\\\" sv-ng-survey-header></div>\\n          <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'header', needRenderWrapper: false } }\\\"></ng-template>\\n          <div *ngIf=\\\"model.isShowingPage\\\" [class]=\\\"model.bodyContainerCss\\\">\\n            <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'left' } }\\\"></ng-template>\\n            <div class=\\\"sv-components-column sv-components-column--expandable\\\">\\n              <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'center' } }\\\"></ng-template>\\n              <div [class]=\\\"model.bodyCss\\\" [style.maxWidth]=\\\"model.renderedWidth\\\" [id]=\\\"model.activePage ? model.activePage.id : ''\\\">\\n                <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'contentTop' } }\\\"></ng-template>\\n                <!-- ko if: activePage -->\\n                  <ng-container *ngIf=\\\"model.activePage\\\">\\n                      <sv-ng-page [model]=\\\"model.activePage\\\" [survey]=\\\"model\\\"></sv-ng-page>\\n                  </ng-container>\\n                  <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\\n                  <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\\n                  <!-- /ko -->\\n                  <!-- /ko -->\\n                <!-- /ko -->\\n                <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'contentBottom' } }\\\"></ng-template>\\n              </div>\\n            </div>\\n            <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'right' } }\\\"></ng-template>\\n          </div>\\n          <ng-template [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'footer', needRenderWrapper: false } }\\\"></ng-template>\\n          <div *ngIf=\\\"model.state === 'completed' && model.showCompletedPage\\\" [class]=\\\"model.completedCss\\\"\\n            [innerHtml]=\\\"model.processedCompletedHtml | safeHtml\\\"></div>\\n          <ng-template *ngIf=\\\"model.state === 'completed' && model.showCompletedPage\\\" [component]=\\\"{ name: 'sv-components-container', data: { survey: model, container: 'completePage' } }\\\"></ng-template>\\n          <div *ngIf=\\\"model.state === 'completedbefore'\\\" [class]=\\\"model.completedBeforeCss\\\"\\n            [innerHtml]=\\\"model.processedCompletedBeforeHtml | safeHtml\\\"></div>\\n          <div *ngIf=\\\"model.state === 'loading'\\\" [class]=\\\"model.loadingBodyCss\\\" [innerHtml]=\\\"model.processedLoadingHtml\\\"></div>\\n          <div *ngIf=\\\"model.state === 'empty'\\\" [class]=\\\"model.css.bodyEmpty\\\">{{model.emptySurveyText}}</div>\\n        </div>\\n      </form>\\n      <sv-brand-info *ngIf=\\\"model.showBrandInfo\\\"></sv-brand-info>\\n      <sv-notifier [notifier]=\\\"model.notifier\\\"></sv-notifier>\\n    </div>\\n  </div>\\n</ng-template>\", components: [{ type: SvgBundleComponent, selector: \"sv-svg-bundle\" }, { type: SurveyHeaderComponent, selector: \"'[sv-ng-survey-header]'\", inputs: [\"survey\"] }, { type: PageComponent, selector: \"page, sv-ng-page\", inputs: [\"model\", \"survey\"] }, { type: BrandInfoComponent, selector: \"sv-brand-info\" }, { type: NotifierComponent, selector: \"sv-notifier\", inputs: [\"notifier\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i2$1.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }], pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"survey-content\",\n                    templateUrl: \"./survey-content.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], rootEl: [{\n                type: ViewChild,\n                args: [\"surveyContainer\", { static: false }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"survey\", SurveyContentComponent);\n\nclass SurveyComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.model;\n    }\n    getShouldReattachChangeDetector() {\n        return false;\n    }\n    onModelChanged() {\n        this.changeDetectorRef.detectChanges();\n    }\n}\nSurveyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSurveyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyComponent, selector: \"survey\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\", isInline: true, components: [{ type: ModalComponent, selector: \"sv-ng-modal-container\" }, { type: SurveyContentComponent, selector: \"survey-content\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"survey\",\n                    template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass SvgIconComponent {\n    constructor(viewContaierRef) {\n        this.viewContaierRef = viewContaierRef;\n    }\n    createSvg() {\n        if (!!this.iconName) {\n            Survey.createSvg(this.size, this.width, this.height, this.iconName, this.viewContaierRef.element.nativeElement, this.title);\n        }\n    }\n    get rootClass() {\n        let className = \"sv-svg-icon\";\n        if (!this.css && !!this.partCss) {\n            className += \" \" + this.partCss;\n        }\n        else if (!!this.css) {\n            className = this.css;\n        }\n        return className;\n    }\n    get rootRole() {\n        return \"img\";\n    }\n    ngOnChanges() {\n        const el = this.viewContaierRef.element.nativeElement;\n        el.innerHTML = \"\";\n        el.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\"));\n        this.createSvg();\n    }\n}\nSvgIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SvgIconComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nSvgIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: { size: \"size\", width: \"width\", height: \"height\", iconName: \"iconName\", partCss: \"partCss\", css: \"css\", title: \"title\" }, host: { properties: { \"class\": \"this.rootClass\", \"[attr.role]\": \"this.rootRole\" } }, usesOnChanges: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SvgIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"'[sv-ng-svg-icon]'\",\n                    template: \"\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { size: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], iconName: [{\n                type: Input\n            }], partCss: [{\n                type: Input\n            }], css: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], rootClass: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }], rootRole: [{\n                type: HostBinding,\n                args: [\"[attr.role]\"]\n            }] } });\n\nclass PopupSurveyComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.popup;\n    }\n    getShouldReattachChangeDetector() {\n        return false;\n    }\n    getHeaderCss() {\n        let headerCss = this.popup.cssHeaderRoot;\n        if (this.popup.isCollapsed) {\n            headerCss += \" \" + this.popup.cssRootCollapsedMod;\n        }\n        return headerCss;\n    }\n    ngOnChanges(changes) {\n        var _a, _b;\n        if (((_a = changes[\"model\"]) === null || _a === void 0 ? void 0 : _a.currentValue) !== ((_b = changes[\"model\"]) === null || _b === void 0 ? void 0 : _b.previousValue)) {\n            this.popup = new PopupSurveyModel(null, this.model);\n        }\n        if (this.isExpanded !== undefined) {\n            this.popup.isExpanded = this.isExpanded;\n        }\n        if (this.allowClose !== undefined) {\n            this.popup.allowClose = this.allowClose;\n        }\n        if (this.allowFullScreen !== undefined) {\n            this.popup.allowFullScreen = this.allowFullScreen;\n        }\n        if (this.closeOnCompleteTimeout !== undefined) {\n            this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;\n        }\n        this.popup.isShowing = true;\n        this.changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.popup.dispose();\n    }\n}\nPopupSurveyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupSurveyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPopupSurveyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PopupSurveyComponent, selector: \"popup-survey\", inputs: { model: \"model\", isExpanded: \"isExpanded\", allowClose: \"allowClose\", closeOnCompleteTimeout: \"closeOnCompleteTimeout\", allowFullScreen: \"allowFullScreen\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div *ngIf=\\\"!!popup && popup.isShowing\\\" [class]=\\\"popup.cssRoot\\\" [style.width]=\\\"popup.renderedWidth\\\" [style.maxWidth]=\\\"popup.renderedWidth\\\" (scroll)=\\\"popup.onScroll()\\\">\\n  <div [class]=\\\"popup.cssRootContent\\\">\\n    <div [class]=\\\"getHeaderCss()\\\">\\n      <div *ngIf=\\\"popup.isCollapsed && !!popup.locTitle\\\" [class]=\\\"popup.cssHeaderTitleCollapsed\\\">\\n        {{popup.locTitle.renderedHtml}}\\n      </div>\\n      <div [class]=\\\"popup.cssHeaderButtonsContainer\\\">\\n        <div *ngIf=\\\"popup.allowFullScreen\\\" [class]=\\\"popup.cssHeaderFullScreenButton\\\" (click)=\\\"popup.toggleFullScreen()\\\">\\n          <svg *ngIf=\\\"popup.isFullScreen\\\" [iconName]=\\\"'icon-back-to-panel_16x16'\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n          <svg *ngIf=\\\"!popup.isFullScreen\\\" [iconName]=\\\"'icon-full-screen_16x16'\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n        </div>\\n\\n        <div [class]=\\\"popup.cssHeaderCollapseButton\\\" (click)=\\\"popup.changeExpandCollapse()\\\">\\n            <svg *ngIf=\\\"popup.isExpanded\\\" [iconName]=\\\"'icon-minimize_16x16'\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n            <svg *ngIf=\\\"popup.isCollapsed\\\" [iconName]=\\\"'icon-restore_16x16'\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n        </div>\\n\\n        <div *ngIf=\\\"popup.allowClose\\\" [class]=\\\"popup.cssHeaderCloseButton\\\" (click)=\\\"popup.hide()\\\">\\n          <svg [iconName]=\\\"'icon-close_16x16'\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n        </div>\\n      </div>\\n  </div>\\n  <div [class]=\\\"popup.cssBody\\\">\\n    <survey [model]=\\\"popup.survey\\\"></survey>\\n  </div>\\n  </div>\\n</div>\", styles: [\"\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyComponent, selector: \"survey\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupSurveyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"popup-survey\",\n                    templateUrl: \"./popup.survey.component.html\",\n                    styleUrls: [\"./popup.survey.component.scss\"]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], isExpanded: [{\n                type: Input\n            }], allowClose: [{\n                type: Input\n            }], closeOnCompleteTimeout: [{\n                type: Input\n            }], allowFullScreen: [{\n                type: Input\n            }] } });\n\nclass QuestionAngular extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (!!this.model) {\n            this.model.afterRenderQuestionElement((_a = this.elementContentRef) === null || _a === void 0 ? void 0 : _a.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        if (!!this.model) {\n            this.model.beforeDestroyQuestionElement((_a = this.elementContentRef) === null || _a === void 0 ? void 0 : _a.nativeElement);\n        }\n        super.ngOnDestroy();\n    }\n}\nQuestionAngular.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionAngular, deps: null, target: i0.ɵɵFactoryTarget.Component });\nQuestionAngular.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: QuestionAngular, selector: \"ng-component\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"elementContentRef\", first: true, predicate: [\"contentElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionAngular, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], elementContentRef: [{\n                type: ViewChild,\n                args: [\"contentElement\"]\n            }] } });\nfunction getComponentName(question) {\n    if (question.customWidget)\n        return \"survey-customwidget\";\n    if (question.isDefaultRendering()) {\n        return question.getTemplate() + \"-question\";\n    }\n    return question.getComponentName();\n}\n\nclass ElementHeaderComponent {\n    constructor() {\n    }\n    get rootClass() {\n        return this.element.cssHeader;\n    }\n    get width() {\n        return this.element.titleWidth;\n    }\n    click(e) {\n        if (this.element.clickTitleFunction !== undefined) {\n            this.element.clickTitleFunction(e);\n        }\n    }\n}\nElementHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nElementHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: { element: \"element\" }, host: { listeners: { \"click\": \"click($event)\" }, properties: { \"class\": \"this.rootClass\", \"style.width\": \"this.width\" } }, ngImport: i0, template: \"<sv-ng-element-title [element]=\\\"element\\\"></sv-ng-element-title>\\n<div *ngIf=\\\"element.hasDescriptionUnderTitle\\\" [class]=\\\"element.cssDescription\\\" [model]=\\\"element.locDescription\\\" [attr.id]=\\\"element.ariaDescriptionId\\\" [style.display]=\\\"element.hasDescription ? '': 'none' \\\" sv-ng-string></div>\\n<ng-container *ngIf=\\\"element.hasAdditionalTitleToolbar\\\">\\n<sv-ng-action-bar [model]=\\\"element.additionalTitleToolbar\\\"></sv-ng-action-bar>\\n</ng-container>\", components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ElementHeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"'[sv-ng-element-header]'\",\n                    templateUrl: \"./element-header.component.html\"\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { element: [{\n                type: Input\n            }], rootClass: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }], width: [{\n                type: HostBinding,\n                args: [\"style.width\"]\n            }], click: [{\n                type: HostListener,\n                args: [\"click\", [\"$event\"]]\n            }] } });\n\nclass SurveyCommentComponent {\n    constructor() {\n    }\n    get comment() {\n        if (!this.question.comment)\n            return \"\";\n        return this.question.comment;\n    }\n}\nSurveyCommentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyCommentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyCommentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: { question: \"question\" }, ngImport: i0, template: \"<textarea *ngIf=\\\"!question.isReadOnlyRenderDiv()\\\" [id]=\\\"question.commentId\\\" [attr.maxlength]=\\\"question.getOthersMaxLength()\\\"  [attr.aria-required]=\\\"question.ariaRequired || question.a11y_input_ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel || question.a11y_input_ariaLabel\\\" [attr.placeholder]=\\\"question.renderedCommentPlaceholder\\\" \\n  [value]=\\\"comment\\\"\\n  [style.resize]=\\\"question.resizeStyle\\\"\\n  [attr.rows]=\\\"question.commentAreaRows\\\"\\n  [disabled]=\\\"question.isInputReadOnly\\\"\\n  (change)=\\\"question.onCommentChange($event)\\\"\\n  (input)=\\\"question.onCommentInput($event)\\\"\\n  [class]=\\\"question.cssClasses.other\\\">\\n</textarea>\\n<div *ngIf=\\\"question.isReadOnlyRenderDiv()\\\">{{ question.comment }}</div>\\n\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyCommentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-comment, '[sv-ng-comment]'\",\n                    templateUrl: \"./comment.component.html\",\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }] } });\n\nclass QuestionComponent extends EmbeddedViewContentComponent {\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        var _a, _b;\n        if (!!((_a = this.rootEl) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.afterRender((_b = this.rootEl) === null || _b === void 0 ? void 0 : _b.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (!!this.model) {\n            this.model.destroyResizeObserver();\n        }\n    }\n    getComponentName() { return getComponentName(this.model); }\n    getQuestionContentWrapperComponentName() {\n        return this.model.survey.getQuestionContentWrapperComponentName(this.model);\n    }\n    getQuestionContentWrapperComponentData() {\n        return {\n            componentData: {\n                model: this.model,\n                data: this.model.survey.getElementWrapperComponentData(this.model)\n            }\n        };\n    }\n}\nQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: QuestionComponent, selector: \"sv-ng-question\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"rootEl\", first: true, predicate: [\"elementContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"!!model\\\" #elementContainer [class]=\\\"model.getRootCss()\\\" [style]=\\\"model.getRootStyle()\\\" [id]=\\\"model.id\\\" [attr.data-name]=\\\"model.name\\\" [attr.role]=\\\"model.ariaRole\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-labelledby]=\\\"model.ariaLabelledBy\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.aria-expanded]=\\\"model.ariaExpanded\\\">\\n    <div *ngIf=\\\"model.showErrorsAboveQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnLeftTop\\\" sv-ng-element-header></div>\\n    <ng-template [component]=\\\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData() }\\\">\\n      <div [class]=\\\"model.cssContent\\\" role=\\\"presentation\\\" [visible]=\\\"model.renderedIsExpanded\\\">\\n        <div *ngIf=\\\"model.showErrorOnTop && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n        <ng-template [component]=\\\"{ name: getComponentName(), data: { model: model }, default: 'skeleton-question' }\\\"></ng-template>\\n        <div *ngIf=\\\"model.hasComment\\\" [class]=\\\"model.getCommentAreaCss(false)\\\">\\n          <div [model]=\\\"model.locCommentText\\\" sv-ng-string></div>\\n          <sv-ng-comment [question]=\\\"model\\\"></sv-ng-comment>\\n        </div>\\n        <div *ngIf=\\\"model.showErrorOnBottom && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n        <div *ngIf=\\\"model.hasDescriptionUnderInput\\\" [class]=\\\"model.cssDescription\\\" [attr.id]=\\\"model.ariaDescriptionId\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n      </div>\\n    </ng-template>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnBottom\\\" sv-ng-element-header></div>\\n    <div *ngIf=\\\"model.showErrorsBelowQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n  </div>\\n</ng-template>\", components: [{ type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-question\",\n                    templateUrl: \"./question.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], rootEl: [{\n                type: ViewChild,\n                args: [\"elementContainer\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"question\", QuestionComponent);\n\nclass StringViewerComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.className = \"\";\n    }\n    ngDoCheck() {\n        if (this.model !== this.previousModel) {\n            this.className = this.model.allowLineBreaks ? \"sv-string-viewer sv-string-viewer--multiline\" : \"sv-string-viewer\";\n            if (!!this.previousModel) {\n                this.clearOnChanged(this.previousModel);\n            }\n            if (!!this.model) {\n                this.model.onChanged = () => { this.changeDetectorRef.detectChanges(); };\n            }\n            this.previousModel = this.model;\n        }\n    }\n    clearOnChanged(model) {\n        model.onChanged = () => { };\n    }\n    ngOnDestroy() {\n        !!this.model && this.clearOnChanged(this.model);\n    }\n}\nStringViewerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StringViewerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nStringViewerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: StringViewerComponent, selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<span *ngIf=\\\"!model.hasHtml\\\" [class]=\\\"className\\\">{{model.renderedHtml}}</span>\\n<span *ngIf=\\\"model.hasHtml\\\" [class]=\\\"className\\\" [innerHtml]=\\\"model.renderedHtml | safeHtml\\\"></span>\", styles: [\"\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StringViewerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\",\n                    templateUrl: \"./string-viewer.component.html\",\n                    styleUrls: [\"./string-viewer.component.scss\"]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(LocalizableString.defaultRenderer, StringViewerComponent);\n\nclass PopupPointerComponent extends BaseAngular {\n    get popupModel() {\n        return this.model;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nPopupPointerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupPointerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPopupPointerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PopupPointerComponent, selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"sv-popup__pointer\\\" [style]=\\\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\\\"></span>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupPointerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\",\n                    templateUrl: \"./popup-pointer.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"popup-pointer\", PopupPointerComponent);\n\nclass PopupComponent extends BaseAngular {\n    constructor(viewContainerRef, changeDetectorRef) {\n        super(changeDetectorRef, viewContainerRef);\n    }\n    getModel() {\n        return this.popupModel;\n    }\n    onModelChanged() {\n        var _a;\n        if (this.model) {\n            this.model.resetComponentElement();\n            this.model.dispose();\n        }\n        this.model = createPopupViewModel(this.popupModel, (_a = this.viewContainerRef) === null || _a === void 0 ? void 0 : _a.element.nativeElement);\n        this.setContainerElement();\n    }\n    setContainerElement() {\n        var _a, _b;\n        if (!!((_a = this.containerRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            const container = this.containerRef.nativeElement;\n            this.model.setComponentElement(container, this.getTarget ? this.getTarget(container.parentElement) : (_b = container === null || container === void 0 ? void 0 : container.parentElement) === null || _b === void 0 ? void 0 : _b.parentElement, this.getArea ? this.getArea(container.parentElement) : undefined);\n        }\n    }\n    ngAfterViewInit() {\n        this.setContainerElement();\n    }\n    ngOnInit() {\n        this.onModelChanged();\n    }\n    ngOnDestroy() {\n        this.model.resetComponentElement();\n        this.model.dispose();\n        super.ngOnDestroy();\n    }\n}\nPopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: { popupModel: \"popupModel\", getTarget: \"getTarget\", getArea: \"getArea\" }, viewQueries: [{ propertyName: \"containerRef\", first: true, predicate: [\"containerRef\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>\", isInline: true, components: [{ type: PopupBaseContainerComponent, selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PopupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-popup, '[sv-ng-popup]'\",\n                    template: \"<div #containerRef><sv-ng-popup-container [model]='model' ></sv-ng-popup-container></div>\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { popupModel: [{\n                type: Input\n            }], getTarget: [{\n                type: Input\n            }], getArea: [{\n                type: Input\n            }], containerRef: [{\n                type: ViewChild,\n                args: [\"containerRef\"]\n            }] } });\n\nclass QuestionSkeletonComponent {\n}\nQuestionSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionSkeletonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nQuestionSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: QuestionSkeletonComponent, selector: \"question-skeleton\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div class=\\\"sv-skeleton--not-implemented\\\">\\n  <div>{{ model.getType() + \\\" question type renderer is not implemented yet.\\\" }}</div>\\n  <div>{{ model.value }}</div>\\n</div>\\n\", styles: [\".sv-skeleton--not-implemented{width:100%;min-width:300px;min-height:40px;border:1px solid red;text-align:center}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionSkeletonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"question-skeleton\",\n                    templateUrl: \"./skeleton.component.html\",\n                    styleUrls: [\"./skeleton.component.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"skeleton-question\", QuestionSkeletonComponent);\n\nclass DropdownComponent extends BaseAngular {\n    get dropdownModel() {\n        var _a;\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.dropdownListModel;\n    }\n    getModel() {\n        return this.model.dropdownListModel;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    click(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClick(event);\n    }\n    chevronPointerDown(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.chevronPointerDown(event);\n    }\n    clear(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClear(event);\n    }\n    keyhandler(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);\n    }\n    blur(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);\n        this.updateInputDomElement();\n    }\n    focus(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onFocus(event);\n    }\n    inputChange(event) {\n        this.detectChanges();\n    }\n    updateInputDomElement() {\n        var _a;\n        if (!!((_a = this.inputElementRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            const control = this.inputElementRef.nativeElement;\n            const newValue = this.model.inputStringRendered;\n            if (!Helpers.isTwoValueEquals(newValue, control.value, false, true, false)) {\n                control.value = this.model.inputStringRendered || \"\";\n            }\n        }\n    }\n}\nDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"inputElementRef\", first: true, predicate: [\"inputElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\" (click)=\\\"click($event)\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.noTabIndex ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isDisabledAttr ? true : null\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\" [attr.role]=\\\"model.ariaRole\\\"\\n        [attr.aria-controls]=\\\"dropdownModel.listElementId\\\"\\n        [attr.aria-expanded]=\\\"model.ariaExpanded\\\"\\n        [attr.aria-activedescendant]=\\\"dropdownModel.ariaActivedescendant\\\">\\n        <div *ngIf=\\\"dropdownModel.showHintPrefix\\\" [class]=\\\"model.cssClasses.hintPrefix\\\">\\n            <span>{{ dropdownModel.hintStringPrefix }}</span>\\n        </div>\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <div *ngIf=\\\"dropdownModel.showHintString\\\" [class]=\\\"model.cssClasses.hintSuffix\\\">\\n                <span style=\\\"visibility: hidden\\\">{{ dropdownModel.inputStringRendered }}</span>\\n                <span>{{ dropdownModel.hintStringSuffix }}</span>\\n            </div>\\n            <ng-container *ngIf=\\\"dropdownModel.showInputFieldComponent\\\">\\n                <ng-template [component]=\\\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\\\"></ng-template>\\n            </ng-container>\\n            <sv-ng-string *ngIf=\\\"model.showSelectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n            <input #inputElement type=\\\"text\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"dropdownModel.inputStringRendered\\\" [class]=\\\"model.cssClasses.filterStringInput\\\"\\n            [attr.role]=\\\"dropdownModel.filterStringEnabled ? model.ariaRole : null\\\"\\n            [attr.id]=\\\"model.getInputId()\\\"\\n            [attr.inputmode]=\\\"dropdownModel.inputMode\\\"\\n            [attr.tabindex]=\\\"dropdownModel.noTabIndex ? null : -1\\\"\\n            [attr.disabled]=\\\"model.isDisabledAttr ? true : null\\\"\\n            [attr.aria-controls]=\\\"dropdownModel.listElementId\\\"\\n            [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n            [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n            [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n            [attr.aria-expanded]=\\\"model.ariaExpanded\\\"\\n            [attr.aria-activedescendant]=\\\"dropdownModel.ariaActivedescendant\\\"\\n            [attr.placeholder]=\\\"dropdownModel.placeholderRendered\\\" \\n            [attr.readonly]=\\\"dropdownModel.filterReadOnly ? true : null\\\" \\n            (change)=\\\"inputChange($event)\\\" (blur)=\\\"blur($event)\\\" (focus)=\\\"focus($event)\\\"/>\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\" aria-hidden=\\\"true\\\"\\n            [class]=\\\"model.cssClasses.cleanButton\\\" (click)=\\\"clear($event)\\\" [visible]=\\\"model.showClearButton\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"dropdownModel.popupModel\\\"></sv-ng-popup>\\n    <div *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\" \\n    [attr.tabindex]=\\\"model.isDisabledAttr ? null : 0\\\"\\n    [attr.disabled]=\\\"model.isDisabledAttr ? true : null\\\"\\n    [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n    [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\">\\n        <sv-ng-string *ngIf=\\\"model.selectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n        <div>{{ model.readOnlyText }}</div>\\n    </div>\\n    <div *ngIf=\\\"model.cssClasses.chevronButtonIconId\\\" [class]=\\\"model.cssClasses.chevronButton\\\" (pointerdown)=\\\"chevronPointerDown($event)\\\" aria-hidden=\\\"true\\\">\\n        <svg [iconName]=\\\"model.cssClasses.chevronButtonIconId\\\" [partCss]=\\\"model.cssClasses.chevronButtonSvg\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n    </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\", \"getTarget\", \"getArea\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\",\n                    templateUrl: \"./dropdown.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], inputElementRef: [{\n                type: ViewChild,\n                args: [\"inputElement\"]\n            }] } });\n\nclass TagboxFilterComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nTagboxFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TagboxFilterComponent, selector: \"sv-tagbox-filter\", inputs: { model: \"model\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"question.cssClasses.hint\\\">\\n    <div *ngIf=\\\"model.showHintPrefix\\\" [class]=\\\"question.cssClasses.hintPrefix\\\">\\n        <span>{{ model.hintStringPrefix }}</span>\\n    </div>\\n    <div [class]=\\\"question.cssClasses.hintSuffixWrapper\\\">\\n        <div *ngIf=\\\"model.showHintString\\\" [class]=\\\"question.cssClasses.hintSuffix\\\">\\n            <span style=\\\"visibility: hidden\\\">{{ model.inputStringRendered }}</span>\\n            <span>{{ model.hintStringSuffix }}</span>\\n        </div>\\n    <input\\n      type=\\\"text\\\"\\n      autocomplete=\\\"off\\\"\\n      [(ngModel)]=\\\"model.inputStringRendered\\\"\\n      [attr.id]=\\\"question.getInputId()\\\"\\n      [class]=\\\"question.cssClasses.filterStringInput\\\"\\n      [attr.inputmode]=\\\"model.inputMode\\\"\\n      [attr.role]=\\\"model.filterStringEnabled ? question.ariaRole : null\\\"\\n      [attr.readonly]=\\\"model.filterReadOnly ? true : null\\\"\\n      [attr.disabled]=\\\"question.isDisabledAttr ? true : null\\\"\\n      [attr.size]=\\\"!model.inputStringRendered ? 1 : null\\\"\\n      [attr.aria-label]=\\\"question.a11y_input_ariaLabel\\\"\\n      [attr.aria-labelledby]=\\\"question.a11y_input_ariaLabelledBy\\\"\\n      [attr.aria-describedby]=\\\"question.a11y_input_ariaDescribedBy\\\"\\n      [attr.aria-controls]=\\\"model.listElementId\\\"\\n      [attr.aria-expanded]=\\\"question.ariaExpanded\\\"\\n      [attr.aria-activedescendant]=\\\"model.ariaActivedescendant\\\"\\n      [attr.placeholder]=\\\"model.filterStringPlaceholder\\\"\\n      (keydown)=\\\"model.inputKeyHandler($event)\\\"\\n      (blur)=\\\"model.onBlur($event)\\\"\\n      (focus)=\\\"model.onFocus($event)\\\"\\n    />\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-tagbox-filter\",\n                    templateUrl: \"./tagbox-filter.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-filter\", TagboxFilterComponent);\n\nclass TagboxItemComponent extends BaseAngular {\n    removeItem(event) {\n        this.question.dropdownListModel.deselectItem(this.item.value);\n        event.stopPropagation();\n    }\n    getModel() {\n        return this.item;\n    }\n}\nTagboxItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TagboxItemComponent, selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\", inputs: { item: \"item\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"sv-tagbox__item\\\">\\n  <div class=\\\"sv-tagbox__item-text\\\" [model]=\\\"item.locText\\\" sv-ng-string></div>  \\n  <div [class]=\\\"question.cssClasses.cleanItemButton\\\" (click)=\\\"removeItem($event)\\\">\\n    <svg [iconName]=\\\"question.cssClasses.cleanItemButtonIconId\\\" [partCss]=\\\"question.cssClasses.cleanItemButtonSvg\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n  </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\",\n                    templateUrl: \"./tagbox-item.component.html\",\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-item\", TagboxItemComponent);\n\nclass TagboxComponent {\n    get dropdownModel() {\n        var _a;\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.dropdownListModel;\n    }\n    getModel() {\n        return this.model;\n    }\n    ngOnInit() {\n        if (!this.model.dropdownListModel) {\n            this.model.dropdownListModel = new DropdownMultiSelectListModel(this.model);\n        }\n    }\n    click(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClick(event);\n    }\n    chevronPointerDown(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.chevronPointerDown(event);\n    }\n    clear(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClear(event);\n    }\n    keyhandler(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);\n    }\n    blur(event) {\n        var _a;\n        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);\n    }\n}\nTagboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TagboxComponent, selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\" (click)=\\\"click($event)\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.noTabIndex ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isDisabledAttr ? true : null\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\" [attr.role]=\\\"model.ariaRole\\\"\\n        [attr.aria-controls]=\\\"dropdownModel.listElementId\\\"\\n        [attr.aria-expanded]=\\\"model.ariaExpanded\\\"\\n        [attr.aria-activedescendant]=\\\"dropdownModel.ariaActivedescendant\\\">\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <ng-container *ngIf=\\\"!model.isEmpty()\\\">\\n                <sv-ng-tagbox-item *ngFor=\\\"let item of model.selectedChoices\\\" [item]=\\\"item\\\" [question]=\\\"model\\\">\\n                </sv-ng-tagbox-item>\\n            </ng-container>\\n            <ng-template [component]=\\\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\\\"></ng-template>\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\" [class]=\\\"model.cssClasses.cleanButton\\\"\\n            (click)=\\\"clear($event)\\\" [visible]=\\\"model.showClearButton\\\" aria-hidden=\\\"true\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    <div *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\"\\n    [attr.tabindex]=\\\"model.isDisabledAttr ? null : 0\\\"\\n    [attr.disabled]=\\\"model.isDisabledAttr ? true : null\\\"\\n    [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n    [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\">\\n        <sv-ng-string *ngIf=\\\"model.locReadOnlyText\\\" [model]=\\\"model.locReadOnlyText\\\"></sv-ng-string>\\n    </div>\\n    <div *ngIf=\\\"model.cssClasses.chevronButtonIconId\\\" [class]=\\\"model.cssClasses.chevronButton\\\" (pointerdown)=\\\"chevronPointerDown($event)\\\" aria-hidden=\\\"true\\\">\\n        <svg [iconName]=\\\"model.cssClasses.chevronButtonIconId\\\" [partCss]=\\\"model.cssClasses.chevronButtonSvg\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n    </div>\\n</div>\", components: [{ type: TagboxItemComponent, selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\", inputs: [\"item\", \"question\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\", \"getTarget\", \"getArea\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\",\n                    templateUrl: \"./tagbox.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass DropdownOptionItemComponent extends BaseAngular {\n    onModelChanged() {\n        if (!this.item.locText)\n            return;\n        this.item.locText.onChanged = () => {\n            this.detectChanges();\n        };\n    }\n    getModel() {\n        return this.item;\n    }\n}\nDropdownOptionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownOptionItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownOptionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DropdownOptionItemComponent, selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\", inputs: { item: \"item\" }, usesInheritance: true, ngImport: i0, template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>', isInline: true, directives: [{ type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownOptionItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\",\n                    template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>',\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-dropdown-option-item\", DropdownOptionItemComponent);\n\nclass SurveyCommentOtherComponent {\n    constructor() {\n    }\n    get otherValue() {\n        const val = this.question.otherValue;\n        return !!val ? val : \"\";\n    }\n    onOtherValueChange(event) {\n        this.question.onOtherValueChange(event);\n    }\n    onOtherValueInput(event) {\n        this.question.onOtherValueInput(event);\n    }\n    get otherId() {\n        return this.question.otherId;\n    }\n    get otherPlaceholder() {\n        return this.question.otherPlaceholder;\n    }\n}\nSurveyCommentOtherComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyCommentOtherComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyCommentOtherComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: { question: \"question\" }, ngImport: i0, template: \"<textarea *ngIf=\\\"!question.isReadOnlyRenderDiv()\\\" [id]=\\\"otherId\\\" [attr.maxlength]=\\\"question.getOthersMaxLength()\\\"  [attr.aria-required]=\\\"question.ariaRequired || question.a11y_input_ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel || question.a11y_input_ariaLabel\\\" [attr.placeholder]=\\\"otherPlaceholder\\\" \\n  [value]=\\\"otherValue\\\"\\n  [style.resize]=\\\"question.resizeStyle\\\"\\n  [attr.rows]=\\\"question.commentAreaRows\\\"\\n  [disabled]=\\\"question.isInputReadOnly\\\"\\n  (change)=\\\"onOtherValueChange($event)\\\"\\n  (input)=\\\"onOtherValueInput($event)\\\"\\n  [class]=\\\"question.cssClasses.other\\\">\\n</textarea>\\n<div *ngIf=\\\"question.isReadOnlyRenderDiv()\\\">{{ otherValue }}</div>\\n\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyCommentOtherComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\",\n                    templateUrl: \"./comment-other.component.html\",\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }] } });\n\nclass DropdownSelectComponent {\n    get editableValue() {\n        return this.model.renderedValue || \"\";\n    }\n    set editableValue(newValue) {\n        if (newValue === \"\") {\n            this.model.renderedValue = undefined;\n        }\n        else {\n            this.model.renderedValue = newValue;\n        }\n    }\n    click(event) {\n        this.model.onClick(event);\n    }\n    keyup(event) {\n        this.model.onKeyUp(event);\n    }\n}\nDropdownSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDropdownSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DropdownSelectComponent, selector: \"sv-ng-dropdown-select-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\">\\n  <div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <select *ngIf=\\\"!model.isReadOnly\\\" [attr.id]=\\\"model.inputId\\\" [(ngModel)]=\\\"editableValue\\\"\\n      [disabled]=\\\"model.isInputReadOnly\\\" (click)=\\\"click($event)\\\" (keyup)=\\\"keyup($event)\\\"\\n      [class]=\\\"model.getControlClass()\\\" [attr.autocomplete]=\\\"model.autocomplete\\\" [required]=\\\"model.isRequired\\\"\\n      [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n      [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\">\\n      <option *ngIf=\\\"model.allowClear\\\" value=\\\"\\\">{{ model.placeholder }}</option>\\n      <ng-template *ngFor=\\\"let item of model.visibleChoices\\\" [component]=\\\"{ name: 'sv-dropdown-option-item', data: { item } }\\\"></ng-template>\\n    </select>\\n    <div *ngIf=\\\"model.isReadOnly\\\" disabled [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">{{ model.readOnlyText }}</div>\\n    <div *ngIf=\\\"model.cssClasses.chevronButtonIconId\\\" [class]=\\\"model.cssClasses.chevronButton\\\">\\n      <svg [iconName]=\\\"model.cssClasses.chevronButtonIconId\\\" [partCss]=\\\"model.cssClasses.chevronButtonSvg\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\"\\n    [style.display]=\\\"model.isFlowLayout ? 'inline': '' \\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2$1.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownSelectComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dropdown-select-question\",\n                    templateUrl: \"./dropdown-select.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"dropdown-select-question\", DropdownSelectComponent);\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"select\", \"dropdown-select-question\");\n\n//temp: disables angular sanitizer, which breaks a links\nclass SafeUrlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustUrl(url);\n    }\n}\nSafeUrlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeUrlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeUrlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeUrlPipe, name: \"safeUrl\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeUrlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeUrl\" }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\nclass SafeResourceUrlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\nSafeResourceUrlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeResourceUrlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeResourceUrlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeResourceUrlPipe, name: \"safeResourceUrl\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SafeResourceUrlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeResourceUrl\" }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass LogoImageComponent extends EmbeddedViewContentComponent {\n    get survey() {\n        return this.data;\n    }\n}\nLogoImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LogoImageComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLogoImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: LogoImageComponent, selector: \"sv-logo-image\", inputs: { data: \"data\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"survey.logoClassNames\\\">\\n    <img\\n    [class]=\\\"survey.css.logoImage\\\"\\n    [attr.src]=\\\"survey.locLogo.renderedHtml | safeUrl\\\"\\n    [style.width]=\\\"survey.renderedStyleLogoWidth\\\"\\n    [style.height]=\\\"survey.renderedStyleLogoHeight\\\"\\n    [attr.width]=\\\"survey.renderedLogoWidth\\\"\\n    [attr.height]=\\\"survey.renderedLogoHeight\\\"\\n    [attr.alt]=\\\"survey.locTitle.renderedHtml\\\"\\n    [style.objectFit]=\\\"survey.logoFit\\\"\\n    />\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], pipes: { \"safeUrl\": SafeUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LogoImageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-logo-image\",\n                    templateUrl: \"./logo-image.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-logo-image\", LogoImageComponent);\n\nclass CharacterCounterComponent extends BaseAngular {\n    getModel() {\n        return this.counter;\n    }\n}\nCharacterCounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CharacterCounterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCharacterCounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CharacterCounterComponent, selector: \"sv-ng-character-counter\", inputs: { counter: \"counter\", remainingCharacterCounter: \"remainingCharacterCounter\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"remainingCharacterCounter\\\">{{ counter.remainingCharacterCounter }}</div>\\n</ng-template>\", styles: [\":host { display: none; }\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CharacterCounterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-character-counter\",\n                    templateUrl: \"./character-counter.component.html\",\n                    styles: [\":host { display: none; }\"],\n                }]\n        }], propDecorators: { counter: [{\n                type: Input\n            }], remainingCharacterCounter: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"character-counter\", CharacterCounterComponent);\n\nclass TextQuestionComponent extends QuestionAngular {\n    get value() {\n        var _a;\n        return (_a = this.model.inputValue) !== null && _a !== void 0 ? _a : \"\";\n    }\n    blur(event) {\n        this.model.onBlur(event);\n        this.updateInputDomElement();\n    }\n    updateInputDomElement() {\n        var _a;\n        if (!!((_a = this.inputElementRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            const control = this.inputElementRef.nativeElement;\n            if (!Helpers.isTwoValueEquals(this.value, control.value, false, true, false)) {\n                control.value = this.value;\n            }\n        }\n    }\n}\nTextQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TextQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTextQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TextQuestionComponent, selector: \"sv-ng-text-question\", viewQueries: [{ propertyName: \"inputElementRef\", first: true, predicate: [\"inputElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"  <ng-container [ngTemplateOutlet]=\\\"input\\\" *ngIf=\\\"!model.dataListId && !model.isReadOnlyRenderDiv()\\\"></ng-container>\\n  <div *ngIf=\\\"model.dataListId && !model.isReadOnlyRenderDiv()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"input\\\"></ng-container>\\n    <datalist [id]=\\\"model.dataListId\\\">\\n      <option *ngFor=\\\"let dataListItem of model.dataList\\\" [value]=\\\"dataListItem\\\"></option>\\n    </datalist>\\n  </div>\\n  <div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ value }}</div>\\n  <ng-template #input>\\n    <input #inputElement [style]=\\\"model.inputStyle\\\" [class]=\\\"model.getControlClass()\\\" [attr.list]=\\\"model.dataListId\\\"\\n    (change)=\\\"model.onChange($event)\\\" [value]=\\\"value\\\" [disabled]=\\\"model.isDisabledAttr\\\" [type]=\\\"model.inputType\\\" [id]=\\\"model.inputId\\\" [attr.placeholder]=\\\"model.renderedPlaceholder || ''\\\"\\n    (keyup)=\\\"model.onKeyUp($event)\\\" (keydown)=\\\"model.onKeyDown($event)\\\" (blur)=\\\"blur($event)\\\" (focus)=\\\"model.onFocus($event)\\\" (compositionupdate)=\\\"model.onCompositionUpdate($event)\\\" \\n    [attr.size] = \\\"model.renderedInputSize\\\" [attr.maxlength]= \\\"model.getMaxLength()\\\" [attr.min]=\\\"model.renderedMin\\\" [readonly]=\\\"model.isReadOnlyAttr\\\"\\n    [attr.max]=\\\"model.renderedMax\\\" [attr.step]=\\\"model.renderedStep\\\" [attr.max]=\\\"model.renderedMax\\\" [attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\" [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\" [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"[attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\" [attr.autocomplete]=\\\"model.autocomplete\\\" #contentElement/>\\n    <sv-ng-character-counter *ngIf=\\\"model.getMaxLength()\\\" \\n    [counter]=\\\"model.characterCounter\\\"\\n    [remainingCharacterCounter]=\\\"model.cssClasses.remainingCharacterCounter\\\">\\n  </sv-ng-character-counter>\\n  </ng-template>\", styles: [\"\"], components: [{ type: CharacterCounterComponent, selector: \"sv-ng-character-counter\", inputs: [\"counter\", \"remainingCharacterCounter\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TextQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-text-question\",\n                    templateUrl: \"./text.component.html\",\n                    styleUrls: [\"./text.component.scss\"]\n                }]\n        }], propDecorators: { inputElementRef: [{\n                type: ViewChild,\n                args: [\"inputElement\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"text-question\", TextQuestionComponent);\n\nclass HtmlQuestionComponent extends QuestionAngular {\n    onModelChanged() {\n        super.onModelChanged();\n        this.model.locHtml.onChanged = () => {\n            this.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        this.model.locHtml.onChanged = () => { };\n        super.ngOnDestroy();\n    }\n}\nHtmlQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HtmlQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHtmlQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: HtmlQuestionComponent, selector: \"sv-ng-html-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" [innerHTML]=\\\"model.locHtml.renderedHtml | safeHtml\\\" #contentElement></div>\", pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HtmlQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-html-question\",\n                    templateUrl: \"./html.component.html\",\n                    styleUrls: []\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"html-question\", HtmlQuestionComponent);\n\nclass SelectBaseComponent extends QuestionAngular {\n    constructor() {\n        super(...arguments);\n        this.inputType = \"checkbox\";\n        this.showLegend = true;\n    }\n    getDefaultComponentName() {\n        return \"sv-ng-selectbase-item\";\n    }\n    trackItemBy(_, item) {\n        return item.value;\n    }\n    trackColumnBy(index) {\n        return index;\n    }\n    getItemValueComponentName(item) {\n        return this.model.getItemValueWrapperComponentName(item) || this.getDefaultComponentName();\n    }\n    getItemValueComponentData(item) {\n        const itemComponentProperty = this.model.getPropertyByName(\"itemComponent\");\n        const isDefaultItemComponent = itemComponentProperty.isDefaultValue(this.model.itemComponent);\n        const itemComponent = isDefaultItemComponent ? this.getDefaultComponentName() : this.model.itemComponent;\n        return {\n            componentName: itemComponent,\n            componentData: {\n                question: this.model,\n                model: item,\n                inputType: this.inputType,\n                data: this.model.getItemValueWrapperComponentData(item)\n            }\n        };\n    }\n}\nSelectBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectBaseComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSelectBaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SelectBaseComponent, selector: \"['sv-ng-selectbase']\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement \\n  [attr.role]=\\\"model.a11y_input_ariaRole\\\"\\n  [attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n  [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n  [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n  [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n  [attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\"\\n  [attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\"\\n>\\n  <legend *ngIf=\\\"showLegend\\\" class=\\\"sv-hidden\\\">{{model.locTitle.renderedHtml}}</legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue(true)\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectBaseComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"['sv-ng-selectbase']\",\n                    templateUrl: \"./selectbase.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"selectbase\", SelectBaseComponent);\n\nclass RadiogroupComponent extends SelectBaseComponent {\n    ngOnInit() {\n        this.inputType = \"radio\";\n        this.showLegend = false;\n        super.ngOnInit();\n    }\n}\nRadiogroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RadiogroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRadiogroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RadiogroupComponent, selector: \"sv-ng-radiogroup-question\", usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement \\n  [attr.role]=\\\"model.a11y_input_ariaRole\\\"\\n  [attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n  [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n  [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n  [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n  [attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\"\\n  [attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\"\\n>\\n  <legend *ngIf=\\\"showLegend\\\" class=\\\"sv-hidden\\\">{{model.locTitle.renderedHtml}}</legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue(true)\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RadiogroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-radiogroup-question\",\n                    templateUrl: \"./selectbase.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"radiogroup-question\", RadiogroupComponent);\n\nclass RadiogroupItemComponent {\n    constructor() {\n    }\n}\nRadiogroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RadiogroupItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nRadiogroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RadiogroupItemComponent, selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\", inputs: { question: \"question\", model: \"model\" }, ngImport: i0, template: \"<input type=\\\"radio\\\" [name]=\\\"question.questionName\\\" [attr.name]=\\\"question.questionName\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-errormessage]=\\\"question.ariaErrormessage\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [readonly]=\\\"question.isReadOnlyAttr\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"\\n/>\\n<ng-content></ng-content>\", styles: [\"\"], directives: [{ type: i2$1.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RadiogroupItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\",\n                    templateUrl: \"./radiogroup-item.component.html\",\n                    styleUrls: [\"./radiogroup-item.component.scss\"]\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass CheckboxComponent extends SelectBaseComponent {\n}\nCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CheckboxComponent, selector: \"sv-ng-checkbox-question\", usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement \\n  [attr.role]=\\\"model.a11y_input_ariaRole\\\"\\n  [attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n  [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n  [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n  [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n  [attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\"\\n  [attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\"\\n>\\n  <legend *ngIf=\\\"showLegend\\\" class=\\\"sv-hidden\\\">{{model.locTitle.renderedHtml}}</legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue(true)\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-checkbox-question\",\n                    templateUrl: \"./selectbase.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"checkbox-question\", CheckboxComponent);\n\nclass CheckboxItemComponent {\n    constructor() {\n    }\n    onChange(event) {\n        this.question[\"clickItemHandler\"](this.model, event.target.checked);\n    }\n    onSelectAllChange(event) {\n        this.question.toggleSelectAll();\n    }\n}\nCheckboxItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CheckboxItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckboxItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CheckboxItemComponent, selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\", inputs: { question: \"question\", model: \"model\" }, ngImport: i0, template: \"<input type=\\\"checkbox\\\" [name]=\\\"question.name+model.id\\\" [id]=\\\"question.getItemId(model)\\\" [class]=\\\"question.cssClasses.itemControl\\\" [required]=\\\"question.hasRequiredError()\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [readonly]=\\\"question.isReadOnlyAttr\\\" [checked]=\\\"question.isItemSelected(model)\\\" [value]=\\\"model.value\\\" (change)=\\\"onChange($event)\\\"/>\\n<ng-content></ng-content>\", styles: [\"\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CheckboxItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\",\n                    templateUrl: \"./checkbox-item.component.html\",\n                    styleUrls: [\"./checkbox-item.component.scss\"]\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass DropdownQuestionComponent extends QuestionAngular {\n}\nDropdownQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: DropdownQuestionComponent, selector: \"sv-ng-dropdown-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n</div>\", components: [{ type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: [\"model\"] }, { type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DropdownQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dropdown-question\",\n                    templateUrl: \"./dropdown.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"dropdown-question\", DropdownQuestionComponent);\n\nclass TagboxQuestionComponent extends QuestionAngular {\n}\nTagboxQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TagboxQuestionComponent, selector: \"sv-ng-tagbox-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-tagbox [model]=\\\"model\\\"></sv-ng-tagbox>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" [class]=\\\"model.getCommentAreaCss(true)\\\" [question]=\\\"model\\\" sv-ng-comment-other></div>\\n</div>\", components: [{ type: TagboxComponent, selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\", inputs: [\"model\"] }, { type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TagboxQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-tagbox-question\",\n                    templateUrl: \"./tagbox.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"tagbox-question\", TagboxQuestionComponent);\n\nclass RatingQuestionComponent extends QuestionAngular {\n    trackByFn(index) {\n        return index;\n    }\n    onClick(event) {\n        event.stopPropagation();\n        this.model.setValueFromClick(event.target.value);\n    }\n}\nRatingQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingQuestionComponent, selector: \"sv-ng-rating-question\", usesInheritance: true, ngImport: i0, template: \"  <div [class]=\\\"model.ratingRootCss\\\" #contentElement>\\n      <fieldset role=\\\"radiogroup\\\">\\n          <legend role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n          <span *ngIf=\\\"model.hasMinLabel\\\" [class]=\\\"model.cssClasses.minText\\\" [model]=\\\"model.locMinRateDescription\\\" sv-ng-string>\\n          </span>\\n          <ng-template *ngFor=\\\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\\\" [component]=\\\"{ name: model.itemComponent, data: {model: model, item: item, index: index }}\\\"></ng-template>\\n          <span *ngIf=\\\"model.hasMaxLabel\\\" [class]=\\\"model.cssClasses.maxText\\\" [model]=\\\"model.locMaxRateDescription\\\" sv-ng-string></span>\\n      </fieldset>\\n  </div>\\n\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-question\",\n                    templateUrl: \"./rating.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"rating-question\", RatingQuestionComponent);\n\nclass BooleanQuestionComponent extends QuestionAngular {\n    onChange(event) {\n        this.model.booleanValue = event.target.value;\n    }\n}\nBooleanQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBooleanQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BooleanQuestionComponent, selector: \"sv-ng-boolean-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" (keydown)=\\\"model.onKeyDownCore($event)\\\" #contentElement>\\n    <label [class]=\\\"model.getItemCss()\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.inputId\\\" \\n        [attr.role]=\\\"model.a11y_input_ariaRole\\\"\\n        [attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n        [attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n        [attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\"\\n        [attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\"\\n        [class]=\\\"model.cssClasses.control\\\" [disabled]=\\\"model.isDisabledAttr\\\" [readonly]=\\\"model.isReadOnlyAttr\\\"  [indeterminate]=\\\"model.isIndeterminate\\\" [value]=\\\"model.booleanValue\\\" [(ngModel)]=\\\"model.booleanValue\\\" />\\n      <div [class]=\\\"model.cssClasses.sliderGhost\\\" (click)=\\\"model.onLabelClick($event, model.swapOrder)\\\">\\n        <span [class]=\\\"model.getLabelCss(model.swapOrder)\\\" [model]=\\\"model.locLabelLeft\\\" sv-ng-string></span>\\n      </div>\\n      <div [class]=\\\"model.cssClasses.switch\\\" (click)=\\\"model.onSwitchClickModel($event)\\\">\\n        <span [class]=\\\"model.cssClasses.slider\\\">\\n            <span *ngIf=\\\"model.cssClasses.sliderText && model.isDeterminated\\\" [class]=\\\"model.cssClasses.sliderText\\\" [model]=\\\"model.getCheckedLabel()\\\" sv-ng-string></span>\\n        </span>\\n      </div>\\n      <div [class]=\\\"model.cssClasses.sliderGhost\\\" (click)=\\\"model.onLabelClick($event, !model.swapOrder)\\\">\\n        <span [class]=\\\"model.getLabelCss(!model.swapOrder)\\\" [model]=\\\"model.locLabelRight\\\"  sv-ng-string></span>\\n      </div>\\n    </label>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-boolean-question\",\n                    templateUrl: \"./boolean.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"boolean-question\", BooleanQuestionComponent);\n\nclass ImagePickerItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    onChange(event) {\n        if (this.question.isReadOnlyAttr)\n            return;\n        if (this.question.multiSelect) {\n            if (event.target.checked) {\n                this.question.value = this.question.value.concat(event.target.value);\n            }\n            else {\n                var currValue = this.question.value;\n                currValue.splice(this.question.value.indexOf(event.target.value), 1);\n                this.question.value = currValue;\n            }\n        }\n        else {\n            this.question.value = event.target.value;\n        }\n    }\n    ngAfterViewInit() {\n        this.model.locImageLink.onChanged = () => {\n            this.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.locImageLink.onChanged = () => { };\n    }\n}\nImagePickerItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImagePickerItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImagePickerItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ImagePickerItemComponent, selector: \"sv-ng-imagepicker-item\", inputs: { question: \"question\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"question.getItemClass(model)\\\">\\n    <label [class]=\\\"question.cssClasses.label\\\">\\n        <input [type]=\\\"question.inputType\\\" [attr.name]=\\\"question.questionName\\\" [attr.value]=\\\"model.value\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-required]=\\\"question.ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel\\\" [attr.aria-invalid]=\\\"question.ariaInvalid\\\" [attr.aria-errormessage]=\\\"question.ariaErrormessage\\\"\\n        (change)=\\\"onChange($event)\\\" [checked]=\\\"question.isItemSelected(model)\\\" [disabled]=\\\"!question.getItemEnabled(model)\\\" [readonly]=\\\"question.isReadOnlyAttr\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n        />\\n        <div [class]=\\\"question.cssClasses.itemDecorator\\\">\\n            <div [class]=\\\"question.cssClasses.imageContainer\\\">\\n              <span *ngIf=\\\"question.cssClasses.checkedItemDecorator\\\" [class]=\\\"question.cssClasses.checkedItemDecorator\\\">\\n                <svg *ngIf=\\\"question.cssClasses.checkedItemSvgIconId\\\" [class]=\\\"question.cssClasses.checkedItemSvgIcon\\\" [iconName]=\\\"question.cssClasses.checkedItemSvgIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n              </span>\\n              <img *ngIf=\\\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'image'\\\" [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [attr.alt]=\\\"model.locText.renderedHtml\\\"  [style.objectFit]=\\\"question.imageFit\\\" (load)=\\\"question.onContentLoaded(model, $event)\\\" (error)=\\\"model.onErrorHandler()\\\"/>\\n              <video *ngIf=\\\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'video'\\\" controls [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [style.objectFit]=\\\"question.imageFit\\\" (loadedmetadata)=\\\"question.onContentLoaded(model, $event)\\\" (error)=\\\"model.onErrorHandler()\\\"></video>\\n              <div *ngIf=\\\"!model.locImageLink.renderedHtml || model.contentNotLoaded\\\" [class]=\\\"question.cssClasses.itemNoImage\\\" [style.width]=\\\"question.renderedImageWidth + 'px'\\\" [style.height]=\\\"question.renderedImageHeight + 'px'\\\" [style.objectFit]=\\\"question.imageFit\\\">\\n                <svg *ngIf=\\\"question.cssClasses.itemNoImageSvgIconId\\\" [class]=\\\"question.cssClasses.itemNoImageSvgIcon\\\" [iconName]=\\\"question.cssClasses.itemNoImageSvgIconId\\\" [size]=\\\"48\\\" sv-ng-svg-icon></svg>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"question.showLabel\\\" [class]=\\\"question.cssClasses.itemText\\\" [model]=\\\"model.locText\\\" sv-ng-string></span>\\n        </div>\\n    </label>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImagePickerItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-imagepicker-item\",\n                    templateUrl: \"./imagepicker-item.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-imagepicker-item\", ImagePickerItemComponent);\n\nclass ImagePickerQuestionComponent extends QuestionAngular {\n    getItemValueComponentName(item) {\n        return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-imagepicker-item\";\n    }\n    getItemValueComponentData(item) {\n        return {\n            componentName: \"sv-ng-imagepicker-item\",\n            componentData: {\n                question: this.model,\n                model: item,\n                data: this.model.getItemValueWrapperComponentData(item)\n            }\n        };\n    }\n}\nImagePickerQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImagePickerQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImagePickerQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ImagePickerQuestionComponent, selector: \"sv-ng-imagepicker-question\", usesInheritance: true, ngImport: i0, template: \"  <fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement>\\n      <legend class=\\\"sv-hidden\\\">{{model.locTitle.renderedHtml}}</legend>\\n      <ng-container *ngIf=\\\"!model.hasColumns\\\">\\n        <ng-container *ngFor=\\\"let item of model.visibleChoices\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"model.hasColumns\\\">\\n        <div *ngFor=\\\"let column of model.columns\\\" [class]=\\\"model.getColumnClass()\\\" role=\\\"presentation\\\">\\n          <ng-container *ngFor=\\\"let item of column\\\">\\n            <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n          </ng-container>\\n        </div>\\n      </ng-container>\\n  </fieldset>\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImagePickerQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-imagepicker-question\",\n                    templateUrl: \"./imagepicker.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"imagepicker-question\", ImagePickerQuestionComponent);\n\nclass ButtonGroupItemComponent extends BaseAngular {\n    ngOnChanges() {\n        this.model = new ButtonGroupItemModel(this.question, this.item, this.index);\n    }\n    getModel() {\n        return this.item;\n    }\n}\nButtonGroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ButtonGroupItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nButtonGroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ButtonGroupItemComponent, selector: \"sv-button-group-item\", inputs: { item: \"item\", question: \"question\", index: \"index\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-template #template>\\n  <label role=\\\"radio\\\" [class]=\\\"model.css.label\\\" [attr.title]=\\\"model.caption.renderedHtml\\\">\\n    <input type=\\\"radio\\\"\\n      [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.id\\\" [attr.aria-required]=\\\"model.isRequired\\\" [attr.aria-label]=\\\"model.caption.renderedHtml\\\" role=\\\"radio\\\" [attr.aria-invalid]=\\\"model.hasErrors\\\" [attr.aria-errormessage]=\\\"model.describedBy\\\" [disabled]=\\\"model.readOnly\\\" [class]=\\\"model.css.control\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"/>\\n    <div data-bind=\\\"css: model.css.decorator\\\">\\n      <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [class]=\\\"model.css.icon\\\" sv-ng-svg-icon></svg>\\n      <span [class]=\\\"model.css.caption\\\" *ngIf=\\\"model.showCaption\\\" [attr.title]=\\\"model.caption.renderedHtml\\\" sv-ng-string [model]=\\\"model.caption\\\">\\n      </span>\\n    </div>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2$1.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ButtonGroupItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-button-group-item\",\n                    templateUrl: \"./button-group-item.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\n\nclass ButtonGroupQuestionComponent extends QuestionAngular {\n}\nButtonGroupQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ButtonGroupQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nButtonGroupQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ButtonGroupQuestionComponent, selector: \"sv-ng-buttongroup-question\", usesInheritance: true, ngImport: i0, template: \"<div role=\\\"group\\\" [class]=\\\"model.cssClasses.root\\\">\\n  <sv-button-group-item *ngFor=\\\"let item of model.visibleChoices; index as index\\\" [question]=\\\"model\\\" [item]=\\\"item\\\" [index]=\\\"index\\\" ></sv-button-group-item>\\n</div>\\n\", components: [{ type: ButtonGroupItemComponent, selector: \"sv-button-group-item\", inputs: [\"item\", \"question\", \"index\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ButtonGroupQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-buttongroup-question\",\n                    templateUrl: \"./button-group.component.html\"\n                }]\n        }] });\n\nclass ComponentsContainerComponent extends EmbeddedViewContentComponent {\n    get components() {\n        return this.survey.getContainerContent(this.container);\n    }\n    get isNeedRenderWrapper() {\n        return this.needRenderWrapper === false ? false : true;\n    }\n}\nComponentsContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ComponentsContainerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nComponentsContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ComponentsContainerComponent, selector: \"sv-components-container, [sv-components-container], sv-ng-components-container\", inputs: { survey: \"survey\", container: \"container\", needRenderWrapper: \"needRenderWrapper\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"isNeedRenderWrapper\\\">\\n    <div *ngIf=\\\"components.length > 0\\\" [class]=\\\"'sv-components-column' + ' sv-components-container-' + container\\\">\\n      <ng-container *ngFor=\\\"let component of components\\\">\\n        <ng-template [component]=\\\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\\\"></ng-template>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!isNeedRenderWrapper && components.length > 0\\\">\\n    <ng-container *ngFor=\\\"let component of components\\\">\\n      <ng-template [component]=\\\"{ name: component.component, data: { survey: survey, container: container, model: component.data } }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ComponentsContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-components-container, [sv-components-container], sv-ng-components-container\",\n                    templateUrl: \"./components-container.component.html\",\n                    styleUrls: [\"./hide-host.scss\"]\n                }]\n        }], propDecorators: { survey: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], needRenderWrapper: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-components-container\", ComponentsContainerComponent);\n\nclass Key2ClickDirective {\n    constructor(el) {\n        this.el = el;\n        this.isSubscribed = false;\n        this.options = Object.assign({}, Key2ClickDirective.defaultOptions);\n        this.onkeyup = (evt) => {\n            evt.preventDefault();\n            evt.stopPropagation();\n            doKey2ClickUp(evt, this.options);\n            return false;\n        };\n        this.subscribeEventListeners();\n    }\n    onkeydown(evt) {\n        doKey2ClickDown(evt, this.options);\n    }\n    blur(evt) {\n        doKey2ClickBlur(evt);\n    }\n    get element() {\n        return this.el.nativeElement;\n    }\n    subscribeEventListeners() {\n        if (this.isSubscribed)\n            return;\n        this.element.tabIndex = 0;\n        this.element.addEventListener(\"keyup\", this.onkeyup.bind(this));\n        this.element.addEventListener(\"keydown\", this.onkeydown.bind(this));\n        this.element.addEventListener(\"blur\", this.blur);\n        this.isSubscribed = true;\n    }\n    unsubscribeEventListeners() {\n        if (!this.isSubscribed)\n            return;\n        this.element.tabIndex = -1;\n        this.element.removeEventListener(\"keyup\", this.onkeyup.bind(this));\n        this.element.removeEventListener(\"keydown\", this.onkeydown.bind(this));\n        this.element.removeEventListener(\"blur\", this.blur);\n        this.isSubscribed = false;\n    }\n    ngOnChanges(changes) {\n        const curValue = changes[\"key2click\"].currentValue;\n        if (curValue.disableTabStop) {\n            this.unsubscribeEventListeners();\n        }\n        else {\n            this.subscribeEventListeners();\n        }\n        this.options = Object.assign({}, Key2ClickDirective.defaultOptions, curValue);\n    }\n    ngOnDestroy() {\n        this.unsubscribeEventListeners();\n    }\n}\nKey2ClickDirective.defaultOptions = { processEsc: true, disableTabStop: false };\nKey2ClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Key2ClickDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nKey2ClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: Key2ClickDirective, selector: \"[key2click]\", inputs: { key2click: \"key2click\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Key2ClickDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[key2click]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { key2click: [{\n                type: Input\n            }] } });\n\nclass ActionBarItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nActionBarItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ActionBarItemComponent, selector: \"sv-action-bar-item\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <button type=\\\"button\\\" (click)=\\\"model.doAction($event)\\\" (mousedown)=\\\"model.doMouseDown()\\\" (focus)=\\\"model.doFocus($event)\\\" [key2click]=\\\"{ processEsc: false, disableTabStop: model.disableTabStop }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [attr.title]=\\\"model.tooltip || model.title\\\" [attr.aria-checked]=\\\"model.ariaChecked\\\" [attr.aria-expanded]=\\\"model.ariaExpanded\\\" [attr.role]=\\\"model.ariaRole\\\" [disabled]=\\\"model.disabled\\\">\\n    <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n    <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n  </button>\\n<ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-action-bar-item\",\n                    templateUrl: \"./action-bar-item.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item\", ActionBarItemComponent);\n\nclass ActionBarItemDropdownComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.getTarget = getActionDropdownButtonTarget;\n    }\n    getModel() {\n        return this.model;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.viewModel = new ActionDropdownViewModel(this.model);\n    }\n    ngOnDestroy() {\n        this.viewModel.dispose();\n        super.ngOnDestroy();\n    }\n}\nActionBarItemDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarItemDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarItemDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ActionBarItemDropdownComponent, selector: \"sv-action-bar-item-dropdown\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <button type=\\\"button\\\" (click)=\\\"model.action(model, model.getIsTrusted($event))\\\" [key2click]=\\\"{ processEsc: false, disableTabStop: model.disableTabStop }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [title]=\\\"model.tooltip || model.title\\\" [disabled]=\\\"model.disabled\\\" [attr.role]=\\\"model.ariaRole\\\">\\n        <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n        <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n    </button>\\n    <sv-ng-popup [popupModel]=\\\"model.popupModel\\\" [getTarget]=\\\"getTarget\\\"></sv-ng-popup>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\", \"getTarget\", \"getArea\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ActionBarItemDropdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-action-bar-item-dropdown\",\n                    templateUrl: \"./action-bar-item-dropdown.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item-dropdown\", ActionBarItemDropdownComponent);\n\nclass SelectBaseItemComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.showLabel = true;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nSelectBaseItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectBaseItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSelectBaseItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SelectBaseItemComponent, selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\", inputs: { question: \"question\", model: \"model\", inputType: \"inputType\", showLabel: \"showLabel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div role=\\\"presentation\\\" [class]=\\\"question.getItemClass(model)\\\">\\n    <ng-container [ngSwitch]=\\\"inputType\\\">\\n      <label *ngSwitchCase=\\\"'checkbox'\\\" [class]=\\\"question.getLabelClass(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-checkbox-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n      <label *ngSwitchCase=\\\"'radio'\\\" (mousedown)=\\\"question.onMouseDown()\\\" [class]=\\\"question.getLabelClass(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-radiogroup-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n    </ng-container>\\n    <ng-template #itemDecorator>\\n      <span *ngIf=\\\"question.cssClasses.materialDecorator\\\" [class]=\\\"question.cssClasses.materialDecorator\\\">\\n        <svg *ngIf=\\\"question.itemSvgIcon\\\" [class]=\\\"question.cssClasses.itemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"question.itemSvgIcon\\\"></use>\\n        </svg>\\n      </span>\\n      <span [class]=\\\"question.getControlLabelClass(model)\\\" *ngIf=\\\"!model.hideCaption\\\">\\n        <sv-ng-string [model]=\\\"model.locText\\\"></sv-ng-string>\\n      </span> \\n    </ng-template>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: CheckboxItemComponent, selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\", inputs: [\"question\", \"model\"] }, { type: RadiogroupItemComponent, selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\", inputs: [\"question\", \"model\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectBaseItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\",\n                    templateUrl: \"./selectbase-item.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], inputType: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-selectbase-item\", SelectBaseItemComponent);\n\nclass SkeletonComponent extends EmbeddedViewContentComponent {\n}\nSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SkeletonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SkeletonComponent, selector: \"sv-skeleton\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div class=\\\"sv-skeleton-element\\\" [id]=\\\"element.id\\\"></div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SkeletonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-skeleton\",\n                    templateUrl: \"./skeleton.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-skeleton\", SkeletonComponent);\n\nclass TimerPanelComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.circleLengthValue = 440;\n    }\n    getStateElement() {\n        return this.model;\n    }\n    getModel() {\n        return this.model;\n    }\n    get circleLength() {\n        return this.circleLengthValue;\n    }\n    get progress() {\n        return -this.model.progress * this.circleLength;\n    }\n}\nTimerPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimerPanelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTimerPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TimerPanelComponent, selector: \"sv-timerpanel\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<div *ngIf=\\\"model.isRunning && model.showTimerAsClock\\\" [class]=\\\"model.rootCss\\\">\\n    <svg *ngIf=\\\"model.showProgress\\\" [class]=\\\"model.getProgressCss()\\\" [style.stroke-dasharray]=\\\"circleLength\\\" [style.stroke-dashoffset]=\\\"progress\\\" [size]=\\\"'auto'\\\" [iconName]=\\\"'icon-timercircle'\\\" sv-ng-svg-icon></svg>\\n    <div [class]=\\\"model.textContainerCss\\\">\\n        <span [class]=\\\"model.majorTextCss\\\">{{ model.clockMajorText }}</span>\\n        <span *ngIf=\\\"model.clockMinorText\\\" [class]=\\\"model.minorTextCss\\\">{{ model.clockMinorText }}</span>\\n    </div>\\n</div>\\n<div *ngIf=\\\"model.isRunning && !model.showTimerAsClock\\\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TimerPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-timerpanel\",\n                    templateUrl: \"./timer-panel.component.html\",\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-timerpanel\", TimerPanelComponent);\n\nclass ListItemComponent extends BaseAngular {\n    get elementId() {\n        var _a;\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.elementId;\n    }\n    get ariaSelected() {\n        return this.listModel.isItemSelected(this.model) || \"\";\n    }\n    get class() {\n        return this.listModel.getItemClass(this.model);\n    }\n    get paddingLeft() {\n        return this.listModel.getItemIndent(this.model);\n    }\n    click(event) {\n        this.listModel.onItemClick(this.model);\n        event.stopPropagation();\n    }\n    pointerdown(event) {\n        this.listModel.onPointerDown(event, this.model);\n    }\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        this.listModel.onLastItemRended(this.model);\n    }\n}\nListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ListItemComponent, selector: \"sv-ng-list-item, '[sv-ng-list-item]'\", inputs: { element: \"element\", model: \"model\", listModel: \"listModel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <li role=\\\"option\\\" [key2click]=\\\"{ processEsc: false, disableTabStop: model.disableTabStop }\\\" [visible]=\\\"listModel.isItemVisible(model)\\\" [class]=\\\"class\\\" [attr.id]=\\\"elementId\\\" [attr.aria-selected]=\\\"ariaSelected ? 'true' : 'false'\\\" (click)=\\\"click($event)\\\" (pointerdown)=\\\"pointerdown($event)\\\">\\n    <ng-container *ngIf=\\\"model.needSeparator\\\">\\n    <div [class]=\\\"listModel.cssClasses.itemSeparator\\\"></div>\\n    </ng-container>\\n    <div [class]=\\\"listModel.cssClasses.itemBody\\\" [style.paddingInlineStart]=\\\"paddingLeft\\\" [attr.title]=\\\"model.locTitle.calculatedText\\\"\\n    (mouseover)=\\\"listModel.onItemHover(model)\\\"\\n    (mouseleave)=\\\"listModel.onItemLeave(model)\\\">\\n    <ng-template [component]=\\\"{ name: model.component || 'sv-list-item-content', data: { model: model, listModel: listModel } }\\\"></ng-template>\\n    </div>\\n  </li>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-list-item, '[sv-ng-list-item]'\",\n                    templateUrl: \"./list-item.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], listModel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item\", ListItemComponent);\n\nclass ListComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.trackItemBy = (_, item) => {\n            return item.id;\n        };\n    }\n    getModel() {\n        return this.model;\n    }\n    onGoToItems(event) {\n        this.model.goToItems(event);\n    }\n    onMouseDown(event) {\n        event.preventDefault();\n    }\n    onKeyDown(event) {\n        this.model.onKeyDown(event);\n    }\n    onMouseMove(event) {\n        this.model.onMouseMove(event);\n    }\n    getPropertiesToUpdateSync() {\n        return [\"renderElements\"];\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (!!((_a = this.listContainerElement) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.initListContainerHtmlElement(this.listContainerElement.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        this.model.initListContainerHtmlElement(undefined);\n        super.ngOnDestroy();\n    }\n}\nListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ListComponent, selector: \"sv-ng-list, '[sv-ng-list]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"listContainerElement\", first: true, predicate: [\"listContainerElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <div [class]=\\\"model.cssClasses.root\\\" #listContainerElement>\\n        <div *ngIf=\\\"model.showFilter\\\" [class]=\\\"model.cssClasses.filter\\\">\\n            <div [class]=\\\"model.cssClasses.filterIcon\\\">\\n                <svg [iconName]=\\\"'icon-search'\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n            </div>\\n            <input type=\\\"text\\\" [class]=\\\"model.cssClasses.filterInput\\\" [(ngModel)]=\\\"model.filterString\\\"\\n                [attr.aria-label]=\\\"model.filterStringPlaceholder || ''\\\"\\n                [attr.placeholder]=\\\"model.filterStringPlaceholder || ''\\\" \\n                (keyup)=\\\"onGoToItems($event)\\\" />\\n                <button *ngIf=\\\"model.showSearchClearButton && !!model.filterString\\\" (click)=\\\"model.onClickSearchClearButton($event)\\\" [class]=\\\"model.cssClasses.searchClearButtonIcon\\\">\\n                    <svg [iconName]=\\\"'icon-searchclear'\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n                </button>\\n        </div>\\n        <div [class]=\\\"model.cssClasses.emptyContainer\\\" [visible]=\\\"model.isEmpty\\\">\\n            <div [class]=\\\"model.cssClasses.emptyText\\\" [attr.aria-label]=\\\"model.emptyMessage || ''\\\">{{ model.emptyMessage }}</div>\\n        </div>\\n        <ul *ngIf=\\\"model.renderElements\\\" [class]=\\\"model.getListClass()\\\" role=\\\"listbox\\\" [attr.id]=\\\"model.elementId\\\" [visible]=\\\"!model.isEmpty\\\" (mousedown)=\\\"onMouseDown($event)\\\" (keydown)=\\\"onKeyDown($event)\\\" (mousemove)=\\\"onMouseMove($event)\\\">\\n            <sv-ng-list-item *ngFor=\\\"let item of model.renderedActions; trackBy: trackItemBy\\\" [listModel]=\\\"model\\\" [model]=\\\"item\\\"></sv-ng-list-item>\\n            <!--ko foreach: model.renderedActions -->\\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\\n            <!-- /ko -->\\n            <!-- /ko -->\\n        </ul>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: ListItemComponent, selector: \"sv-ng-list-item, '[sv-ng-list-item]'\", inputs: [\"element\", \"model\", \"listModel\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-list, '[sv-ng-list]'\",\n                    templateUrl: \"./list.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], listContainerElement: [{\n                type: ViewChild,\n                args: [\"listContainerElement\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list\", ListComponent);\n\nclass ListItemContentComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nListItemContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemContentComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListItemContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ListItemContentComponent, selector: \"sv-ng-list-item-content, '[sv-ng-list-item-content]'\", inputs: { element: \"element\", model: \"model\", listModel: \"listModel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n<svg *ngIf=\\\"model.iconName\\\" [class]=\\\"listModel.cssClasses.itemIcon\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\"\\n  sv-ng-svg-icon></svg>\\n<sv-ng-string [model]=\\\"model.locTitle\\\"></sv-ng-string>\\n<svg *ngIf=\\\"model.markerIconName\\\" [class]=\\\"model.cssClasses.itemMarkerIcon\\\" [iconName]=\\\"model.markerIconName\\\" [size]=\\\"model.markerIconSize\\\"\\n  sv-ng-svg-icon></svg>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-list-item-content, '[sv-ng-list-item-content]'\",\n                    templateUrl: \"./list-item-content.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], listModel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-content\", ListItemContentComponent);\n\nclass ListItemGroupComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nListItemGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemGroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListItemGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ListItemGroupComponent, selector: \"sv-ng-list-item-group, '[sv-ng-list-item-group]'\", inputs: { element: \"element\", model: \"model\", listModel: \"listModel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <sv-ng-list-item-content [model]=\\\"model\\\" [listModel]=\\\"listModel\\\"></sv-ng-list-item-content>\\n  <sv-ng-popup [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ListItemContentComponent, selector: \"sv-ng-list-item-content, '[sv-ng-list-item-content]'\", inputs: [\"element\", \"model\", \"listModel\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\", \"getTarget\", \"getArea\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ListItemGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-list-item-group, '[sv-ng-list-item-group]'\",\n                    templateUrl: \"./list-item-group.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], listModel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item-group\", ListItemGroupComponent);\n\nclass RatingItemComponent extends BaseAngular {\n    onClick(event) {\n        this.model.setValueFromClick(event.target.value);\n        event.stopPropagation();\n    }\n    getModel() {\n        return this.item;\n    }\n}\nRatingItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingItemComponent, selector: \"sv-ng-rating-item\", inputs: { element: \"element\", model: \"model\", item: \"item\", index: \"index\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <label [class]=\\\"model.getItemClassByText(item.itemValue, item.text)\\\" (mousedown)=\\\"model.onMouseDown()\\\">\\n    <input type=\\\"radio\\\"\\n      class=\\\"sv-visuallyhidden\\\"\\n      [attr.name]=\\\"model.questionName\\\" [attr.id]=\\\"model.getInputId(index)\\\" [value]=\\\"item.value\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\"\\n      [disabled]=\\\"model.isDisabledAttr\\\" [readonly]=\\\"model.isReadOnlyAttr\\\" [checked]=\\\"model.value === item.value\\\" (click)=\\\"onClick($event)\\\"\\n      />\\n      <span [class]=\\\"model.cssClasses.itemText\\\" [attr.data-text]=\\\"item.text\\\" [model]=\\\"item.locText\\\" sv-ng-string></span>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-item\",\n                    templateUrl: \"./rating-item.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item\", RatingItemComponent);\n\nclass RatingItemStarComponent extends BaseAngular {\n    onClick(event) {\n        this.model.setValueFromClick(event.target.value);\n        event.stopPropagation();\n    }\n    getModel() {\n        return this.item;\n    }\n}\nRatingItemStarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemStarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingItemStarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingItemStarComponent, selector: \"sv-ng-rating-item-star\", inputs: { element: \"element\", model: \"model\", item: \"item\", index: \"index\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <label [class]=\\\"model.getItemClass(item.itemValue, item.highlight)\\\" (mouseover)=\\\"model.onItemMouseIn(item)\\\" (mouseout)=\\\"model.onItemMouseOut(item)\\\" (mousedown)=\\\"model.onMouseDown()\\\">\\n    <input type=\\\"radio\\\"\\n      class=\\\"sv-visuallyhidden\\\"\\n      [attr.name]=\\\"model.questionName\\\" [attr.id]=\\\"model.getInputId(index)\\\" [value]=\\\"item.value\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\"\\n      [disabled]=\\\"model.isDisabledAttr\\\" [readonly]=\\\"model.isReadOnlyAttr\\\" [checked]=\\\"model.value === item.value\\\" (click)=\\\"onClick($event)\\\"\\n      />\\n      <svg [iconName]=\\\"model.itemStarIcon\\\" [size]=\\\"'auto'\\\" [title]=\\\"item.text\\\" [class]=\\\"'sv-star'\\\" sv-ng-svg-icon></svg>\\n      <svg [iconName]=\\\"model.itemStarIconAlt\\\" [size]=\\\"'auto'\\\" [title]=\\\"item.text\\\" [class]=\\\"'sv-star-2'\\\" sv-ng-svg-icon></svg>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemStarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-item-star\",\n                    templateUrl: \"./rating-item-star.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-star\", RatingItemStarComponent);\n\nclass RatingItemSmileyComponent extends BaseAngular {\n    onClick(event) {\n        this.model.setValueFromClick(event.target.value);\n        event.stopPropagation();\n    }\n    getModel() {\n        return this.item;\n    }\n}\nRatingItemSmileyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemSmileyComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingItemSmileyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingItemSmileyComponent, selector: \"sv-ng-rating-item-smiley\", inputs: { element: \"element\", model: \"model\", item: \"item\", index: \"index\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <label [style]=\\\"model.getItemStyle(item.itemValue, item.highlight)\\\" [class]=\\\"model.getItemClass(item.itemValue, item.highlight)\\\" (mouseover)=\\\"model.onItemMouseIn(item)\\\" (mouseout)=\\\"model.onItemMouseOut(item)\\\" (mousedown)=\\\"model.onMouseDown()\\\">\\n    <input type=\\\"radio\\\"\\n      class=\\\"sv-visuallyhidden\\\"\\n      [attr.name]=\\\"model.questionName\\\" [attr.id]=\\\"model.getInputId(index)\\\" [value]=\\\"item.value\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\"\\n      [disabled]=\\\"model.isDisabledAttr\\\" [readonly]=\\\"model.isReadOnlyAttr\\\" [checked]=\\\"model.value === item.value\\\" (click)=\\\"onClick($event)\\\"\\n      />\\n      <svg [iconName]=\\\"model.getItemSmileyIconName(item.itemValue)\\\" [size]=\\\"'auto'\\\" [title]=\\\"item.text\\\" sv-ng-svg-icon></svg>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingItemSmileyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-item-smiley\",\n                    templateUrl: \"./rating-item-smiley.component.html\",\n                    styleUrls: [\"../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], item: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-smiley\", RatingItemSmileyComponent);\n\nclass RatingDropdownItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nRatingDropdownItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingDropdownItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingDropdownItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingDropdownItemComponent, selector: \"sv-ng-rating-dropdown-item, '[sv-ng-rating-dropdown-item]'\", inputs: { element: \"element\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div class=\\\"sd-rating-dropdown-item\\\">\\n    <span class=\\\"sd-rating-dropdown-item_text\\\">{{model.title}}</span>\\n    <ng-container *ngIf=\\\"!!model.description\\\">\\n    <div class=\\\"sd-rating-dropdown-item_description\\\">\\n      <sv-ng-string [model]=\\\"model.description\\\"></sv-ng-string>\\n    </div>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingDropdownItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-dropdown-item, '[sv-ng-rating-dropdown-item]'\",\n                    templateUrl: \"./rating-dropdown-item.component.html\",\n                    styleUrls: [\"../../../hide-host.scss\"],\n                }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-dropdown-item\", RatingDropdownItemComponent);\n\nclass RatingDropdownComponent {\n}\nRatingDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nRatingDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RatingDropdownComponent, selector: \"sv-ng-rating-dropdown-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootDropdown\\\">\\n    <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n</div>\", components: [{ type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RatingDropdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-rating-dropdown-question\",\n                    templateUrl: \"./rating-dropdown.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"rating-dropdown-question\", RatingDropdownComponent);\nRendererFactory.Instance.registerRenderer(\"rating\", \"dropdown\", \"rating-dropdown-question\");\n\nclass BooleanCheckboxComponent {\n}\nBooleanCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BooleanCheckboxComponent, selector: \"sv-ng-boolean-checkbox-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootCheckbox\\\">\\n  <div [class]=\\\"model.getCheckboxItemCss()\\\">\\n    <label [class]=\\\"model.cssClasses.checkboxLabel\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [value]=\\\"model.booleanValue\\\" [class]=\\\"model.cssClasses.controlCheckbox\\\" \\n        [attr.name]=\\\"model.name\\\" [id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n        [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\" [(ngModel)]=\\\"model.booleanValue\\\" [value]=\\\"model.booleanValue\\\"\\n        [disabled]=\\\"model.isDisabledAttr\\\" [readonly]=\\\"model.isReadOnlyAttr\\\" [indeterminate]=\\\"model.isIndeterminate\\\"\\n      />\\n      <span [class]=\\\"model.cssClasses.checkboxMaterialDecorator\\\">\\n        <svg *ngIf=\\\"!!model.svgIcon\\\" [class]=\\\"model.cssClasses.checkboxItemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"model.svgIcon\\\"></use>\\n        </svg>\\n        <span class=\\\"check\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"model.isLabelRendered\\\" [class]=\\\"model.cssClasses.checkboxControlLabel\\\" [id]=\\\"model.labelRenderedAriaID\\\">\\n        <sv-ng-element-title-actions [element]=\\\"model\\\"></sv-ng-element-title-actions>\\n      </span>\\n    </label>\\n    <div *ngIf=\\\"model.canRenderLabelDescription\\\" [class]=\\\"model.cssDescription\\\" [attr.id]=\\\"model.ariaDescriptionId\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n  </div>\\n</div>\", components: [{ type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-boolean-checkbox-question\",\n                    templateUrl: \"./boolean-checkbox.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"boolean-checkbox-question\", BooleanCheckboxComponent);\nRendererFactory.Instance.registerRenderer(\"boolean\", \"checkbox\", \"boolean-checkbox-question\");\n\nclass BooleanRadioItemComponent {\n    constructor() {\n    }\n}\nBooleanRadioItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanRadioItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanRadioItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BooleanRadioItemComponent, selector: \"sv-ng-boolean-radio-item\", inputs: { question: \"question\", value: \"value\", locText: \"locText\" }, ngImport: i0, template: \"<div role=\\\"presentation\\\" [class]=\\\"question.getRadioItemClass(question.cssClasses, value)\\\">\\n  <label [class]=\\\"question.cssClasses.radioLabel\\\">\\n    <input\\n      type=\\\"radio\\\"\\n      [attr.name]=\\\"question.name\\\" [attr.aria-errormessage]=\\\"question.ariaErrormessage\\\" [value]=\\\"value\\\" [(ngModel)]=\\\"question.booleanValue\\\"\\n      [disabled]=\\\"question.isDisabledAttr\\\" [readonly]=\\\"question.isReadOnlyAttr\\\" [class]=\\\"question.cssClasses.itemRadioControl || ''\\\"\\n    />\\n    <span *ngIf=\\\"question.cssClasses.materialRadioDecorator\\\" [class]=\\\"question.cssClasses.materialRadioDecorator\\\">\\n      <svg\\n        *ngIf=\\\"question.itemSvgIcon\\\"\\n        [class]=\\\"question.cssClasses.itemRadioDecorator\\\"\\n      >\\n        <use [attr.xlink:href]=\\\"question.itemSvgIcon\\\"></use>\\n      </svg>\\n    </span>\\n    <span [class]=\\\"question.cssClasses.radioControlLabel\\\" [model]=\\\"locText\\\" sv-ng-string>\\n    </span>\\n  </label>\\n</div>\\n\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2$1.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanRadioItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-boolean-radio-item\",\n                    templateUrl: \"boolean-radio-item.component.html\",\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], locText: [{\n                type: Input\n            }] } });\n\nclass BooleanRadioComponent {\n}\nBooleanRadioComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanRadioComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanRadioComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: BooleanRadioComponent, selector: \"sv-ng-boolean-radio-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootRadio\\\">\\n  <fieldset role=\\\"presentation\\\" [class]=\\\"model.cssClasses.radioFieldset\\\">\\n    <sv-ng-boolean-radio-item *ngIf=\\\"model.swapOrder\\\" [value]=\\\"true\\\" [locText]=\\\"model.locLabelTrue\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n    <sv-ng-boolean-radio-item  [value]=\\\"false\\\" [locText]=\\\"model.locLabelFalse\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n    <sv-ng-boolean-radio-item *ngIf=\\\"!model.swapOrder\\\" [value]=\\\"true\\\" [locText]=\\\"model.locLabelTrue\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n  </fieldset>\\n</div>\\n\", components: [{ type: BooleanRadioItemComponent, selector: \"sv-ng-boolean-radio-item\", inputs: [\"question\", \"value\", \"locText\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: BooleanRadioComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-boolean-radio-question\",\n                    templateUrl: \"./boolean-radio.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"boolean-radio-question\", BooleanRadioComponent);\nRendererFactory.Instance.registerRenderer(\"boolean\", \"radio\", \"boolean-radio-question\");\n\nclass ProgressDefaultComponent extends EmbeddedViewContentComponent {\n    getProgressTextInBarCss(css) {\n        return SurveyProgressModel.getProgressTextInBarCss(css);\n    }\n    getProgressTextUnderBarCss(css) {\n        return SurveyProgressModel.getProgressTextUnderBarCss(css);\n    }\n}\nProgressDefaultComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressDefaultComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nProgressDefaultComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ProgressDefaultComponent, selector: \"sv-ng-progress-default\", inputs: { container: \"container\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.getProgressCssClasses(container)\\\">\\n    <div [class]=\\\"model.css.progressBar\\\" [style.width]=\\\"model.progressValue + '%'\\\"\\n        role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-label=\\\"progress\\\">\\n        <span [class]=\\\"getProgressTextInBarCss(model.css)\\\">\\n          {{ model.progressText }}\\n        </span>\\n    </div>\\n    <span [class]=\\\"getProgressTextUnderBarCss(model.css)\\\"> {{  model.progressText }} </span>\\n  </div>\\n</ng-template>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressDefaultComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-progress-default\",\n                    templateUrl: \"./progress.component.html\"\n                }]\n        }], propDecorators: { container: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-progress\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-pages\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-questions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-correctquestions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-requiredquestions\", ProgressDefaultComponent);\n\nclass ProgressButtonsComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.hasScroller = false;\n        this.canShowHeader = false;\n        this.canShowFooter = false;\n        this.canShowItemTitles = true;\n    }\n    onResize(canShowItemTitles) {\n        this.canShowItemTitles = canShowItemTitles;\n        this.canShowHeader = !this.canShowItemTitles;\n        this.changeDetectorRef.detectChanges();\n    }\n    onUpdateScroller(hasScroller) {\n        this.hasScroller = hasScroller;\n        this.changeDetectorRef.detectChanges();\n    }\n    onUpdateSettings() {\n        this.canShowItemTitles = this.model.showItemTitles;\n        this.canShowFooter = !this.model.showItemTitles;\n        this.changeDetectorRef.detectChanges();\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n    }\n    clickScrollButton(isLeftScroll) {\n        if (this.progressButtonsListContainer) {\n            this.progressButtonsListContainer.nativeElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n        }\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (!!((_a = this.progressButtonsListContainer) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            const element = this.progressButtonsListContainer.nativeElement;\n            this.respManager = new ProgressButtonsResponsivityManager(this.model, element, this);\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.respManager) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\nProgressButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressButtonsComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nProgressButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ProgressButtonsComponent, selector: \"sv-ng-progress-buttons\", inputs: { model: \"model\", survey: \"survey\", container: \"container\" }, viewQueries: [{ propertyName: \"progressButtonsListContainer\", first: true, predicate: [\"progressButtonsListContainer\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div [class]=\\\"model.getRootCss(container)\\\" [style.maxWidth]=\\\"model.progressWidth\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-label=\\\"progress\\\">\\n  <div *ngIf=\\\"canShowHeader\\\" [class]=\\\"survey.css.progressButtonsHeader\\\">\\n    <div [class]=\\\"survey.css.progressButtonsPageTitle\\\" [title]=\\\"model.headerText\\\">{{ model.headerText }}</div>\\n  </div>\\n  <div [class]=\\\"survey.css.progressButtonsContainer\\\">\\n    <div\\n      [class]=\\\"model.getScrollButtonCss(hasScroller, true)\\\"\\n      (click)=\\\"clickScrollButton(true)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n    <div\\n      [class]=\\\"survey.css.progressButtonsListContainer\\\" #progressButtonsListContainer>\\n      <ul [class]=\\\"survey.css.progressButtonsList\\\">\\n        <li\\n          *ngFor=\\\"let page of survey.visiblePages; index as index\\\"\\n          [class]=\\\"model.getListElementCss(index)\\\"\\n          (click)=\\\"model.isListElementClickable(index) ? model.clickListElement(page) : null\\\"\\n          [attr.data-page-number]=\\\"model.getItemNumber(page)\\\">\\n          <div [class]=\\\"survey.css.progressButtonsConnector\\\"></div>\\n          <div *ngIf=\\\"canShowItemTitles\\\"\\n            [class]=\\\"survey.css.progressButtonsPageTitle\\\"\\n            [title]=\\\"page.renderedNavigationTitle\\\"\\n          >\\n            <sv-ng-string [model]=\\\"page.locNavigationTitle\\\"></sv-ng-string>\\n          </div>\\n          <div *ngIf=\\\"canShowItemTitles\\\"\\n            [class]=\\\"survey.css.progressButtonsPageDescription\\\"\\n            [title]=\\\"page.locNavigationDescription.renderedHtml\\\"\\n          >\\n            {{ page.locNavigationDescription.renderedHtml }}\\n          </div>\\n          <div [class]=\\\"survey.css.progressButtonsButton\\\"><div [class]=\\\"survey.css.progressButtonsButtonBackground\\\"></div><div [class]=\\\"survey.css.progressButtonsButtonContent\\\"></div><span>{{model.getItemNumber(page)}}</span></div>\\n        </li>\\n      </ul>\\n    </div>\\n    <div\\n      [class]=\\\"model.getScrollButtonCss(hasScroller, false)\\\"\\n      (click)=\\\"clickScrollButton(false)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n  </div>\\n  <div *ngIf=\\\"canShowFooter\\\" [class]=\\\"survey.css.progressButtonsFooter\\\">\\n    <div [class]=\\\"survey.css.progressButtonsPageTitle\\\" [title]=\\\"model.footerText\\\">{{ model.footerText }}</div>\\n  </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressButtonsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-progress-buttons\",\n                    templateUrl: \"./progress.component.html\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], survey: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], progressButtonsListContainer: [{\n                type: ViewChild,\n                args: [\"progressButtonsListContainer\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-buttons\", ProgressButtonsComponent);\n\nclass ProgressTocComponent extends EmbeddedViewContentComponent {\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnChanges(changes) {\n    }\n}\nProgressTocComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressTocComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nProgressTocComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ProgressTocComponent, selector: \"sv-navigation-toc, sv-ng-navigation-toc\", inputs: { model: \"model\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.containerCss\\\">\\n    <sv-ng-list *ngIf=\\\"!model.isMobile\\\" [model]=\\\"model.listModel\\\"></sv-ng-list>\\n    <div *ngIf=\\\"model.isMobile\\\" (click)=\\\"model.togglePopup()\\\" data-bind=\\\"key2click\\\">\\n        <svg [iconName]=\\\"model.icon\\\" [size]=\\\"24\\\" sv-ng-svg-icon></svg>\\n        <sv-ng-popup [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    </div>\\n  </div>  \\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: ListComponent, selector: \"sv-ng-list, '[sv-ng-list]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\", \"getTarget\", \"getArea\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ProgressTocComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-navigation-toc, sv-ng-navigation-toc\",\n                    templateUrl: \"./progress.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-navigation-toc\", ProgressTocComponent);\n\nclass PanelComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.trackRowBy = (_, row) => {\n            return row.id;\n        };\n    }\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        var _a, _b;\n        if (!!((_a = this.panelContainerRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            (_b = this.model.survey) === null || _b === void 0 ? void 0 : _b.afterRenderPanel(this.model, this.panelContainerRef.nativeElement);\n        }\n    }\n    get canRender() {\n        return this.model && this.model.survey && this.model.getIsContentVisible();\n    }\n}\nPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelComponent, selector: \"sv-ng-panel, '[sv-ng-panel]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"panelContainerRef\", first: true, predicate: [\"panelContainer\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"canRender\\\" [attr.id]=\\\"model.id\\\" [class]=\\\"model.getContainerCss()\\\" (focusin)=\\\"model.focusIn()\\\" #panelContainer>\\n    <div *ngIf=\\\"model.showErrorsAbovePanel && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n    <div *ngIf=\\\"model.hasDescription || model.hasTitle\\\" [element]=\\\"model\\\" sv-ng-element-header></div>\\n    <div *ngIf=\\\"!model.showErrorsAbovePanel && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n    <div *ngIf=\\\"model.renderedIsExpanded\\\" [style.paddingLeft]=\\\"model.innerPaddingLeft\\\" [class]=\\\"model.cssClasses.panel.content\\\" [attr.id]=\\\"model.contentId\\\">\\n      <ng-container *ngFor=\\\"let row of model.visibleRows; trackBy: trackRowBy\\\">\\n        <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n          <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n        </ng-template>\\n      </ng-container>\\n      <sv-ng-action-bar [model]=\\\"model.getFooterToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\", components: [{ type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: [\"element\"] }, { type: RowComponent, selector: \"sv-ng-row\", inputs: [\"row\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-panel, '[sv-ng-panel]'\",\n                    templateUrl: \"./panel.component.html\",\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], panelContainerRef: [{\n                type: ViewChild,\n                args: [\"panelContainer\", { static: false, read: ElementRef }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"panel\", PanelComponent);\n\nclass SurveyNavigationButton {\n    getModel() {\n        return this.model;\n    }\n    buttonMouseDown() {\n        return this.model.data && this.model.data.mouseDown();\n    }\n}\nSurveyNavigationButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyNavigationButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyNavigationButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SurveyNavigationButton, selector: \"sv-ng-nav-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<input *ngIf=\\\"model.visible\\\" type=\\\"button\\\" [value]=\\\"model.title\\\" [class]=\\\"model.innerCss\\\" (mousedown)=\\\"buttonMouseDown()\\\" (click)=\\\"model.action()\\\" [disabled]=\\\"model.disabled\\\" [attr.title]=\\\"model.getTooltip()\\\"/>\", styles: [\":host { display: contents; }\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyNavigationButton, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"./survey-nav-btn.component.html\",\n                    selector: \"sv-ng-nav-btn\",\n                    styles: [\":host { display: contents; }\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-nav-btn\", SurveyNavigationButton);\n\nclass FilePreviewComponent extends EmbeddedViewContentComponent {\n    constructor() {\n        super(...arguments);\n        this.trackFilesFn = (index) => {\n            return this.question.inputId + \"_\" + index;\n        };\n    }\n}\nFilePreviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FilePreviewComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFilePreviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: FilePreviewComponent, selector: \"sv-ng-file-preview\", inputs: { question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <ng-container *ngIf=\\\"question.showPreviewContainer\\\">\\n        <div [class]=\\\"question.cssClasses.fileList || undefined\\\">\\n            <span *ngFor=\\\"let val of question.previewValue; index as index; trackBy: trackFilesFn\\\"\\n                [visible]=\\\"val && question.isPreviewVisible(index)\\\" [class]=\\\"question.cssClasses.previewItem\\\"\\n                (click)=\\\"question.doDownloadFileFromContainer($event)\\\">\\n                <div *ngIf=\\\"val.name && question.cssClasses.fileSign\\\" [class]=\\\"question.cssClasses.fileSign\\\">\\n                    <a (click)=\\\"question.doDownloadFile($event, val)\\\" [attr.href]=\\\"val.content | safeUrl\\\"\\n                        [attr.title]=\\\"val.name\\\" [attr.download]=\\\"val.name\\\" [style.width]=\\\"question.imageWidth\\\">{{\\n                        val.name\\n                        }}</a>\\n                </div>\\n                <div [class]=\\\"question.getImageWrapperCss(val)\\\">\\n                    <img *ngIf=\\\"question.canPreviewImage(val)\\\" [attr.src]=\\\"val.content | safeUrl\\\"\\n                        [style.height]=\\\"question.imageHeight\\\" [style.width]=\\\"question.imageWidth\\\" alt=\\\"File preview\\\" />\\n                    <svg *ngIf=\\\"question.defaultImage(val)\\\" [iconName]=\\\"question.cssClasses.defaultImageIconId\\\"\\n                        [partCss]=\\\"question.cssClasses.defaultImage\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n                    <div *ngIf=\\\"val.name && !question.isReadOnly\\\" [class]=\\\"question.getRemoveButtonCss()\\\"\\n                        (click)=\\\"question.doRemoveFile(val, $event)\\\">\\n                        <span [class]=\\\"question.cssClasses.removeFile\\\">{{ question.removeFileCaption }}</span>\\n                        <svg *ngIf=\\\"question.cssClasses.removeFileSvgIconId\\\" [title]=\\\"question.removeFileCaption\\\"\\n                            [partCss]=\\\"question.cssClasses.removeFileSvg\\\"\\n                            [iconName]=\\\"question.cssClasses.removeFileSvgIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"val.name && question.cssClasses.fileSignBottom\\\"\\n                    [class]=\\\"question.cssClasses.fileSignBottom\\\">\\n                    <a (click)=\\\"question.doDownloadFile($event, val)\\\" [attr.href]=\\\"val.content | safeUrl\\\"\\n                        [attr.title]=\\\"val.name\\\" [attr.download]=\\\"val.name\\\" [style.width]=\\\"question.imageWidth\\\">{{\\n                        val.name\\n                        }}</a>\\n                </div>\\n            </span>\\n        </div>\\n    </ng-container>\\n</ng-template>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }], pipes: { \"safeUrl\": SafeUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FilePreviewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-file-preview\",\n                    templateUrl: \"./file-preview.component.html\"\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-file-preview\", FilePreviewComponent);\n\nclass MatrixQuestionComponent extends QuestionAngular {\n    ngOnInit() {\n        this.model.visibleRowsChangedCallback = () => {\n            this.detectChanges();\n        };\n        super.ngOnInit();\n    }\n    onCellChanged(row, column) {\n        row.value = column.value;\n        this.detectChanges();\n    }\n    trackRowByFn(i, row) {\n        return \"column-\" + row.name + \"-\" + i;\n    }\n    trackColumnByFn(i, column) {\n        return \"column-\" + column.value + \"-\" + i;\n    }\n}\nMatrixQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixQuestionComponent, selector: \"sv-ng-matrix-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.cssClasses.tableWrapper\\\" #contentElement>\\n    <fieldset>\\n      <legend class=\\\"sv-hidden\\\">{{model.locTitle.renderedHtml}}</legend>\\n      <table [class]=\\\"model.getTableCss()\\\">\\n        <thead *ngIf=\\\"model.showHeader\\\">\\n          <tr>\\n            <td *ngIf=\\\"model.hasRows\\\"></td>\\n            <th\\n              *ngFor=\\\"let column of model.visibleColumns\\\" [style]=\\\"{ minWidth: model.columnMinWidth, width: model.columnMinWidth }\\\" [class]=\\\"model.cssClasses.headerCell\\\">\\n              <ng-template [component]=\\\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\\\">\\n                <sv-ng-string [model]=\\\"column.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let row of model.visibleRows; trackBy: trackRowByFn \\\" [class]=\\\"row.rowClasses || undefined\\\">\\n           <td [class]=\\\"row.rowTextClasses\\\" [style]=\\\"{ minWidth: model.rowTitleWidth, width: model.rowTitleWidth }\\\" *ngIf=\\\"model.hasRows\\\">\\n              <ng-template [component]=\\\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\\\">\\n                <sv-ng-string [model]=\\\"row.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </td>\\n            <ng-container *ngIf=\\\"model.hasCellText\\\">\\n              <td *ngFor=\\\"let column of model.visibleColumns\\\"\\n                [class]=\\\"model.getItemClass(row, column)\\\"\\n                (click)=\\\"onCellChanged(row, column)\\\" [model]=\\\"model.getCellDisplayLocText(row.name, column)\\\" sv-ng-string>\\n              </td>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!model.hasCellText\\\">\\n              <td\\n              *ngFor=\\\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\\\"\\n              [attr.data-responsive-title]=\\\"column.locText.renderedHtml\\\"\\n              [class]=\\\"model.cssClasses.cell\\\">\\n                <ng-template [component]=\\\"{ name: model.cellComponent, data: { cellChangedOwner: this, question: model, row: row, column: column, columnIndex: columnIndex } }\\\"></ng-template>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </fieldset>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-question\",\n                    templateUrl: \"./matrix.component.html\",\n                    styleUrls: [\"../hide-host.scss\"]\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrix-question\", MatrixQuestionComponent);\n\nclass ChooseFileBtn extends EmbeddedViewContentComponent {\n    get question() {\n        return (this.model && this.model.data.question) || this.data.question;\n    }\n}\nChooseFileBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ChooseFileBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nChooseFileBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ChooseFileBtn, selector: \"sv-ng-choose-file-btn\", inputs: { data: \"data\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <label tabindex=\\\"0\\\" [class]=\\\"question.getChooseFileCss()\\\"\\n        [attr.for]=\\\"question.inputId\\\" [attr.aria-label]=\\\"question.chooseButtonText\\\" [key2click]\\n        (click)=\\\"question.chooseFile($event)\\\">\\n        <svg *ngIf=\\\"question.cssClasses.chooseFileIconId\\\" [title]=\\\"question.chooseButtonText\\\"\\n            [iconName]=\\\"question.cssClasses.chooseFileIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        <span>{{ question.chooseButtonText }}</span>\\n</label>\\n</ng-template>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ChooseFileBtn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-choose-file-btn\",\n                    templateUrl: \"./choose-file.component.html\"\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-file-choose-btn\", ChooseFileBtn);\n\nclass LoadingIndicatorComponent extends EmbeddedViewContentComponent {\n}\nLoadingIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LoadingIndicatorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLoadingIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: LoadingIndicatorComponent, selector: \"sv-ng-loading-indicator\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <div class=\\\"sd-loading-indicator\\\">\\n        <svg [iconName]=\\\"'icon-loading'\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LoadingIndicatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"./loading-indicator.component.html\",\n                    selector: \"sv-ng-loading-indicator\",\n                    styleUrls: [\"../../hide-host.scss\"]\n                }]\n        }] });\n\nclass FileQuestionComponent extends QuestionAngular {\n}\nFileQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FileQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFileQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: FileQuestionComponent, selector: \"sv-ng-file-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.fileRootCss\\\" #contentElement>\\n  <input [class]=\\\"model.cssClasses.fileInput\\\" *ngIf=\\\"!model.isReadOnlyAttr && !model.isDisabledAttr && model.hasFileUI\\\" tabindex=\\\"-1\\\" type=\\\"file\\\"\\n    [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n    [attr.aria-errormessage]=\\\"model.ariaErrormessage\\\" [attr.multiple]=\\\"model.multipleRendered\\\"\\n    [attr.title]=\\\"model.inputTitle\\\" [attr.accept]=\\\"model.acceptedTypes\\\" [attr.capture]=\\\"model.renderCapture\\\" />\\n  <input *ngIf=\\\"model.isReadOnlyAttr\\\" type=\\\"file\\\" readonly [class]=\\\"model.getReadOnlyFileCss()\\\" [attr.id]=\\\"model.inputId\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\" [attr.placeholder]=\\\"model.title\\\" style=\\\"color: transparent\\\" />\\n  <input *ngIf=\\\"model.isDisabledAttr\\\" type=\\\"file\\\" disabled [class]=\\\"model.getReadOnlyFileCss()\\\" [attr.id]=\\\"model.inputId\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\" [attr.placeholder]=\\\"model.title\\\" style=\\\"color: transparent\\\" />\\n  <div [class]=\\\"model.cssClasses.dragArea\\\" (dragenter)=\\\"model.onDragEnter($event)\\\" (drop)=\\\"model.onDrop($event)\\\"\\n    (dragover)=\\\"model.onDragOver($event)\\\" (dragleave)=\\\"model.onDragLeave($event)\\\">\\n    <div [class]=\\\"model.getFileDecoratorCss()\\\" *ngIf=\\\"model.showFileDecorator\\\">\\n      <span [class]=\\\"model.cssClasses.dragAreaPlaceholder\\\" [model]=\\\"model.locRenderedPlaceholder\\\" sv-ng-string></span>\\n      <div [class]=\\\"model.cssClasses.wrapper\\\">\\n        <sv-ng-choose-file-btn [data]=\\\"{ question: model }\\\" *ngIf=\\\"model.showChooseButton\\\"></sv-ng-choose-file-btn>\\n        <sv-ng-action-bar [model]=\\\"model.actionsContainer\\\" *ngIf=\\\"model.actionsContainerVisible\\\"></sv-ng-action-bar>\\n        <span [class]=\\\"model.cssClasses.noFileChosen\\\" *ngIf=\\\"model.isEmpty()\\\">{{ model.noFileChosenCaption }}</span>\\n      </div>\\n    </div>\\n    <ng-container *ngIf=\\\"model.showLoadingIndicator\\\">\\n      <div [class]=\\\"model.cssClasses.loadingIndicator\\\">\\n        <sv-ng-loading-indicator></sv-ng-loading-indicator>\\n      </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.isPlayingVideo\\\">\\n      <ng-container *ngTemplateOutlet=\\\"fileVideo\\\"></ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.showRemoveButton\\\">\\n      <ng-container *ngTemplateOutlet=\\\"fileCleanButton; context: { css: model.showRemoveButton }\\\"></ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.allowShowPreview\\\">\\n      <ng-template [component]=\\\"{ name: 'sv-file-preview', data: { question: model } }\\\"></ng-template>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.showRemoveButtonBottom\\\">\\n      <ng-container *ngTemplateOutlet=\\\"fileCleanButton; context: { css: model.showRemoveButtonBottom }\\\"></ng-container>\\n    </ng-container>\\n    <sv-action-bar *ngIf=\\\"model.fileNavigatorVisible\\\" [model]=\\\"model.fileNavigator\\\"></sv-action-bar>\\n  </div>\\n</div>\\n<ng-template #fileCleanButton let-css=\\\"css\\\">\\n  <button type=\\\"button\\\" [class]=\\\"css\\\" (click)=\\\"model.doClean()\\\">\\n    <span>{{ model.clearButtonCaption }}</span>\\n    <svg *ngIf=\\\"model.cssClasses.removeButtonIconId\\\" [iconName]=\\\"model.cssClasses.removeButtonIconId\\\" [size]=\\\"'auto'\\\"\\n      [title]=\\\"model.clearButtonCaption\\\" sv-ng-svg-icon></svg>\\n  </button>\\n</ng-template>\\n<ng-template #fileVideo>\\n  <div [class]=\\\"model.cssClasses.videoContainer\\\">\\n    <sv-ng-action [model]=\\\"model.changeCameraAction\\\"></sv-ng-action>\\n    <sv-ng-action [model]=\\\"model.closeCameraAction\\\"></sv-ng-action>\\n    <video autoplay playsinline [attr.id]=\\\"model.videoId\\\" [class]=\\\"model.cssClasses.video\\\"></video>\\n    <sv-ng-action [model]=\\\"model.takePictureAction\\\"></sv-ng-action>\\n  </div>\\n</ng-template>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: ChooseFileBtn, selector: \"sv-ng-choose-file-btn\", inputs: [\"data\", \"model\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: LoadingIndicatorComponent, selector: \"sv-ng-loading-indicator\" }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: ActionComponent, selector: \"sv-ng-action\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FileQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-file-question\",\n                    templateUrl: \"./file.component.html\",\n                    styleUrls: []\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"file-question\", FileQuestionComponent);\n\nclass CommentQuestionComponent extends QuestionAngular {\n    onChange(event) {\n        this.model.value = event.target.value;\n    }\n}\nCommentQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CommentQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCommentQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CommentQuestionComponent, selector: \"sv-ng-question-comment\", usesInheritance: true, ngImport: i0, template: \"<textarea\\n*ngIf=\\\"!model.isReadOnlyRenderDiv()\\\"\\n[readonly]=\\\"model.isReadOnlyAttr\\\"\\n[disabled]=\\\"model.isDisabledAttr\\\"\\n[id]=\\\"model.inputId\\\"\\n[attr.maxlength]=\\\"model.getMaxLength()\\\"\\n[attr.cols]=\\\"model.cols\\\"\\n[attr.rows]=\\\"model.rows\\\"\\n[attr.placeholder]=\\\"model.renderedPlaceholder\\\"\\n[class]=\\\"model.className\\\"\\n[value]=\\\"model.value || null\\\"\\n(input)=\\\"model.onInput($event)\\\"\\n(keydown)=\\\"model.onKeyDown($event)\\\"\\n(change)=\\\"onChange($event)\\\"\\n[attr.aria-required]=\\\"model.a11y_input_ariaRequired\\\"\\n[attr.aria-label]=\\\"model.a11y_input_ariaLabel\\\"\\n[attr.aria-labelledby]=\\\"model.a11y_input_ariaLabelledBy\\\"\\n[attr.aria-describedby]=\\\"model.a11y_input_ariaDescribedBy\\\"\\n[attr.aria-invalid]=\\\"model.a11y_input_ariaInvalid\\\"\\n[attr.aria-errormessage]=\\\"model.a11y_input_ariaErrormessage\\\"\\n[style.resize]=\\\"model.resizeStyle\\\"\\n#contentElement></textarea>\\n<sv-ng-character-counter *ngIf=\\\"!model.isReadOnlyRenderDiv() && model.getMaxLength()\\\" \\n[counter]=\\\"model.characterCounter\\\"\\n[remainingCharacterCounter]=\\\"model.cssClasses.remainingCharacterCounter\\\">\\n</sv-ng-character-counter>\\n<div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ model.value }}</div>\", components: [{ type: CharacterCounterComponent, selector: \"sv-ng-character-counter\", inputs: [\"counter\", \"remainingCharacterCounter\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CommentQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"./comment.component.html\",\n                    selector: \"sv-ng-question-comment\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"comment-question\", CommentQuestionComponent);\n\nclass SignaturePadQuestionComponent extends QuestionAngular {\n}\nSignaturePadQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SignaturePadQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSignaturePadQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: SignaturePadQuestionComponent, selector: \"sv-ng-signature-component\", usesInheritance: true, ngImport: i0, template: \"<div\\n[class]=\\\"model.cssClasses.root\\\"\\n[style.width]=\\\"model.renderedCanvasWidth\\\" #contentElement>\\n<div [class]=\\\"model.cssClasses.placeholder\\\" [visible]=\\\"model.needShowPlaceholder()\\\" [model]=\\\"$any(model).locRenderedPlaceholder\\\" sv-ng-string></div>\\n<div>\\n  <img *ngIf=\\\"!!model.backgroundImage\\\" [src]=\\\"model.backgroundImage\\\" [style.width]=\\\"model.renderedCanvasWidth\\\" [class]=\\\"model.cssClasses.backgroundImage\\\">\\n  <canvas tabindex=\\\"-1\\\" [class]=\\\"model.cssClasses.canvas\\\" (blur)=\\\"model.onBlur($event)\\\"></canvas>\\n</div>\\n<div [class]=\\\"model.cssClasses.controls\\\" *ngIf=\\\"model.canShowClearButton\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"model.cssClasses.clearButton\\\"\\n    [title]=\\\"model.clearButtonCaption\\\"\\n    (click)=\\\"model.clearValue(true)\\\"\\n  >\\n    <span *ngIf=\\\"!model.cssClasses.clearButtonIconId\\\">\\u2716</span>\\n    <svg\\n      *ngIf=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [iconName]=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n  </button>\\n</div>\\n<ng-container *ngIf=\\\"model.showLoadingIndicator\\\">\\n  <div [class]=\\\"model.cssClasses.loadingIndicator\\\">\\n    <sv-ng-loading-indicator></sv-ng-loading-indicator>\\n  </div>\\n</ng-container>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: LoadingIndicatorComponent, selector: \"sv-ng-loading-indicator\" }], directives: [{ type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SignaturePadQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-signature-component\",\n                    templateUrl: \"./signature.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"signaturepad-question\", SignaturePadQuestionComponent);\n\nclass MultipleTextItemComponent extends BaseAngular {\n    getModel() {\n        if (!this.model.isErrorsCell) {\n            return this.model.item.editor;\n        }\n        return null;\n    }\n    get item() {\n        return this.model.item;\n    }\n    get editor() {\n        return this.model.item.editor;\n    }\n    ngDoCheck() {\n        super.ngDoCheck();\n        if (this.model.isErrorsCell) {\n            this.editor.registerFunctionOnPropertyValueChanged(\"errors\", () => {\n                this.update();\n            }, \"__ngSubscription\");\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.model.isErrorsCell) {\n            this.editor.unRegisterFunctionOnPropertyValueChanged(\"errors\", \"__ngSubscription\");\n        }\n    }\n}\nMultipleTextItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMultipleTextItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MultipleTextItemComponent, selector: \"'[sv-ng-multipletext-item]'\", inputs: { question: \"question\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"!model.isErrorsCell\\\">\\n  <label [class]=\\\"question.getItemLabelCss(item)\\\">\\n    <span [class]=\\\"question.getItemTitleCss()\\\" [style]=\\\"{ minWidth: question.itemTitleWidth, width: question.itemTitleWidth }\\\">\\n      <span *ngIf=\\\" item.editor.isRequireTextBeforeTitle || item.editor.isRequireTextOnStart\\\"\\n        [class]=\\\"question.cssClasses.requiredText\\\">{{ item.editor.requiredText }}</span>\\n      <sv-ng-string [model]=\\\"item.locTitle\\\"></sv-ng-string>\\n      <span *ngIf=\\\"item.editor.isRequireTextAfterTitle\\\">&nbsp;</span>\\n      <span *ngIf=\\\"item.editor.isRequireTextAfterTitle\\\" [class]=\\\"question.cssClasses.requiredText\\\" aria-hidden=\\\"true\\\">{{\\n        item.editor.requiredText }}</span>\\n    </span>\\n    <div [class]=\\\"question.getItemCss()\\\" (focusin)=\\\"item.focusIn()\\\">\\n      <sv-ng-text-question [model]=\\\"item.editor\\\"></sv-ng-text-question>\\n    </div>\\n  </label>\\n</ng-container>\\n<ng-container *ngIf=\\\"model.isErrorsCell\\\">\\n  <div *ngIf=\\\"item.editor.hasVisibleErrors\\\" [element]=\\\"item.editor\\\" sv-ng-errors></div>\\n</ng-container>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: TextQuestionComponent, selector: \"sv-ng-text-question\" }, { type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"'[sv-ng-multipletext-item]'\",\n                    templateUrl: \"./mutlipletextitem.component.html\"\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass MultipleTextRowComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    trackItemBy(_, cell) {\n        return \"item\" + cell.item.editor.id;\n    }\n}\nMultipleTextRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextRowComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMultipleTextRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MultipleTextRowComponent, selector: \"sv-ng-multipletext-row\", inputs: { question: \"question\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <tr [class]=\\\"question.cssClasses.row\\\" *ngIf=\\\"model.isVisible\\\">\\n        <ng-container *ngFor=\\\"let cell of model.cells; trackBy: trackItemBy\\\">\\n            <td [class]=\\\"cell.className\\\" [question]=\\\"question\\\" [model]=\\\"cell\\\" sv-ng-multipletext-item></td>\\n        </ng-container>\\n    </tr>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: MultipleTextItemComponent, selector: \"'[sv-ng-multipletext-item]'\", inputs: [\"question\", \"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-multipletext-row\",\n                    templateUrl: \"./multipletextrow.component.html\",\n                    styleUrls: [\"../hide-host.scss\"]\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass MultipleTextComponent extends QuestionAngular {\n    constructor() {\n        super(...arguments);\n        this.trackRowBy = (index) => {\n            return this.model.inputId + \"rowkey\" + index;\n        };\n    }\n}\nMultipleTextComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMultipleTextComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MultipleTextComponent, selector: \"sv-ng-multipletext-question\", usesInheritance: true, ngImport: i0, template: \"<table [class]=\\\"model.getQuestionRootCss()\\\" #contentElement>\\n  <tbody>\\n    <ng-container *ngFor=\\\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\\\">\\n      <sv-ng-multipletext-row [model]=\\\"row\\\" [question]=\\\"model\\\"></sv-ng-multipletext-row>\\n    </ng-container>\\n  </tbody>\\n</table>\", components: [{ type: MultipleTextRowComponent, selector: \"sv-ng-multipletext-row\", inputs: [\"question\", \"model\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MultipleTextComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-multipletext-question\",\n                    templateUrl: \"./multipletext.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"multipletext-question\", MultipleTextComponent);\n\nclass RankingQuestionComponent extends SelectBaseComponent {\n    constructor() {\n        super(...arguments);\n        this.inputType = \"\";\n        this.trackItemBy = (index, item) => {\n            return item.value + \"-\" + index + \"-item\";\n        };\n    }\n    getDefaultComponentName() {\n        return \"sv-ng-ranking-item\";\n    }\n    getItemValueComponentData(item, index, unrankedItem) {\n        const res = {\n            componentName: this.getDefaultComponentName(),\n            componentData: {\n                question: this.model,\n                model: item,\n                inputType: this.inputType,\n                data: this.model.getItemValueWrapperComponentData(item),\n                index,\n                unrankedItem\n            }\n        };\n        return res;\n    }\n}\nRankingQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRankingQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RankingQuestionComponent, selector: \"sv-ng-ranking-question\", usesInheritance: true, ngImport: i0, template: \"<div *ngIf=\\\"!model.selectToRankEnabled\\\" [class]=\\\"model.rootClass\\\" #contentElement>\\n  <ng-container *ngFor=\\\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\\\">\\n    <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\\\"></ng-template>\\n  </ng-container>\\n</div>\\n\\n<div *ngIf=\\\"model.selectToRankEnabled\\\" [class]=\\\"model.rootClass\\\" #contentElement>\\n  <div [class]='model.getContainerClasses(\\\"from\\\")' data-ranking=\\\"from-container\\\">\\n    <ng-container *ngFor=\\\"let item of model.renderedUnRankingChoices; index as index; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index, true) }\\\"></ng-template>\\n    </ng-container>\\n\\n    <div *ngIf=\\\"model.renderedUnRankingChoices.length === 0\\\" [class]=\\\"model.cssClasses.containerPlaceholder\\\" [model]=\\\"$any(model).locSelectToRankEmptyRankedAreaText\\\" sv-ng-string></div>\\n  </div>\\n\\n  <div [class]=\\\"model.cssClasses.containersDivider\\\"></div>\\n\\n  <div [class]='model.getContainerClasses(\\\"to\\\")' data-ranking=\\\"to-container\\\">\\n    <ng-container *ngFor=\\\"let item of model.renderedRankingChoices; index as index; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\\\"></ng-template>\\n    </ng-container>\\n\\n    <div *ngIf=\\\"model.renderedRankingChoices.length === 0\\\" [class]=\\\"model.cssClasses.containerPlaceholder\\\" [model]=\\\"$any(model).locSelectToRankEmptyUnrankedAreaText\\\" sv-ng-string></div>\\n  </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-ranking-question\",\n                    templateUrl: \"./ranking.component.html\",\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"ranking-question\", RankingQuestionComponent);\n\nclass RankingItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nRankingItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRankingItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RankingItemComponent, selector: \"sv-ng-ranking-item\", inputs: { question: \"question\", model: \"model\", index: \"index\", unrankedItem: \"unrankedItem\" }, usesInheritance: true, ngImport: i0, template: \"\\n\\n\\n<div [attr.tabindex]=\\\"question.getItemTabIndex(model)\\\" [attr.data-sv-drop-target-ranking-item]=\\\"index\\\" \\n    [class]=\\\"question.getItemClass(model)\\\"\\n    (keydown)=\\\"question.handleKeydown($event, model)\\\"\\n    (pointerdown)=\\\"question.handlePointerDown($event, model, $any($event.currentTarget))\\\"\\n    (pointerup)=\\\"question.handlePointerUp($event, model, $any($event.currentTarget))\\\">\\n  <div tabindex=\\\"-1\\\" style=\\\"outline: none;\\\">\\n    <div [class]=\\\"question.cssClasses.itemGhostNode\\\"></div>\\n    <div [class]=\\\"question.cssClasses.itemContent\\\">\\n      <div [class]=\\\"question.cssClasses.itemIconContainer\\\">\\n        <svg [class]=\\\"question.getIconHoverCss()\\\">\\n          <use [attr.xlink:href]=\\\"question.dragDropSvgIcon\\\"></use>\\n        </svg> \\n        <svg [class]=\\\"question.getIconFocusCss()\\\">\\n          <use [attr.xlink:href]=\\\"question.arrowsSvgIcon\\\"></use>\\n        </svg> \\n      </div>\\n\\n      <div *ngIf=\\\"!unrankedItem && question.getNumberByIndex(index); else elseBlock\\\" [class]=\\\"question.getItemIndexClasses(model)\\\">{{ question.getNumberByIndex(index) }}</div>\\n      <ng-template #elseBlock><div [class]=\\\"question.getItemIndexClasses(model)\\\">\\n        <svg>\\n          <use [attr.xlink:href]=\\\"question.dashSvgIcon\\\"></use>\\n        </svg> \\n      </div></ng-template>\\n\\n      <ng-template [component]=\\\"{ name: question.itemComponent, data: { item: model, cssClasses: question.cssClasses } }\\\"></ng-template>\\n    </div>\\n  </div>\\n</div>\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-ranking-item\",\n                    templateUrl: \"./ranking-item.component.html\"\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], unrankedItem: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-ranking-item\", RankingItemComponent);\n\nclass RankingItemContentComponent extends EmbeddedViewContentComponent {\n}\nRankingItemContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingItemContentComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRankingItemContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: RankingItemContentComponent, selector: \"sv-ranking-item\", inputs: { item: \"item\", cssClasses: \"cssClasses\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"cssClasses.controlLabel\\\">\\n    <sv-ng-string [model]=\\\"item.locText\\\"></sv-ng-string>\\n  </div>\\n</ng-template>\\n\", styles: [\":host { display: none; }\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: RankingItemContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ranking-item\",\n                    templateUrl: \"./ranking-item-content.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], cssClasses: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ranking-item\", RankingItemContentComponent);\n\nclass StringEditorComponent {\n    constructor() {\n        this.onInput = (event) => {\n            this.model.text = event.target.innerText;\n        };\n        this.onClick = (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n    }\n}\nStringEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StringEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nStringEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: StringEditorComponent, selector: \"sv-ng-string-editor\", inputs: { model: \"model\" }, ngImport: i0, template: \"<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"model.hasHtml\\\"\\n  [innerHtml]=\\\"model.renderedHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n></span>\\n<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"!model.hasHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n  >{{ model.renderedHtml }}</span\\n>\\n\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StringEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-string-editor\",\n                    templateUrl: \"./string-editor.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(LocalizableString.editableRenderer, StringEditorComponent);\n\nclass PaneldynamicAction {\n    get question() {\n        return (this.model && this.model.data.question) || this.data.question;\n    }\n}\nPaneldynamicAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PaneldynamicAction, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPaneldynamicAction.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PaneldynamicAction, selector: \"ng-component\", inputs: { data: \"data\", model: \"model\" }, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PaneldynamicAction, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"\",\n                    template: \"\"\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nclass PanelDynamicAddBtn extends PaneldynamicAction {\n    addPanelClick() {\n        this.question.addPanelUI();\n    }\n}\nPanelDynamicAddBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicAddBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicAddBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelDynamicAddBtn, selector: \"sv-ng-paneldynamic-add-btn\", usesInheritance: true, ngImport: i0, template: \"<button type=\\\"button\\\" *ngIf=\\\"question.canAddPanel\\\" [class]=\\\"question.getAddButtonCss()\\\" (click)=\\\"addPanelClick()\\\">\\n<span [class]=\\\"question.cssClasses.buttonAddText\\\"><sv-ng-string [model]=\\\"question.locPanelAddText\\\"></sv-ng-string></span>\\n</button>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicAddBtn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-add-btn\",\n                    templateUrl: \"./paneldynamic-add-btn.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-add-btn\", PanelDynamicAddBtn);\n\nclass PanelDynamicNextBtn extends PaneldynamicAction {\n    nextPanelClick() {\n        this.question.goToNextPanel();\n    }\n}\nPanelDynamicNextBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicNextBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicNextBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelDynamicNextBtn, selector: \"sv-ng-paneldynamic-next-btn\", usesInheritance: true, ngImport: i0, template: \"<div [attr.title]=\\\"question.panelNextText\\\" (click)=\\\"nextPanelClick()\\\" [class]=\\\"question.getNextButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicNextBtn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-next-btn\",\n                    templateUrl: \"./paneldynamic-next-btn.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-next-btn\", PanelDynamicNextBtn);\n\nclass PanelDynamicPrevBtn extends PaneldynamicAction {\n    prevPanelClick() {\n        this.question.goToPrevPanel();\n    }\n}\nPanelDynamicPrevBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicPrevBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicPrevBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelDynamicPrevBtn, selector: \"sv-ng-paneldynamic-prev-btn\", usesInheritance: true, ngImport: i0, template: \"<div [attr.title]=\\\"question.panelPrevText\\\" (click)=\\\"prevPanelClick()\\\" [class]=\\\"question.getPrevButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\\n\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicPrevBtn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-prev-btn\",\n                    templateUrl: \"./paneldynamic-prev-btn.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-prev-btn\", PanelDynamicPrevBtn);\n\nclass PaneldynamicRemoveButtonComponent extends PaneldynamicAction {\n    get panel() {\n        return (this.data ? this.data : this.model.data).panel;\n    }\n}\nPaneldynamicRemoveButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PaneldynamicRemoveButtonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPaneldynamicRemoveButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PaneldynamicRemoveButtonComponent, selector: \"sv-ng-paneldynamic-remove-btn\", usesInheritance: true, ngImport: i0, template: \"<button type=\\\"button\\\" (click)=\\\"question.removePanelUI(panel)\\\" [class]=\\\"question.getPanelRemoveButtonCss()\\\"> \\n  <span [class]=\\\"question.cssClasses.buttonRemoveText\\\"><sv-ng-string [model]=\\\"question.locPanelRemoveText\\\"></sv-ng-string></span>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\\n\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PaneldynamicRemoveButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-remove-btn\",\n                    templateUrl: \"./paneldynamic-remove-btn.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-remove-btn\", PaneldynamicRemoveButtonComponent);\n\nclass PanelDynamicProgressText extends PaneldynamicAction {\n}\nPanelDynamicProgressText.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicProgressText, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicProgressText.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelDynamicProgressText, selector: \"sv-ng-paneldynamic-progress-text\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"question.cssClasses.progressText\\\">{{ question.progressText }}</div>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicProgressText, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-progress-text\",\n                    templateUrl: \"./paneldynamic-progress-text.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-progress-text\", PanelDynamicProgressText);\n\nclass PanelDynamicQuestionComponent extends QuestionAngular {\n    trackPanelBy(_, panel) {\n        return panel.id;\n    }\n    onModelChanged() {\n        super.onModelChanged();\n        this.model.panelCountChangedCallback = () => {\n            this.update();\n        };\n        this.model.currentIndexChangedCallback = () => {\n            this.update();\n        };\n        this.model.renderModeChangedCallback = () => {\n            this.update();\n        };\n    }\n    get progressCssClass() {\n        return this.model.isProgressTopShowing\n            ? this.model.cssClasses.progressTop\n            : this.model.cssClasses.progressBottom;\n    }\n    ngOnDestroy() {\n        this.model.panelCountChangedCallback = () => { };\n        this.model.currentIndexChangedCallback = () => { };\n        this.model.renderModeChangedCallback = () => { };\n        super.ngOnDestroy();\n    }\n    getPanelComponentName(panel) {\n        const survey = this.surveyModel;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(panel);\n            if (!!name) {\n                return name;\n            }\n        }\n        return \"panel\";\n    }\n    getPanelComponentData(panel) {\n        const survey = this.surveyModel;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(panel);\n        }\n        return {\n            componentName: \"panel\",\n            componentData: {\n                model: panel,\n                data: data\n            }\n        };\n    }\n}\nPanelDynamicQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: PanelDynamicQuestionComponent, selector: \"sv-ng-paneldynamic-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <div *ngIf=\\\"model.getShowNoEntriesPlaceholder()\\\" [class]=\\\"model.cssClasses.noEntriesPlaceholder\\\">\\n    <span [model]=\\\"model.locNoEntriesText\\\" sv-ng-string></span>\\n    <sv-ng-paneldynamic-add-btn *ngIf=\\\"model.canAddPanel\\\" [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  </div>\\n  <div [class]=\\\"model.cssClasses.progress\\\"\\n    *ngIf=\\\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\\\">\\n    <div [class]=\\\"model.cssClasses.progressBar\\\" [style]=\\\"{ width: model.progress }\\\" role=\\\"progressbar\\\"></div>\\n  </div>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\"\\n    *ngIf=\\\"model.showLegacyNavigation && model.isProgressTopShowing\\\"></ng-container>\\n  <div [class]=\\\"model.cssClasses.panelsContainer\\\">\\n    <ng-container *ngFor=\\\"let panel of model.renderedPanels; index as index; trackBy: trackPanelBy\\\">\\n      <div [class]=\\\"model.getPanelWrapperCss(panel)\\\">\\n        <ng-template\\n          [component]=\\\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\\\"></ng-template>\\n        <ng-container\\n          *ngIf=\\\"model.panelRemoveButtonLocation ==='right' && model.canRemovePanel && panel.state != 'collapsed'\\\">\\n          <ng-template\\n            [component]=\\\"{ name: 'sv-paneldynamic-remove-btn', data: { data: { panel, question: model }}}\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n      <hr [class]=\\\"model.cssClasses.separator\\\" *ngIf=\\\"model.showSeparator(index)\\\" />\\n    </ng-container>\\n  </div>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\"\\n    *ngIf=\\\"model.showLegacyNavigation && model.isProgressBottomShowing\\\"></ng-container>\\n  <sv-ng-paneldynamic-add-btn *ngIf=\\\"model.showLegacyNavigation && model.isRenderModeList\\\"\\n    [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  <ng-container [ngTemplateOutlet]=\\\"progressV2\\\" *ngIf=\\\"model.showNavigation\\\"></ng-container>\\n</div>\\n\\n<ng-template #progressV2>\\n  <div [class]=\\\"model.cssClasses.footer\\\" *ngIf=\\\"!!model.cssClasses.footer\\\">\\n    <hr [class]=\\\"model.cssClasses.separator\\\" />\\n    <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing && model.isProgressBottomShowing\\\">\\n      <div [class]=\\\"model.cssClasses.progressBar\\\" [style]=\\\"{ width: model.progress }\\\" role=\\\"progressbar\\\"></div>\\n    </div>\\n    <div *ngIf=\\\"model.footerToolbar.visibleActions.length\\\" [class]=\\\"model.cssClasses.footerButtonsContainer\\\">\\n      <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #progress>\\n  <div [class]=\\\"this.progressCssClass\\\">\\n    <div style=\\\"clear: both\\\" [class]=\\\"this.progressCssClass\\\">\\n      <div [class]=\\\"model.cssClasses.progressContainer\\\">\\n        <sv-ng-paneldynamic-prev-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-prev-btn>\\n        <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing\\\">\\n          <div [class]=\\\"model.cssClasses.progressBar\\\" [style]=\\\"{ width: model.progress }\\\" role=\\\"progressbar\\\"></div>\\n        </div>\\n        <sv-ng-paneldynamic-next-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-next-btn>\\n      </div>\\n      <sv-ng-paneldynamic-add-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n      <sv-ng-paneldynamic-progress-text [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-progress-text>\\n    </div>\\n  </div>\\n</ng-template>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: PanelDynamicAddBtn, selector: \"sv-ng-paneldynamic-add-btn\" }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: PanelDynamicPrevBtn, selector: \"sv-ng-paneldynamic-prev-btn\" }, { type: PanelDynamicNextBtn, selector: \"sv-ng-paneldynamic-next-btn\" }, { type: PanelDynamicProgressText, selector: \"sv-ng-paneldynamic-progress-text\" }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PanelDynamicQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-paneldynamic-question\",\n                    templateUrl: \"./paneldynamic.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"paneldynamic-question\", PanelDynamicQuestionComponent);\n\nclass TemplateRendererComponent extends EmbeddedViewContentComponent {\n}\nTemplateRendererComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TemplateRendererComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTemplateRendererComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: TemplateRendererComponent, selector: \"sv-template-renderer\", inputs: { componentName: \"componentName\", componentData: \"componentData\", contentTempl: \"contentTempl\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!!componentName\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!componentName && contentTempl\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentTempl\\\"></ng-container>\\n  </ng-container>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: TemplateRendererComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-template-renderer\",\n                    templateUrl: \"./template-renderer.component.html\",\n                    styleUrls: [\"./hide-host.scss\"]\n                }]\n        }], propDecorators: { componentName: [{\n                type: Input\n            }], componentData: [{\n                type: Input\n            }], contentTempl: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(SurveyModel.TemplateRendererComponentName, TemplateRendererComponent);\n\nclass CustomWidgetComponent {\n    get hasDefaultRender() {\n        return this.model.customWidget.isDefaultRender || this.hasAngularComponent;\n    }\n    get hasHtml() {\n        return this.model.customWidget.htmlTemplate ? true : false;\n    }\n    get customHtml() {\n        return this.model.customWidget.htmlTemplate;\n    }\n    get hasAngularComponent() {\n        return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);\n    }\n    get componentName() {\n        if (this.hasAngularComponent)\n            return this.model.customWidget.name;\n        return this.model.getTemplate() + \"-question\";\n    }\n    ngAfterViewInit() {\n        this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n    }\n    ngOnChanges(simpleChanges) {\n        if (simpleChanges[\"model\"].previousValue !== undefined && simpleChanges[\"model\"].currentValue !== undefined) {\n            this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        this.model.customWidget.willUnmount(this.model, this.container.nativeElement);\n    }\n}\nCustomWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CustomWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCustomWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CustomWidgetComponent, selector: \"sv-ng-custom-widget\", inputs: { css: \"css\", model: \"model\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"content\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div #content>\\n  <div *ngIf=\\\"hasHtml\\\" [innerHTML]=\\\"customHtml | safeHtml\\\"></div>\\n  <ng-container *ngIf=\\\"hasDefaultRender\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: { model: model, css: css } }\\\"></ng-template>  \\n  </ng-container>\\n</div>\", directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }], pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CustomWidgetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"./customwidget.component.html\",\n                    selector: \"sv-ng-custom-widget\"\n                }]\n        }], propDecorators: { css: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"content\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"survey-customwidget\", CustomWidgetComponent);\n\nclass MatrixCellComponent extends BaseAngular {\n    getModel() {\n        return this.row.item;\n    }\n    onChange() {\n        this.cellChangedOwner.onCellChanged(this.row, this.column);\n    }\n}\nMatrixCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixCellComponent, selector: \"sv-ng-matrix-cell, '[sv-ng-matrix-cell]'\", inputs: { question: \"question\", column: \"column\", row: \"row\", columnIndex: \"columnIndex\", cellChangedOwner: \"cellChangedOwner\" }, usesInheritance: true, ngImport: i0, template: \"<label (mousedown)=\\\"question.onMouseDown()\\\" [class]=\\\"question.getItemClass(row, column)\\\">\\n  <input\\n    type=\\\"radio\\\"\\n    [class]=\\\"question.cssClasses.itemValue\\\"\\n    [name]=\\\"row.fullName\\\"\\n    [value]=\\\"column.value\\\"\\n    [checked]=\\\"row.value === column.value\\\"\\n    [readonly]=\\\"row.isReadOnlyAttr\\\"\\n    [disabled]=\\\"row.isDisabledAttr\\\"\\n    [attr.id]=\\\"question.inputId + '_' + row.name + '_' + columnIndex\\\"\\n    (change)=\\\"onChange()\\\"\\n    [attr.aria-required]=\\\"question.a11y_input_ariaRequired\\\"\\n    [attr.aria-label]=\\\"question.getCellAriaLabel(row.locText.renderedHtml, column.locText.renderedHtml)\\\"\\n    [attr.aria-invalid]=\\\"question.a11y_input_ariaInvalid\\\"\\n    [attr.aria-errormessage]=\\\"question.a11y_input_ariaErrormessage\\\"\\n  />\\n  <span [class]=\\\"question.cssClasses.materialDecorator\\\">\\n    <svg *ngIf=\\\"question.itemSvgIcon\\\" [class]=\\\"question.cssClasses.itemDecorator\\\">\\n      <use [attr.xlink:href]=\\\"question.itemSvgIcon\\\"></use>\\n    </svg> \\n  </span>\\n  <span *ngIf=\\\"question.isMobile\\\" [class]=\\\"question.cssClasses.cellResponsiveTitle\\\" [model]=\\\"column.locText\\\" sv-ng-string></span>\\n</label>\\n<ng-content></ng-content>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-cell, '[sv-ng-matrix-cell]'\",\n                    templateUrl: \"./matrixcell.component.html\"\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], columnIndex: [{\n                type: Input\n            }], cellChangedOwner: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"survey-matrix-cell\", MatrixCellComponent);\n\nclass MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {\n    get question() {\n        return this.model.data.question;\n    }\n}\nMatrixDynamicDragDropIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicDragDropIconComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicDragDropIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDynamicDragDropIconComponent, selector: \"sv-ng-matrix-drag-drop-icon\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <svg *ngIf=\\\"question.iconDragElement\\\" [class]=\\\"question.cssClasses.dragElementDecorator\\\">\\n    <use [attr.xlink:href]=\\\"question.iconDragElement\\\"></use>\\n  </svg>\\n  <span *ngIf=\\\"!question.iconDragElement\\\" data-bind=\\\"css: question.cssClasses.iconDrag\\\"></span>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicDragDropIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    templateUrl: \"drag-drop-icon.component.html\",\n                    selector: \"sv-ng-matrix-drag-drop-icon\",\n                    styleUrls: [\"../../../hide-host.scss\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-drag-drop-icon\", MatrixDynamicDragDropIconComponent);\n\nclass MatrixDropdownCellComponent extends BaseAngular {\n    getModel() {\n        if (this.cell.hasQuestion) {\n            return this.cell.question;\n        }\n        if (!!this.cell.column) {\n            return this.cell.column;\n        }\n        return null;\n    }\n    get row() {\n        return this.cell.row;\n    }\n    ngDoCheck() {\n        var _a;\n        super.ngDoCheck();\n        if (this.cell.isErrorsCell && ((_a = this.cell) === null || _a === void 0 ? void 0 : _a.question)) {\n            this.cell.question.registerFunctionOnPropertyValueChanged(\"errors\", () => {\n                this.update();\n            }, \"__ngSubscription\");\n        }\n    }\n    get panelComponentName() {\n        const panel = this.cell.panel;\n        const survey = panel.survey;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(panel);\n            if (!!name) {\n                return name;\n            }\n        }\n        return \"panel\";\n    }\n    get panelComponentData() {\n        const panel = this.cell.panel;\n        const survey = panel.survey;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(panel);\n        }\n        return {\n            componentName: \"panel\",\n            componentData: {\n                model: panel,\n                data: data\n            }\n        };\n    }\n    getComponentName(element) { return getComponentName(element); }\n    getCellStyle() {\n        if (!!this.cell.width || !!this.cell.minWidth)\n            return { width: this.cell.width, minWidth: this.cell.minWidth };\n        return null;\n    }\n    get isRequiredCell() {\n        return !!this.cell.column && this.cell.column.isRenderedRequired;\n    }\n    ngAfterViewInit() {\n        if (!this.cell.hasQuestion || !this.question || !this.question.survey)\n            return;\n        const el = this.cellContainer.nativeElement;\n        const cellQ = this.cell.question;\n        var options = {\n            cell: this.cell.cell,\n            cellQuestion: cellQ,\n            htmlElement: el,\n            row: this.cell.row,\n            column: this.cell.cell.column,\n        };\n        this.question.survey.matrixAfterCellRender(this.question, options);\n        cellQ.afterRenderCore(el);\n    }\n    ngOnDestroy() {\n        var _a;\n        super.ngOnDestroy();\n        if (this.cell.isErrorsCell && ((_a = this.cell) === null || _a === void 0 ? void 0 : _a.question)) {\n            this.cell.question.unRegisterFunctionOnPropertyValueChanged(\"errors\", \"__ngSubscription\");\n        }\n    }\n    get canRender() {\n        return this.question && this.question.survey;\n    }\n}\nMatrixDropdownCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDropdownCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDropdownCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDropdownCellComponent, selector: \"sv-ng-matrixdropdown-cell\", inputs: { question: \"question\", cell: \"cell\" }, viewQueries: [{ propertyName: \"cellContainer\", first: true, predicate: [\"cellContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <td [class]=\\\"cell.className\\\" *ngIf=\\\"canRender\\\" [title]=\\\"cell.getTitle()\\\"\\n    [style]=\\\"getCellStyle()\\\" [attr.colspan]=\\\"cell.colSpans\\\" (focusin)=\\\"cell.focusIn()\\\" #cellContainer>\\n    <sv-ng-matrix-drag-drop-icon *ngIf=\\\"cell.isDragHandlerCell\\\"\\n      [model]=\\\"$any({ data: { row: row, question: question } })\\\"></sv-ng-matrix-drag-drop-icon>\\n    <sv-action-bar *ngIf=\\\"cell.isActionsCell\\\" [model]=\\\"cell.item.getData()\\\" [handleClick]=\\\"false\\\"></sv-action-bar>\\n    <ng-container *ngIf=\\\"cell.hasPanel\\\">\\n      <ng-template [component]=\\\"{ name: panelComponentName, data: panelComponentData }\\\"></ng-template>\\n    </ng-container>\\n    <div *ngIf=\\\"cell.isErrorsCell && cell.question?.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" sv-ng-errors></div>\\n    <span *ngIf=\\\"cell.showResponsiveTitle\\\" [class]=\\\"cell.responsiveTitleCss\\\" [model]=\\\"cell.responsiveLocTitle\\\" sv-ng-string></span>\\n    <div *ngIf=\\\"cell.hasQuestion\\\" [class]=\\\"cell.cellQuestionWrapperClassName\\\"\\n      [visible]=\\\"cell.question.isVisible\\\">\\n      <ng-container *ngIf=\\\"!cell.isChoice && cell.question.isDefaultRendering()\\\">\\n        <ng-template\\n          [component]=\\\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\\\">\\n          <ng-template\\n            [component]=\\\"{ name: getComponentName(cell.question), data: { model: cell.question } }\\\"></ng-template>\\n        </ng-template>\\n      </ng-container>\\n      <ng-template *ngIf=\\\"!cell.isChoice && !cell.question.isDefaultRendering()\\\"\\n        [component]=\\\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\\\">\\n      </ng-template>\\n      <ng-container *ngIf=\\\"cell.isItemChoice\\\">\\n        <ng-template\\n          [component]=\\\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\\\">\\n          <sv-ng-selebase-item [showLabel]=\\\"false\\\" [inputType]=\\\"cell.isCheckbox ? 'checkbox': 'radio'\\\"\\n            [question]=\\\"cell.question\\\" [model]=\\\"cell.item\\\"></sv-ng-selebase-item>\\n        </ng-template>\\n      </ng-container>\\n      <div *ngIf=\\\"cell.isOtherChoice\\\" [class]=\\\"cell.question.getCommentAreaCss(true)\\\" [question]=\\\"cell.question\\\"\\n        sv-ng-comment-other></div>\\n    </div>\\n    <ng-container *ngIf=\\\"cell.hasTitle\\\">\\n      <ng-template\\n        [component]=\\\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\\\">\\n        <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n        <span *ngIf=\\\"isRequiredCell\\\" [class]=\\\"question.cssClasses.cellRequiredText\\\">{{ cell.requiredText }}</span>\\n      </ng-template>\\n    </ng-container>\\n  </td>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: MatrixDynamicDragDropIconComponent, selector: \"sv-ng-matrix-drag-drop-icon\", inputs: [\"model\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SelectBaseItemComponent, selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\", inputs: [\"question\", \"model\", \"inputType\", \"showLabel\"] }, { type: SurveyCommentOtherComponent, selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\", inputs: [\"question\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDropdownCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrixdropdown-cell\",\n                    templateUrl: \"./matrixdropdowncell.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], cell: [{\n                type: Input\n            }], cellContainer: [{\n                type: ViewChild,\n                args: [\"cellContainer\"]\n            }] } });\n\nclass MatrixRequiredHeader extends BaseAngular {\n    getModel() {\n        return this.column;\n    }\n}\nMatrixRequiredHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixRequiredHeader, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixRequiredHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixRequiredHeader, selector: \"sv-ng-matrixheaderrequired\", inputs: { column: \"column\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template><ng-container *ngIf='column.isRenderedRequired'><span>&nbsp;</span><span [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-container></ng-template>\", isInline: true, styles: [\":host { display: none; }\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixRequiredHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrixheaderrequired\",\n                    styles: [\":host { display: none; }\"],\n                    template: \"<ng-template #template><ng-container *ngIf='column.isRenderedRequired'><span>&nbsp;</span><span [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-container></ng-template>\"\n                }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\n\nclass MatrixRowComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get row() {\n        return this.model.row;\n    }\n    trackCellBy(_, cell) {\n        return cell.id;\n    }\n    onModelChanged() {\n        var _a;\n        super.onModelChanged();\n        if (this.previousModel) {\n            this.previousModel.setRootElement(undefined);\n        }\n        if (this.model && ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.setRootElement(this.container.nativeElement);\n        }\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (this.model && ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n            this.model.setRootElement(this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.setRootElement(undefined);\n    }\n}\nMatrixRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixRowComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixRowComponent, selector: \"sv-ng-matrix-row\", inputs: { model: \"model\", question: \"question\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <tr *ngIf=\\\"model.visible\\\" [class]=\\\"model.className\\\" (pointerdown)=\\\"question.onPointerDown($event, row)\\\"\\n    [attr.data-sv-drop-target-matrix-row]=\\\"row && row.id\\\" #container>\\n    <sv-ng-matrixdropdown-cell [cell]=\\\"cell\\\" [question]=\\\"question\\\"\\n      *ngFor=\\\"let cell of model.cells; trackBy: trackCellBy\\\"></sv-ng-matrixdropdown-cell>\\n  </tr>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: MatrixDropdownCellComponent, selector: \"sv-ng-matrixdropdown-cell\", inputs: [\"question\", \"cell\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-row\",\n                    templateUrl: \"./matrix-row.component.html\",\n                    styles: [\":host { display: none; }\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\", { static: false, read: ElementRef }]\n            }] } });\n\nclass MatrixTableComponent extends BaseAngular {\n    getModel() {\n        return this.table;\n    }\n    trackCellBy(_, cell) {\n        return cell.id;\n    }\n    trackRowBy(index, row) {\n        return row.id;\n    }\n}\nMatrixTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixTableComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: { question: \"question\", table: \"table\" }, usesInheritance: true, ngImport: i0, template: \"<div [style]=\\\"{ overflowX: question.showHorizontalScroll ? 'scroll' : '' }\\\" #contentElement\\n  [class]=\\\"question.cssClasses.tableWrapper\\\">\\n  <table [class]=\\\"question.getTableCss()\\\">\\n    <thead *ngIf=\\\"table.showHeader\\\">\\n      <tr>\\n        <ng-container *ngFor=\\\"let cell of table.headerRow.cells; trackBy: trackCellBy\\\">\\n          <th *ngIf=\\\"cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\">\\n            <ng-template\\n              [component]=\\\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\\\">\\n              <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n              <sv-ng-matrixheaderrequired *ngIf=\\\"!!cell.column\\\" [column]=\\\"cell.column\\\" [question]=\\\"question\\\">\\n              </sv-ng-matrixheaderrequired>\\n            </ng-template>\\n          </th>\\n\\n          <td *ngIf=\\\"!cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\">\\n          </td>\\n        </ng-container>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <ng-container *ngFor=\\\"let row of table.renderedRows; trackBy: trackRowBy\\\">\\n        <sv-ng-matrix-row [model]=\\\"row\\\" [question]=\\\"question\\\"></sv-ng-matrix-row>\\n      </ng-container>\\n    </tbody>\\n    <tfoot *ngIf=\\\"table.showFooter\\\">\\n      <tr>\\n        <sv-ng-matrixdropdown-cell [cell]=\\\"cell\\\" [question]=\\\"question\\\"\\n          *ngFor=\\\"let cell of table.footerRow.cells; trackBy: trackCellBy\\\">\\n        </sv-ng-matrixdropdown-cell>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: MatrixRequiredHeader, selector: \"sv-ng-matrixheaderrequired\", inputs: [\"column\", \"question\"] }, { type: MatrixRowComponent, selector: \"sv-ng-matrix-row\", inputs: [\"model\", \"question\"] }, { type: MatrixDropdownCellComponent, selector: \"sv-ng-matrixdropdown-cell\", inputs: [\"question\", \"cell\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixTableComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-table\",\n                    templateUrl: \"./matrixtable.component.html\"\n                }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], table: [{\n                type: Input\n            }] } });\n\nclass MatrixDropdownComponent extends QuestionAngular {\n}\nMatrixDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDropdownComponent, selector: \"sv-ng-matrixdropdown-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n</ng-template>\", components: [{ type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: [\"question\", \"table\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDropdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrixdropdown-question\",\n                    templateUrl: \"./matrixdropdown.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrixdropdown-question\", MatrixDropdownComponent);\n\nclass MatrixDynamicComponent extends QuestionAngular {\n}\nMatrixDynamicComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDynamicComponent, selector: \"sv-ng-matrixdynamic-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div #contentElement>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnTop\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n    <div *ngIf=\\\"!model.renderedTable.showTable\\\" [class]=\\\"model.cssClasses.emptyRowsSection\\\">\\n      <div [class]=\\\"model.cssClasses.emptyRowsText\\\" [model]=\\\"model.locEmptyRowsText\\\" sv-ng-string></div>\\n      <ng-container *ngIf=\\\"model.renderedTable.showAddRow\\\">\\n        <ng-container  *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n      </ng-container>\\n    </div>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnBottom\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n  </div>\\n  <ng-template #addRowButton>\\n    <button type=\\\"button\\\" [class]=\\\"model.getAddRowButtonCss(true)\\\" (click)=\\\"model.addRowUI()\\\">\\n        <sv-ng-string [model]=\\\"model.locAddRowText\\\" ></sv-ng-string>\\n        <span [class]=\\\"model.cssClasses.iconAdd\\\"></span>\\n    </button>\\n  </ng-template>\\n</ng-template>\", components: [{ type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: [\"question\", \"table\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrixdynamic-question\",\n                    templateUrl: \"./matrixdynamic.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrixdynamic-question\", MatrixDynamicComponent);\n\nclass MatrixDynamicRemoveButtonComponent {\n    get question() {\n        return this.model.data.question;\n    }\n    get row() {\n        return this.model.data.row;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nMatrixDynamicRemoveButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicRemoveButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDynamicRemoveButtonComponent, selector: \"sv-ng-matrix-remove-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<button type=\\\"button\\\" [class]=\\\"question.getRemoveRowButtonCss()\\\" [disabled]=\\\"question.isInputReadOnly\\\" (click)=\\\"question.removeRowUI(row)\\\">\\n  <sv-ng-string [model]=\\\"question.locRemoveRowText\\\" ></sv-ng-string>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-remove-btn\",\n                    templateUrl: \"./remove-button.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-remove-button\", MatrixDynamicRemoveButtonComponent);\n\nclass MatrixDetailButtonComponent {\n    get question() {\n        return this.model.data.question;\n    }\n    get row() {\n        return this.model.data.row;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nMatrixDetailButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDetailButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatrixDetailButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: MatrixDetailButtonComponent, selector: \"sv-ng-matrix-detail-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<button type=\\\"button\\\" [class]=\\\"question.getDetailPanelButtonCss(row)\\\" (click)=\\\"row.showHideDetailPanelClick()\\\"\\n  [attr.aria-expanded]=\\\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\\\"\\n  [attr.aria-controls]=\\\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\\\">\\n  <svg [class]=\\\"this.question.getDetailPanelIconCss(this.row)\\\" \\n    [iconName]=\\\"this.question.getDetailPanelIconId(this.row)\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon>\\n  </svg>\\n</button>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: MatrixDetailButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrix-detail-btn\",\n                    templateUrl: \"./detail-button.component.html\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-detail-button\", MatrixDetailButtonComponent);\n\nclass ExpressionComponent extends QuestionAngular {\n}\nExpressionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ExpressionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nExpressionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ExpressionComponent, selector: \"sv-ng-expression\", usesInheritance: true, ngImport: i0, template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ExpressionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-expression\",\n                    template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"expression-question\", ExpressionComponent);\n\nclass ImageQuestionComponent extends QuestionAngular {\n    ngAfterViewInit() {\n        this.model.locImageLink.onChanged = () => {\n            this.detectChanges();\n        };\n        super.ngAfterViewInit();\n    }\n    ngOnDestroy() {\n        this.model.locImageLink.onChanged = () => { };\n        super.ngOnDestroy();\n    }\n}\nImageQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImageQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImageQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: ImageQuestionComponent, selector: \"sv-ng-image-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <img\\n    *ngIf=\\\"model.renderedMode === 'image'\\\"\\n    [visible]=\\\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.alt]=\\\"model.altText || model.title\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\\\"\\n    (load)=\\\"model.onLoadHandler()\\\"\\n    (error)=\\\"model.onErrorHandler()\\\"\\n  /><video\\n    controls\\n    *ngIf=\\\"model.renderedMode === 'video'\\\"\\n    [visible]=\\\"!!model.locImageLink.renderedHtml && !model.contentNotLoaded\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\\\"\\n    (loadedmetadata)=\\\"model.onLoadHandler()\\\"\\n    (error)=\\\"model.onErrorHandler()\\\"\\n  ></video>\\n  <iframe\\n    *ngIf=\\\"model.renderedMode === 'youtube'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml | safeResourceUrl\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit,  width: model.renderedStyleWidth, height: model.renderedStyleHeight }\\\"\\n    ></iframe>\\n    <div *ngIf=\\\"!model.locImageLink.renderedHtml || model.contentNotLoaded\\\" [class]=\\\"model.cssClasses.noImage\\\">\\n      <svg [iconName]=\\\"model.cssClasses.noImageSvgIconId\\\" [size]=\\\"48\\\" sv-ng-svg-icon></svg>\\n    </div>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }], pipes: { \"safeResourceUrl\": SafeResourceUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: ImageQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-image-question\",\n                    templateUrl: \"./image.component.html\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"image-question\", ImageQuestionComponent);\n\nclass QuestionErrorComponent {\n}\nQuestionErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nQuestionErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: QuestionErrorComponent, selector: \"sv-question-error\", inputs: { error: \"error\", cssClasses: \"cssClasses\", element: \"element\" }, ngImport: i0, template: \"<div>\\n  <span\\n    [class]=\\\"cssClasses ? cssClasses.error.icon : 'panel-error-icon'\\\"\\n    aria-hidden=\\\"true\\\"\\n  ></span>\\n  <span [class]=\\\"cssClasses ? cssClasses.error.item : 'panel-error-item'\\\" [model]=\\\"error.locText\\\" sv-ng-string>\\n  </span>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: QuestionErrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-question-error\",\n                    templateUrl: \"./question-error.component.html\"\n                }]\n        }], propDecorators: { error: [{\n                type: Input\n            }], cssClasses: [{\n                type: Input\n            }], element: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-question-error\", QuestionErrorComponent);\n\nclass CustomQuestionComponent extends QuestionAngular {\n    get contentQuestion() {\n        return this.model.contentQuestion;\n    }\n    getComponentName(element) { return getComponentName(element); }\n}\nCustomQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CustomQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCustomQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CustomQuestionComponent, selector: \"sv-ng-custom-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\", isInline: true, directives: [{ type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CustomQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-custom-question\",\n                    template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"custom-question\", CustomQuestionComponent);\n\nclass CompositeQuestionComponent extends QuestionAngular {\n    get contentPanel() {\n        return this.model.contentPanel;\n    }\n}\nCompositeQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CompositeQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCompositeQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CompositeQuestionComponent, selector: \"sv-ng-composite-question\", usesInheritance: true, ngImport: i0, template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\", isInline: true, components: [{ type: PanelComponent, selector: \"sv-ng-panel, '[sv-ng-panel]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CompositeQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-composite-question\",\n                    template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"composite-question\", CompositeQuestionComponent);\n\nclass HeaderCellComponent extends EmbeddedViewContentComponent {\n}\nHeaderCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeaderCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: HeaderCellComponent, selector: \"sv-ng-header-cell\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"actionContent\", first: true, predicate: [\"actionContent\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: \"\\n<ng-template #template>\\n  <div [class]=\\\"model.css\\\" [style]=\\\"model.style\\\">\\n    <div class=\\\"sv-header__cell-content\\\" [style]=\\\"model.contentStyle\\\">\\n      <div *ngIf=\\\"model.showLogo\\\" class=\\\"sv-header__logo\\\">\\n        <div [class]=\\\"model.survey.logoClassNames\\\">\\n          <ng-template [component]=\\\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\\\"></ng-template>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"model.showTitle\\\" class=\\\"sv-header__title\\\" [style]=\\\"{ maxWidth: model.textAreaWidth }\\\">\\n        <sv-ng-element-title [element]=\\\"model.survey\\\"></sv-ng-element-title>\\n      </div>\\n      <div *ngIf=\\\"model.showDescription\\\" class=\\\"sv-header__description\\\" [style]=\\\"{ maxWidth: model.textAreaWidth }\\\">\\n        <div *ngIf=\\\"model.survey.renderedHasDescription\\\" [class]=\\\"model.survey.css.description\\\" [model]=\\\"model.survey.locDescription\\\" sv-ng-string></div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-header-cell\",\n                    templateUrl: \"./header-cell.component.html\",\n                    styles: [\":host { display: none; }\"],\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], actionContent: [{\n                type: ViewChild,\n                args: [\"actionContent\", { read: ViewContainerRef, static: true }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderCellComponent);\n\nclass HeaderMobileComponent extends EmbeddedViewContentComponent {\n}\nHeaderMobileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderMobileComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeaderMobileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: HeaderMobileComponent, selector: \"sv-ng-header-mobile\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"actionContent\", first: true, predicate: [\"actionContent\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: \"\\n<ng-template #template>\\n  <div class=\\\"sv-header--mobile\\\">\\n    <div *ngIf=\\\"model.survey.hasLogo\\\" class=\\\"sv-header__logo\\\">\\n      <div [class]=\\\"model.survey.logoClassNames\\\">\\n        <ng-template [component]=\\\"{ name: model.survey.getElementWrapperComponentName(model.survey, 'logo-image'), data: { data: model.survey.getElementWrapperComponentData(model.survey, 'logo-image') } }\\\"></ng-template>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"model.survey.hasTitle\\\" class=\\\"sv-header__title\\\" [style]=\\\"{ maxWidth: model.renderedtextAreaWidth }\\\">\\n      <sv-ng-element-title [element]=\\\"model.survey\\\"></sv-ng-element-title>\\n    </div>\\n    <div *ngIf=\\\"model.survey.renderedHasDescription\\\" class=\\\"sv-header__description\\\" [style]=\\\"{ maxWidth: model.renderedtextAreaWidth }\\\">\\n      <div *ngIf=\\\"model.survey.renderedHasDescription\\\" [class]=\\\"model.survey.css.description\\\" [model]=\\\"model.survey.locDescription\\\" sv-ng-string></div>\\n    </div>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none; }\"], components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderMobileComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-header-mobile\",\n                    templateUrl: \"./header-mobile.component.html\",\n                    styles: [\":host { display: none; }\"],\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], actionContent: [{\n                type: ViewChild,\n                args: [\"actionContent\", { read: ViewContainerRef, static: true }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-header-cell\", HeaderMobileComponent);\n\nclass HeaderComponent extends BaseAngular {\n    getModel() {\n        this.model.survey = this.survey;\n        return this.model;\n    }\n}\nHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: HeaderComponent, selector: \"sv-header, sv-ng-header\", inputs: { model: \"model\", survey: \"survey\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"(survey.headerView === 'advanced')\\\" [class]=\\\"model.headerClasses\\\" [style]=\\\"{ height: model.renderedHeight }\\\">\\n    <div *ngIf=\\\"!!model.backgroundImage\\\" [style]=\\\"model.backgroundImageStyle\\\" [class]=\\\"model.backgroundImageClasses\\\"></div>\\n    <div *ngIf=\\\"!survey.isMobile\\\" [class]=\\\"model.contentClasses\\\" [style.width]=\\\"model.maxWidth\\\">\\n      <ng-container *ngFor=\\\"let cell of model.cells\\\">\\n        <sv-ng-header-cell [model]=\\\"cell\\\"></sv-ng-header-cell>\\n      </ng-container>\\n    </div>\\n    <div *ngIf=\\\"survey.isMobile\\\">\\n      <sv-ng-header-mobile [model]=\\\"model\\\"></sv-ng-header-mobile>\\n    </div>\\n  </div>\\n</ng-template>\", styles: [\":host { display: none }\"], components: [{ type: HeaderCellComponent, selector: \"sv-ng-header-cell\", inputs: [\"model\"] }, { type: HeaderMobileComponent, selector: \"sv-ng-header-mobile\", inputs: [\"model\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: HeaderComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-header, sv-ng-header\",\n                    templateUrl: \"./header.component.html\",\n                    styles: [\":host { display: none }\"]\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], survey: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-header\", HeaderComponent);\n\nclass SurveyModule {\n}\nSurveyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSurveyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyModule, declarations: [VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n        CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n        RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, ProgressTocComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n        MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent, QuestionErrorComponent,\n        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n        NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, ChooseFileBtn, FilePreviewComponent, SvgBundleComponent], imports: [CommonModule, FormsModule], exports: [VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n        CharacterCounterComponent,\n        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n        CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n        RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n        MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n        NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, FilePreviewComponent, SvgBundleComponent] });\nSurveyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyModule, providers: [PopupService], imports: [[\n            CommonModule, FormsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SurveyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n                        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n                        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n                        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n                        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n                        CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n                        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n                        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n                        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n                        RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n                        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, ProgressTocComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n                        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n                        MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n                        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent, QuestionErrorComponent,\n                        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n                        NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, ChooseFileBtn, FilePreviewComponent, SvgBundleComponent\n                    ],\n                    imports: [\n                        CommonModule, FormsModule\n                    ],\n                    exports: [\n                        VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n                        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n                        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n                        CharacterCounterComponent,\n                        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n                        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n                        CharacterCounterComponent, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n                        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n                        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n                        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n                        RatingQuestionComponent, RatingDropdownItemComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n                        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n                        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, RankingItemContentComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent,\n                        MatrixCellComponent, MatrixDropdownCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n                        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n                        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n                        NotifierComponent, ComponentsContainerComponent, MultipleTextRowComponent, LoadingIndicatorComponent, HeaderComponent, HeaderCellComponent, HeaderMobileComponent, FilePreviewComponent, SvgBundleComponent\n                    ],\n                    providers: [PopupService],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionBarComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, ActionComponent, AngularComponentFactory, BaseAngular, BooleanCheckboxComponent, BooleanQuestionComponent, BooleanRadioComponent, BooleanRadioItemComponent, BrandInfoComponent, ButtonGroupQuestionComponent, CharacterCounterComponent, CheckboxComponent, CheckboxItemComponent, CommentQuestionComponent, ComponentsContainerComponent, CompositeQuestionComponent, CustomQuestionComponent, CustomWidgetComponent, DropdownComponent, DropdownOptionItemComponent, DropdownQuestionComponent, DropdownSelectComponent, DynamicComponentDirective, DynamicHeadComponent, ElementComponent, ElementHeaderComponent, ElementTitleComponent, EmbeddedViewContentComponent, ErrorsComponent, ExpressionComponent, FilePreviewComponent, FileQuestionComponent, HeaderCellComponent, HeaderComponent, HeaderMobileComponent, HtmlQuestionComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent, Key2ClickDirective, ListComponent, ListItemComponent, ListItemContentComponent, ListItemGroupComponent, LoadingIndicatorComponent, LogoImageComponent, MatrixCellComponent, MatrixDetailButtonComponent, MatrixDropdownCellComponent, MatrixDropdownComponent, MatrixDynamicComponent, MatrixDynamicDragDropIconComponent, MatrixDynamicRemoveButtonComponent, MatrixQuestionComponent, MatrixRequiredHeader, MatrixTableComponent, ModalComponent, MultipleTextComponent, MultipleTextItemComponent, MultipleTextRowComponent, NotifierComponent, PageComponent, PanelComponent, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, PanelDynamicQuestionComponent, PaneldynamicAction, PaneldynamicRemoveButtonComponent, PopupBaseContainerComponent, PopupComponent, PopupPointerComponent, PopupService, PopupSurveyComponent, ProgressButtonsComponent, ProgressDefaultComponent, ProgressTocComponent, QuestionAngular, QuestionComponent, QuestionErrorComponent, QuestionSkeletonComponent, RadiogroupComponent, RadiogroupItemComponent, RankingItemComponent, RankingItemContentComponent, RankingQuestionComponent, RatingDropdownComponent, RatingDropdownItemComponent, RatingItemComponent, RatingItemSmileyComponent, RatingItemStarComponent, RatingQuestionComponent, RowComponent, SafeHtmlPipe, SafeResourceUrlPipe, SafeUrlPipe, SelectBaseComponent, SelectBaseItemComponent, SignaturePadQuestionComponent, SkeletonComponent, StringEditorComponent, StringViewerComponent, SurveyCommentComponent, SurveyCommentOtherComponent, SurveyComponent, SurveyContentComponent, SurveyHeaderComponent, SurveyModule, SurveyNavigationButton, SurveyStringComponent, SvgBundleComponent, SvgIconComponent, TagboxComponent, TagboxFilterComponent, TagboxItemComponent, TagboxQuestionComponent, TemplateRendererComponent, TextQuestionComponent, TimerPanelComponent, VisibleDirective, getComponentName };\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    generateNewQuestion,\n    Question,\n    QuestionComponent,\n} from '@placeos/survey-suite';\n\n@Component({\n    selector: 'mod-question-overlay',\n    styles: [],\n    template: `\n        <header class=\"flex items-center justify-between px-2 w-full\">\n            <h2 class=\"px-2\">{{ isEdit ? 'Update' : 'Add' }} Question</h2>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main mat-dialog-content class=\"min-w-[40rem] overflow-x-hidden\">\n            <section>\n                <placeos-question\n                    #questionElement\n                    [value]=\"question\"\n                ></placeos-question>\n            </section>\n        </main>\n        <div\n            class=\"flex flex-row justify-end space-x-2 px-4 py-2\"\n            mat-dialog-actions\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!questionElement.valid\"\n                (click)=\"done()\"\n            >\n                {{ isEdit ? 'Update' : 'Add to bank' }}\n            </button>\n        </div>\n    `,\n})\nexport class ModQuestionOverlayComponent implements OnInit {\n    @ViewChild('questionElement') questionElement: QuestionComponent;\n\n    isEdit: boolean = false;\n    question: Question;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: Question,\n        private _dialog_ref: MatDialogRef<ModQuestionOverlayComponent>\n    ) {\n        this.isEdit = !!(this._data?.id > 0);\n        this.question = this._data || generateNewQuestion();\n    }\n\n    ngOnInit(): void {}\n\n    public done() {\n        this._dialog_ref.close(this.question);\n    }\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    Question,\n    translateToQuestion,\n    translateToSurveyQuestion,\n} from '@placeos/survey-suite';\nimport {\n    addQuestion,\n    queryQuestions,\n    removeQuestion,\n    SurveyQuestion,\n} from '@placeos/ts-client';\nimport { updateQuestion } from '@placeos/ts-client/dist/esm/staff/questions/functions';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, filter, finalize, first, map, tap } from 'rxjs/operators';\nimport { ModQuestionOverlayComponent } from '../overlays/mod-question-overlay.component';\n\nexport interface QuestionFilter {\n    search: string;\n    type: string;\n}\n\n@Injectable()\nexport class QuestionBankService extends AsyncHandler {\n    private readonly _questions = new BehaviorSubject<Question[]>([]);\n    readonly questions$ = this._questions.asObservable();\n    private get questions() {\n        return this._questions.getValue();\n    }\n    private set questions(value: Question[]) {\n        this._questions.next(value);\n    }\n\n    private readonly _withdrawnQuestions = new BehaviorSubject<Question[]>([]);\n    public readonly withdrawnQuestions$ =\n        this._withdrawnQuestions.asObservable();\n    private set withdrawnQuestions(value: Question[]) {\n        this._withdrawnQuestions.next(value);\n    }\n    private get withdrawnQuestions() {\n        return this._withdrawnQuestions.getValue();\n    }\n\n    private readonly _loading = new BehaviorSubject<string>('');\n    readonly loading$ = this._loading.asObservable();\n    private get loading() {\n        return this._loading.getValue();\n    }\n    private set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _filter = new BehaviorSubject<QuestionFilter>({\n        search: '',\n        type: '',\n    });\n    readonly filter$ = this._filter.asObservable();\n\n    public filteredQuestions$ = combineLatest([\n        this.questions$,\n        this.withdrawnQuestions$,\n        this.filter$,\n    ]).pipe(\n        map(([questions, active, filter]) => {\n            if (!questions) return [];\n            const activeIds = active.map((e) => e.id);\n            const { search, type } = filter;\n            return questions\n                .filter((e) => !activeIds.includes(e.id))\n                .filter((e) => (type?.length ? e.type === type : true))\n                .filter((e) => e.title.includes(search))\n                .filter((e) => !e.deleted)\n        }),\n        tap((q) => (this.filteredQuestions = q))\n    );\n    private filteredQuestions = [];\n\n    constructor(private _dialog: MatDialog) {\n        super();\n        this.loadQuestions();\n    }\n\n    public resetTransaction(){\n        this.withdrawnQuestions = [];\n        this._filter.next({\n            search: '',\n            type: '',\n        });\n    }\n\n    public setFilter(filter: Partial<QuestionFilter>) {\n        this._filter.next({\n            ...this._filter.getValue(),\n            ...filter,\n        });\n    }\n\n    public getQuestion(index: number) {\n        return this.filteredQuestions[index];\n    }\n\n    public withdrawFilteredQuestion(index: number) {\n        const q = this.filteredQuestions[index];\n        this.withdrawnQuestions = [...this.withdrawnQuestions, q];\n        return q;\n    }\n\n    public setWithdrawnQuestions(list: Question[]) {\n        this.withdrawnQuestions = [...list];\n    }\n\n    public depositQuestions(list: Question[]) {\n        let withdrawn = [...this.withdrawnQuestions];\n        list.forEach((q) => {\n            const idx = withdrawn.findIndex((e) => e.id === q.id);\n            if (idx > -1) withdrawn.splice(idx, 1);\n        });\n        this.withdrawnQuestions = withdrawn;\n    }\n\n    public onDrop(event: CdkDragDrop<Question[]>) {\n        const { container, previousContainer, previousIndex, currentIndex } =\n            event;\n        if (container !== previousContainer) {\n            //Dropped from survey\n            const q = previousContainer.data.splice(previousIndex, 1);\n            this.depositQuestions(q);\n        }\n    }\n\n    public async confirmDeleteQuestion(q: Question) {\n        if (!q) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete question',\n                content: `Are you sure you want to delete this question? \\n \n                            <pre>'${q.title}'</pre> \\n\n                            Note: This action is irreversible.`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        this.deleteQuestion(q);\n    }\n\n    public modQuestionOverlay(question?: Question, isEdit?:boolean) {\n        const ref = this._dialog.open(ModQuestionOverlayComponent, {\n            data: question,\n        });\n\n        this.subscription(\n            'mod dialog',\n            ref\n                .afterClosed()\n                .pipe(filter((result) => !!result))\n                .subscribe((result) => {\n                    isEdit? this.editQuestion(result) : this.saveQuestion(result);\n                })\n        );\n    }\n\n    private async deleteQuestion(question: Question) {\n        this.loading = 'Deleting question from bank...';\n        const res = await removeQuestion(`${question.id}`)\n            .pipe(\n                first(),\n                tap(() => this.removeQuestionFromStore(question)),\n                catchError((err) =>\n                    this.handleError('Error deleting question', null)\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n    }\n\n    private async loadQuestions() {\n        this.loading = 'Loading questions';\n        const q = (await queryQuestions()\n            .pipe(\n                first(),\n                map(\n                    (res: SurveyQuestion[]) =>\n                        res?.map((e) => translateToQuestion(e)) || []\n                ),\n                catchError((err) =>\n                    this.handleError('Error loading questions', [])\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise()) as Question[];\n        this.questions = q;\n    }\n\n    private async saveQuestion(question: Question) {\n        this.loading = 'Saving question to bank...';\n        const res: Question = (await addQuestion(\n            translateToSurveyQuestion(question)\n        )\n            .pipe(\n                first(),\n                map((res) => translateToQuestion(res)),\n                catchError((err) =>\n                    this.handleError('Error adding question', null)\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise()) as Question;\n        if (res) {\n            notifySuccess('Successfully added question to bank');\n            this.addQuestionToStore(res);\n        }\n    }\n\n    private async editQuestion(question: Question){\n        this.loading = 'Updating question...';\n        const res: Question = (await updateQuestion(`${question.id}`, translateToSurveyQuestion(question)).pipe(\n            first(),\n            map((res) => translateToQuestion(res)),\n            catchError((err) =>\n                this.handleError('Error updating question', null)\n            ),\n            finalize(() => (this.loading = ''))\n        ).toPromise()) as Question;\n        if(res?.id === question.id){\n            this.updateQuestionInStore(res);\n        }else{\n            this.addQuestionToStore(res);\n            this.markQuestionDeletedInStore(question.id);\n        }\n    }\n\n    private handleError(msg: string, defaultReturn: any) {\n        notifyError(msg);\n        return defaultReturn;\n    }\n\n    private removeQuestionFromStore(q: Question) {\n        let qs = [...this.questions];\n        let idx = qs.findIndex((e) => e.id === q.id);\n        if (idx > -1) qs.splice(idx, 1);\n        this.questions = qs;\n    }\n\n    private addQuestionToStore(q: Question) {\n        let qs = [...this.questions];\n        qs.push(q);\n        this.questions = qs;\n    }\n\n    private updateQuestionInStore(q: Question){\n        let qs = [...this.questions];\n        const idx = qs.findIndex(e =>  e.id === q.id);\n        if(idx > -1){\n            qs[idx] = q;\n            this.questions = qs;\n        }\n    }\n\n    private markQuestionDeletedInStore(qid: number){\n        let qs = [...this.questions];\n        const idx = qs.findIndex(e =>  e.id === qid);\n        if(idx > -1){\n            qs[idx].deleted = true;\n            this.questions = qs;\n        }\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'search-input',\n    styles: [],\n    template: `\n        <mat-form-field\n            appearance=\"outline\"\n            subscriptSizing=\"dynamic\"\n            class=\"w-full {{ classNames ? classNames : '' }} \"\n        >\n            <app-icon matPrefix class=\"-ml-3 mr-1\">search</app-icon>\n            <input\n                matInput\n                #searchInput\n                autocomplete=\"off\"\n                type=\"text\"\n                [placeholder]=\"placeholder\"\n                [(ngModel)]=\"search\"\n            />\n            <button\n                *ngIf=\"searchInput.value?.length\"\n                class=\"sm text-xs\"\n                matSuffix\n                icon\n                matRipple\n                aria-label=\"Clear\"\n                (click)=\"clearSearch()\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </mat-form-field>\n    `,\n})\nexport class SearchInputComponent\n    extends AsyncHandler\n    implements AfterViewInit\n{\n    @Input() placeholder: string = '';\n    @Input() classNames: string = '';\n    @Input() search: string = '';\n    @Output() onSearch: EventEmitter<string> = new EventEmitter<string>();\n    @ViewChild('searchInput', { static: true }) input: ElementRef;\n\n    search$: Observable<string>;\n\n    constructor() {\n        super();\n    }\n\n    clearSearch() {\n        this.input.nativeElement.value = '';\n        this.onSearch.emit('');\n    }\n\n    ngAfterViewInit() {\n        this.search$ = fromEvent<any>(this.input.nativeElement, 'keyup').pipe(\n            map((event) => event.target.value),\n            debounceTime(500),\n            distinctUntilChanged()\n        );\n        this.subscription(\n            'search-input',\n            this.search$.subscribe((value) => this.onSearch.emit(value))\n        );\n    }\n}\n","<div class=\"flex flex-col w-full h-full bg-base-200 border-l relative\">\n    <div\n        *ngIf=\"(loading$ | async).length\"\n        class=\"flex absolute inset-0 opacity-60 bg-base-100 z-10\"\n    >\n        <div class=\"flex flex-col m-auto items-center\">\n            <mat-spinner [diameter]=\"32\"></mat-spinner>\n            <span>{{ loading$ | async }}</span>\n        </div>\n    </div>\n    <header class=\"flex items-center pt-2 px-4 w-full\">\n        <span>Question Bank</span>\n        <div class=\"ml-auto\">\n            <button icon matRipple (click)=\"onAddQuestion()\">\n                <app-icon>add_circle_outline</app-icon>\n            </button>\n        </div>\n    </header>\n    <div class=\"flex w-full pb-3 px-4 border-b space-x-2\">\n        <search-input\n            class=\"flex-1\"\n            (onSearch)=\"setFilter({ search: $event })\"\n        ></search-input>\n        <mat-form-field\n            class=\"w-44\"\n            appearance=\"outline\"\n            subscriptSizing=\"dynamic\"\n        >\n            <mat-select\n                [value]=\"(filters$ | async)?.type || ''\"\n                (selectionChange)=\"setFilter({ type: $event.value })\"\n            >\n                <mat-option value=\"\">All types</mat-option>\n                <mat-option\n                    *ngFor=\"let item of typeOptions\"\n                    [value]=\"item.value\"\n                >\n                    {{ item.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div\n        cdkDropList\n        [cdkDropListData]=\"questions$ | async\"\n        (cdkDropListDropped)=\"onDrop($event)\"\n        class=\"flex flex-col min-h-0 h-full w-full space-y-3 p-4 overflow-y-auto\"\n    >\n        <div\n            cdkDrag\n            *ngFor=\"let q of questions$ | async\"\n            class=\"bg-base-100 border flex w-full items-center pr-2 space-x-3\"\n        >\n            <div\n                cdkDragHandle\n                class=\"flex flex-col justify-center h-full hover:cursor-move p-1 bg-base-200\"\n            >\n                <app-icon>drag_indicator</app-icon>\n            </div>\n            <div class=\"flex flex-col w-full py-3\">\n                <span>{{ q.title }}</span>\n                <span class=\"text-sm text-gray-600\">{{ typeMap[q.type] }}</span>\n            </div>\n            <button icon matRipple [matMenuTriggerFor]=\"actionsMenu\">\n                <app-icon>more_vert</app-icon>\n            </button>\n            <mat-menu #actionsMenu=\"matMenu\">\n                <button mat-menu-item (click)=\"onAddQuestion(q)\">\n                    <app-icon>content_copy</app-icon>\n                    <span>Duplicate</span>\n                </button>\n                <button mat-menu-item (click)=\"onEditQuestion(q)\">\n                    <app-icon>edit</app-icon>\n                    <span>Edit</span>\n                </button>\n                <button mat-menu-item (click)=\"onDeleteQuestion(q)\">\n                    <app-icon>delete</app-icon>\n                    <span>Delete</span>\n                </button>\n            </mat-menu>\n        </div>\n        <div *ngIf=\"(questions$ | async)?.length > 0; else noQuestions\"></div>\n    </div>\n</div>\n<ng-template #noQuestions>\n    <div class=\"flex flex-col items-center h-20 m-auto text-gray-600\">\n        <span>No questions found</span>\n        <span>Click <i>Add</i> to add some questions.</span>\n    </div>\n</ng-template>\n","import { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport { Component } from \"@angular/core\";\nimport { Question, QuestionTypeEnumMap, QuestionTypeOptions } from \"@placeos/survey-suite\";\nimport { shareReplay } from \"rxjs/operators\";\nimport { QuestionBankService, QuestionFilter } from \"../../services/question-bank.service\";\n\n@Component({\n    selector: 'question-bank',\n    styles: [`\n        :host{\n            height: 100%;\n        }\n    `],\n    templateUrl: './question-bank.component.html'\n})\nexport class QuestionBankComponent {\n\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n    questions$ = this.service.filteredQuestions$.pipe(shareReplay(1));\n    filters$ = this.service.filter$.pipe(shareReplay(1));\n    onDrop = (event: CdkDragDrop<Question[]>) => this.service.onDrop(event);\n    onAddQuestion = (q?:Question) => this.service.modQuestionOverlay(q ? {...q, id:0} : null);\n    onEditQuestion = (q:Question) => this.service.modQuestionOverlay(q, true);\n    onDeleteQuestion = (q:Question) => this.service.confirmDeleteQuestion(q);\n    setFilter = (filter: Partial<QuestionFilter>) => this.service.setFilter(filter);\n    \n    public typeOptions = QuestionTypeOptions;\n    public typeMap = QuestionTypeEnumMap;\n\n    constructor(\n        private service: QuestionBankService\n    ){\n    }\n\n}","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { openConfirmModal, SettingsService } from '@placeos/common';\nimport { Question, UISurveyObj, UISurveyPage } from '@placeos/survey-suite';\nimport { Model } from 'survey-core';\nimport { QuestionBankService } from './question-bank.service';\n\n@Injectable()\nexport class SurveyBuilderService {\n    public selectedPageIndex: number = 0;\n    protected survey: UISurveyObj;\n    protected surveyModel: Model;\n\n    constructor(\n        private bank: QuestionBankService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n    }\n\n    public get selectedPage() {\n        return this.survey?.pages[this.selectedPageIndex];\n    }\n\n    public async setUISurvey(survey: UISurveyObj) {\n        this.bank.resetTransaction();\n        if (!survey) return;\n        this.survey = survey;\n        const { pages } = survey;\n        if (pages?.length > 0) {\n            let questions = [];\n            pages.forEach((p) => {\n                questions = [...questions, ...(p.elements || [])];\n            });\n            if (questions.length > 0)\n                this.bank.setWithdrawnQuestions(questions);\n        }\n    }\n\n    public getUISurvey() {\n        return this.survey;\n    }\n\n    public addSurveyPage() {\n        if (!this.survey) return;\n        let pages = this.survey.pages || [];\n        pages.push({\n            title: '',\n            elements: [],\n        });\n        this.survey.pages = pages;\n        this.selectedPageIndex = pages.length - 1;\n    }\n\n    public async confirmDeletePage(index: number) {\n        if (index < 1) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete page',\n                content: `Are you sure you want to delete this page?\\n \n                          All marked-for-deletion questions will also be removed.`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        this.removeSurveyPage(index);\n    }\n\n    public async removeQuestionFromSurvey(index: number) {\n        const q = this.selectedPage.elements[index];\n        if(q?.deleted){\n            const details = await openConfirmModal(\n                {\n                    title: 'Question marked for deletion',\n                    content: `This question has been marked for deletion.\\n \n                                You will not be able to add this question back after removing it from the survey.\\n \n                                Are you sure you want to delete this question?`,\n                    icon: { class: 'material-icons', content: 'delete' },\n                },\n                this._dialog\n            );\n            \n            if (details.reason !== 'done') return;\n            details.close();\n        }\n        const target = this.selectedPage.elements.splice(index, 1);\n        this.bank.depositQuestions(target);\n    }\n\n    public onDropQuestionToSurvey(\n        event: CdkDragDrop<Question[]>,\n        p: UISurveyPage\n    ) {\n        if (!p) return;\n        const { previousIndex, previousContainer, currentIndex, container } =\n            event;\n        if (container !== previousContainer) {\n            //Dropped from question bank\n            const q = this.bank.withdrawFilteredQuestion(previousIndex);\n            p.elements.splice(currentIndex, 0, q);\n        } else {\n            //Reorder Question\n            const q = p.elements.splice(previousIndex, 1);\n            p.elements.splice(currentIndex, 0, q[0]);\n        }\n    }\n\n    public onPreview() {\n        const logo_data = this._settings.get('app.survey.logo');\n        let logo = {};\n        if (logo_data?.length) {\n            logo = {\n                logo: logo_data,\n                logoWidth: '200px',\n                logoPosition: 'right',\n            };\n        }\n        this.surveyModel = new Model({ ...logo, ...this.survey });\n    }\n\n    private removeSurveyPage(index: number) {\n        if (index === 0) return;\n        let pages = this.survey.pages || [];\n\n        /** Check if removed page has any questions and deposit them to bank */\n        const target = pages[index];\n        if (target?.elements?.length)\n            this.bank.depositQuestions(target.elements);\n\n        pages.splice(index, 1);\n        this.survey.pages = pages;\n        this.selectedPageIndex = 0;\n    }\n}\n","<div\n    *ngIf=\"survey\"\n    cdkDropListGroup\n    class=\"flex flex-col h-full w-full bg-base-100 overflow-y-auto\"\n>\n    <div class=\"flex flex-row items-center w-full space-x-4 px-4 pt-4 pb-2\">\n        <div class=\"flex flex-col w-1/2\">\n            <label for=\"title\">Title</label>\n            <mat-form-field\n                name=\"title\"\n                appearance=\"outline\"\n                subscriptSizing=\"dynamic\"\n            >\n                <input\n                    class=\"text-xl\"\n                    matInput\n                    required\n                    placeholder=\"Title...\"\n                    [(ngModel)]=\"survey.title\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"flex flex-col w-1/2\">\n            <label for=\"desc\">Description</label>\n            <mat-form-field\n                name=\"desc\"\n                appearance=\"outline\"\n                subscriptSizing=\"dynamic\"\n            >\n                <input\n                    matInput\n                    placeholder=\"Description...\"\n                    [(ngModel)]=\"survey.description\"\n                />\n            </mat-form-field>\n        </div>\n    </div>\n\n    <nav class=\"flex bg-base-200\" mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n        <a\n            mat-tab-link\n            (click)=\"switchView('design')\"\n            [active]=\"view === 'design'\"\n        >\n            Questions\n        </a>\n\n        <a\n            mat-tab-link\n            (click)=\"switchView('preview')\"\n            [active]=\"view === 'preview'\"\n        >\n            Preview\n        </a>\n    </nav>\n    <div\n        mat-tab-nav-panel\n        #tabPanel\n        class=\"flex min-h-0 h-full w-full bg-base-200\"\n    >\n        <div *ngIf=\"view === 'design'\" class=\"mt-0 flex min-h-0 h-full w-full\">\n            <div\n                class=\"flex flex-col h-full w-4/6 min-w-[43rem] space-y-3 overflow-y-auto\"\n            >\n                <div\n                    class=\"flex flex-row items-center justify-end w-full space-x-2 pr-2\"\n                >\n                    <nav\n                        class=\"max-w-xl\"\n                        mat-tab-nav-bar\n                        [tabPanel]=\"pagePanel\"\n                    >\n                        <a\n                            mat-tab-link\n                            class=\"rounded-b-md border-x\"\n                            *ngFor=\"let p of survey.pages; let k = index\"\n                            (click)=\"selectedPageIndex = k\"\n                            [active]=\"selectedPage === p\"\n                        >\n                            Page {{ k + 1 }}\n                        </a>\n                    </nav>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"addSurveyPage()\"\n                        title=\"Add new page\"\n                    >\n                        <app-icon>add_circle_outline</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col py-2 px-6 pt-0 w-full overflow-x-hidden\"\n                    #pagePanel\n                >\n                    <ng-container *ngIf=\"selectedPage\">\n                        <div\n                            class=\"flex flex-row items-center justify-end space-x-2 w-full mb-4\"\n                        >\n                            <mat-form-field\n                                class=\"flex-1\"\n                                [subscriptSizing]=\"'dynamic'\"\n                                appearance=\"fill\"\n                            >\n                                <input\n                                    matInput\n                                    placeholder=\"Page title...\"\n                                    type=\"text\"\n                                    [(ngModel)]=\"selectedPage.title\"\n                                />\n                            </mat-form-field>\n                            <button\n                                *ngIf=\"selectedPageIndex > 0\"\n                                mat-flat-button\n                                color=\"warn\"\n                                (click)=\"removeSurveyPage(selectedPageIndex)\"\n                            >\n                                Remove page\n                            </button>\n                        </div>\n                        <div\n                            cdkDropList\n                            [cdkDropListData]=\"selectedPage.elements\"\n                            (cdkDropListDropped)=\"onDrop($event, selectedPage)\"\n                            class=\"flex flex-col w-full space-y-3\"\n                        >\n                            <div\n                                cdkDrag\n                                *ngFor=\"\n                                    let q of selectedPage.elements;\n                                    let i = index\n                                \"\n                                class=\"flex flex-row rounded-md items-start w-full bg-base-200 py-1\"\n                            >\n                                <div class=\"flex flex-col px-2 h-full\">\n                                    <span class=\"text-lg\">{{ i + 1 }}</span>\n                                </div>\n                                <placeos-question\n                                    class=\"flex-1\"\n                                    [preview]=\"true\"\n                                    [value]=\"q\"\n                                >\n                                </placeos-question>\n                                <div\n                                    class=\"flex flex-col items-center h-full py-2\"\n                                >\n                                    <app-icon\n                                        cdkDragHandle\n                                        class=\"hover:cursor-move\"\n                                        >drag_indicator</app-icon\n                                    >\n                                    <button\n                                        class=\"mt-auto\"\n                                        icon\n                                        matRipple\n                                        (click)=\"onRemove(i)\"\n                                    >\n                                        <app-icon>{{\n                                            q.deleted\n                                                ? 'delete_forever'\n                                                : 'delete'\n                                        }}</app-icon>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div\n                                *ngIf=\"\n                                    selectedPage?.elements?.length > 0;\n                                    else noQuestion\n                                \"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"flex flex-col w-2/6\">\n                <question-bank class=\"w-full\"></question-bank>\n            </div>\n        </div>\n\n        <div\n            *ngIf=\"view === 'preview'\"\n            class=\"flex flex-col h-full w-full px-6 overflow-y-auto\"\n        >\n            <survey\n                *ngIf=\"service.surveyModel\"\n                [model]=\"service.surveyModel\"\n            ></survey>\n        </div>\n    </div>\n</div>\n\n<ng-template #noQuestion>\n    <div\n        class=\"flex flex-col m-auto h-52 justify-center space-y-2 text-gray-600\"\n    >\n        <img\n            src=\"assets/icons/dragdrop.svg\"\n            class=\"h-12\"\n            alt=\"Icon of drag and drop\"\n        />\n        <span>Drag and drop questions from the question bank here</span>\n    </div>\n</ng-template>\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Question, UISurveyPage } from '@placeos/survey-suite';\nimport { SurveyBuilderService } from '../../services/survey-builder.service';\n\n@Component({\n    selector: 'survey-builder',\n    templateUrl: './survey-builder.component.html',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                min-height: 0;\n            }\n        `,\n    ],\n})\nexport class SurveyBuilderComponent {\n    view: 'design' | 'preview' = 'design';\n    onDrop = (event: CdkDragDrop<Question[]>, p: UISurveyPage) =>\n        this.service.onDropQuestionToSurvey(event, p);\n    onRemove = (index: number) => this.service.removeQuestionFromSurvey(index);\n    addSurveyPage = () => this.service.addSurveyPage();\n    removeSurveyPage = (index: number) => this.service.confirmDeletePage(index);\n\n    constructor(public service: SurveyBuilderService) {}\n\n    get selectedPageIndex() {\n        return this.service.selectedPageIndex;\n    }\n\n    set selectedPageIndex(value: number) {\n        this.service.selectedPageIndex = value;\n    }\n\n    get selectedPage() {\n        return this.service.selectedPage;\n    }\n    get survey() {\n        return this.service.getUISurvey();\n    }\n\n    switchView(view: 'design' | 'preview') {\n        this.view = view;\n        if (view === 'preview') {\n            this.service.onPreview();\n        }\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        if (event.index === 1) {\n            this.service.onPreview();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    SettingsService,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    generateNewSurvey,\n    Question,\n    translateToQuestion,\n    translateToSurveyPage,\n    translateToUISurveyObj,\n    TriggerEnum,\n    UISurveyObj,\n} from '@placeos/survey-suite';\nimport {\n    queryQuestions,\n    showSurvey,\n    Survey,\n    addSurvey,\n    updateSurvey,\n    removeSurvey,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, finalize, first, map } from 'rxjs/operators';\nimport { SurveyBuilderService } from './survey-builder.service';\n\nexport interface SurveyOptions {\n    zone_id: string;\n    building_id: string;\n    trigger?: TriggerEnum;\n}\n\n@Injectable()\nexport class SurveyService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    public get loading() {\n        return this._loading.getValue();\n    }\n    public set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _options = new BehaviorSubject<SurveyOptions>({\n        zone_id: '',\n        building_id: '',\n        trigger: TriggerEnum.None,\n    });\n    public readonly _options$ = this._options.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private router: Router,\n        private builder: SurveyBuilderService,\n        private dialog: MatDialog\n    ) {}\n\n    public async loadSurvey(survey_id: string) {\n        if (!survey_id?.length) {\n            this.builder.setUISurvey(generateNewSurvey());\n            return;\n        }\n        const uiSurvey = await this.getSurveyDetails(survey_id);\n        if (!uiSurvey) return;\n\n        this.builder.setUISurvey(uiSurvey);\n        this.setOptions({\n            zone_id: uiSurvey.zone_id,\n            building_id: uiSurvey.building_id,\n            trigger: uiSurvey.trigger,\n        });\n    }\n\n    public async getSurveyDetails(survey_id: string) {\n        this.loading = 'Loading survey...';\n        const results = await Promise.all([\n            this.getSurvey(survey_id),\n            this.getSurveyQuestions(survey_id),\n        ]);\n        this.loading = '';\n        const [survey, questions] = results;\n        if (!survey) return null;\n        return translateToUISurveyObj(survey, questions);\n    }\n\n    public async confirmDeleteSurvey(id: number) {\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete question',\n                content: `Are you sure you want to delete this survey? \\n\n                            Note: This action is irreversible.`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this.dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        await this.deleteSurvey(id);\n    }\n\n    public saveSurvey() {\n        const survey = this.builder.getUISurvey();\n        if (!this.validateSurvey(survey)) return false;\n        const { id, title, description, pages } = survey;\n        const { zone_id, building_id, trigger } = this._options.getValue();\n        let toSave: Survey = {\n            id,\n            title,\n            description,\n            trigger,\n            zone_id: zone_id?.length ? zone_id : building_id,\n            building_id,\n            pages: translateToSurveyPage(pages),\n        };\n\n        if (id > 0) {\n            this.updateSurvey(toSave);\n        } else {\n            this.createSurvey(toSave);\n        }\n    }\n\n    public setOptions(options: Partial<SurveyOptions>) {\n        if (!options) return;\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public back() {\n        const building_id = this._options.getValue()?.building_id || '';\n        if (building_id?.length) {\n            this.router.navigate([\n                this._settings.get('app.default_route').includes('new')\n                    ? '/surveys/new'\n                    : '/surveys',\n                'survey-list',\n                building_id,\n            ]);\n        } else {\n            this.router.navigate([\n                this._settings.get('app.default_route').includes('new')\n                    ? '/surveys/new'\n                    : '/surveys',\n            ]);\n        }\n    }\n\n    private getSurvey(id: string): Promise<Survey> {\n        return showSurvey(id)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Error loading survey');\n                    return null;\n                })\n            )\n            .toPromise() as Promise<Survey>;\n    }\n\n    private getSurveyQuestions(survey_id: string) {\n        return queryQuestions({ survey_id })\n            .pipe(\n                first(),\n                map((questions) =>\n                    questions.map((e) => translateToQuestion(e))\n                ),\n                catchError((err) => {\n                    notifyError('Error loading survey questions');\n                    return [];\n                })\n            )\n            .toPromise() as Promise<Question[]>;\n    }\n\n    private validateSurvey(survey: UISurveyObj) {\n        const options = this._options.getValue();\n\n        if (!survey) {\n            notifyError('Survey is not valid');\n            return false;\n        }\n\n        if (!survey.title?.length) {\n            notifyError('Please enter a valid title for the survey');\n            return false;\n        }\n\n        if (!options.building_id?.length) {\n            notifyError('Please select a valid building for this survey');\n            return false;\n        }\n        let allQuestions = [];\n        survey.pages.forEach(\n            (p) => (allQuestions = [...allQuestions, ...p.elements])\n        );\n        if (allQuestions.length === 0) {\n            notifyError('Please add at least 1 question to any page');\n            return false;\n        }\n\n        return true;\n    }\n\n    private async deleteSurvey(id: number) {\n        this.loading = 'Deleting survey...';\n        const res = await removeSurvey(`${id}`)\n            .pipe(\n                first(),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) {\n            notifySuccess('Successfully deleted survey');\n        }\n    }\n\n    private async createSurvey(survey: Survey) {\n        this.loading = 'Adding survey...';\n        const res = await addSurvey(survey)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to create survey');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) {\n            notifySuccess('Survey created successfully');\n            this.back();\n        }\n    }\n\n    private async updateSurvey(survey: Survey) {\n        this.loading = 'Updating survey...';\n        const res = await updateSurvey(`${survey.id}`, survey)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to update survey');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) {\n            notifySuccess('Survey updated successfully');\n            this.back();\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { TriggerOptions } from '@placeos/survey-suite';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { SurveyOptions, SurveyService } from '../services/survey.service';\n\n@Component({\n    selector: 'survey-creator-topbar',\n    styles: [],\n    template: `\n        <div\n            class=\"flex flex-row items-center justify-between bg-base-100 px-4 w-full space-x-2\"\n        >\n            <div\n                class=\"flex flex-1 space-x-2 pt-2 w-[calc(100%-18rem)] max-w-[44rem] overflow-hidden\"\n            >\n                <div class=\"flex-1 w-1/4\">\n                    <label>Building</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full no-subscript\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).building_id\"\n                            (valueChange)=\"onBuildingChange($event)\"\n                        >\n                            <mat-option\n                                *ngFor=\"let b of buildings$ | async\"\n                                [value]=\"b.id\"\n                                >{{ b.display_name || b.name }}</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"flex-1 w-1/4\">\n                    <label>Level</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full no-subscript\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).zone_id\"\n                            (valueChange)=\"updateOptions({ zone_id: $event })\"\n                        >\n                            <mat-option\n                                [value]=\"(options$ | async).building_id\"\n                            >\n                                All Levels\n                            </mat-option>\n                            <mat-option\n                                *ngFor=\"let level of levels$ | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"flex-1 w-1/4\">\n                    <label>Trigger</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full no-subscript\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).trigger\"\n                            (valueChange)=\"updateOptions({ trigger: $event })\"\n                        >\n                            <mat-option\n                                *ngFor=\"let op of triggerOptions\"\n                                [value]=\"op.value\"\n                            >\n                                {{ op.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center ml-auto space-x-2 mt-8\">\n                <button btn matRipple class=\"inverse w-32\" (click)=\"onCancel()\">\n                    Cancel\n                </button>\n                <button btn matRipple class=\"w-32\" (click)=\"onSave()\">\n                    Save\n                </button>\n            </div>\n        </div>\n    `,\n})\nexport class SurveyCreatorTopbarComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    public selected_building = null;\n    public levels = [];\n    public readonly options$ = this._survey._options$.pipe(shareReplay(1));\n    public readonly buildings$ = this._org.building_list;\n    public readonly levels$ = combineLatest([\n        this.options$,\n        this._org.level_list,\n    ]).pipe(\n        map(([options, levels]) => {\n            const { building_id } = options;\n            if (!building_id?.length) return [];\n            return levels.filter((l) => l.parent_id === building_id);\n        })\n    );\n    public readonly triggerOptions = TriggerOptions;\n\n    updateOptions = (op: Partial<SurveyOptions>) => this._survey.setOptions(op);\n    onSave = () => this._survey.saveSurvey();\n    onCancel = () => this._survey.back();\n\n    constructor(\n        private _org: OrganisationService,\n        private _actRoute: ActivatedRoute,\n        private _survey: SurveyService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.subscription(\n            'query_params',\n            this._actRoute.queryParams.subscribe((qparams) => {\n                const id = qparams['building_id'];\n                if (id?.length) this.updateOptions({ building_id: id });\n            })\n        );\n    }\n\n    onBuildingChange(building_id: string) {\n        if (!building_id?.length) return;\n        this.doBuildingChange(building_id);\n    }\n\n    private doBuildingChange(building_id: string) {\n        if (!building_id?.length) return;\n        this.updateOptions({ zone_id: building_id, building_id });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { shareReplay } from 'rxjs/operators';\nimport { SurveyService } from '../services/survey.service';\n\n@Component({\n    selector: 'mod-survey',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n    template: `\n        <div\n            *ngIf=\"(loading$ | async).length\"\n            class=\"flex absolute inset-0 opacity-60 bg-base-100 z-10\"\n        >\n            <div class=\"flex flex-col m-auto items-center\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <span>{{ loading$ | async }}</span>\n            </div>\n        </div>\n        <survey-creator-topbar\n            class=\"flex flex-1 items-center\"\n        ></survey-creator-topbar>\n        <survey-builder></survey-builder>\n    `,\n})\nexport class ModSurveyComponent extends AsyncHandler implements OnInit {\n    loading$ = this._survey.loading$.pipe(shareReplay(1));\n\n    constructor(\n        private _survey: SurveyService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'route_param',\n            this._route.queryParams.subscribe((params) => {\n                const id = params?.survey_id || '';\n                this._survey.loadSurvey(id);\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { UISurveyObj } from '@placeos/survey-suite';\nimport { addAnswer, SurveyAnswer } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, filter, finalize, first } from 'rxjs/operators';\nimport { Model } from 'survey-core';\nimport { SurveyService } from './survey.service';\n\n@Injectable()\nexport class RunSurveyService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    public get loading() {\n        return this._loading.getValue();\n    }\n    public set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    surveyModel: Model;\n    uiSurvey: UISurveyObj;\n    constructor(\n        private _survey: SurveyService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async loadSurvey(survey_id: string) {\n        this.loading = 'Loading survey...';\n        const init = await this._org.initialised\n            .pipe(\n                filter((res) => !!res),\n                first()\n            )\n            .toPromise();\n        const uiSurvey = await this._survey.getSurveyDetails(survey_id);\n        this.loading = '';\n        if (!uiSurvey) return;\n        this.uiSurvey = uiSurvey;\n        this.surveyModel = new Model(this.generateSurveyModal(uiSurvey));\n        this.surveyModel.onComplete.add((sender: Model) => {\n            this.processSurveyAnswer(sender);\n        });\n    }\n\n    private generateSurveyModal(uiSurvey: UISurveyObj) {\n        const logo_data = this._settings.get('app.survey.logo');\n        let logo = {};\n        if (logo_data?.length) {\n            logo = {\n                logo: logo_data,\n                logoWidth: '200px',\n                logoPosition: 'right',\n            };\n        }\n        return { ...logo, ...uiSurvey };\n    }\n\n    private async processSurveyAnswer(survey: Model) {\n        const { id, pages } = this.uiSurvey;\n        const answersMap = survey.data;\n        let answers = [];\n        let questions = [];\n        pages.forEach(\n            (p) => (questions = [...questions, ...(p.elements || [])])\n        );\n        questions.forEach((q) => {\n            if (answersMap[q.id]) {\n                answers.push({\n                    question_id: q.id,\n                    type: q.type,\n                    survey_id: id,\n                    answer_json: answersMap[q.id],\n                });\n            }\n        });\n        this.saveSurveyAnswer(answers);\n    }\n\n    private async saveSurveyAnswer(answers: Partial<SurveyAnswer>[]) {\n        this.loading = 'Saving survey answers...';\n        const res = await addAnswer(answers as any)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to save survey answers');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) notifySuccess('Survey answers have been recorded');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { RunSurveyService } from '../services/run-survey.service';\n\n@Component({\n    selector: 'run-survey',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n    template: `\n        <main\n            class=\"flex flex-col min-h-0 h-full w-full bg-base-100 relative items-center pb-6 overflow-y-auto\"\n        >\n            <div\n                *ngIf=\"(loading$ | async).length\"\n                class=\"flex absolute inset-0 opacity-60 bg-base-100 z-10\"\n            >\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col w-full max-w-6xl\">\n                <survey [model]=\"service.surveyModel\"></survey>\n            </div>\n        </main>\n    `,\n    providers: [RunSurveyService],\n})\nexport class RunSurveyComponent extends AsyncHandler implements OnInit {\n    loading$ = this.service.loading$;\n    constructor(\n        private route: ActivatedRoute,\n        public service: RunSurveyService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'route-param',\n            this.route.params.subscribe((params) => {\n                const id = params?.id || '';\n                if (id?.length) {\n                    this.service.loadSurvey(id);\n                }\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SettingsService, notifyError } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { querySurveys, Survey } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, finalize, first, map, take, tap } from 'rxjs/operators';\nimport { SurveyService } from './survey.service';\n\n@Injectable()\nexport class SurveyListingsService {\n    building: Building;\n\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    private set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _trigger = new BehaviorSubject<number>(0);\n\n    private readonly _surveys = new BehaviorSubject<Survey[]>([]);\n    public readonly surveys$ = this._surveys.asObservable();\n    private set surveys(value: Survey[]) {\n        this._surveys.next(value);\n    }\n\n    private readonly _building_id = new BehaviorSubject<string>('');\n    public readonly building$ = combineLatest([\n        this.org.building_list,\n        this._building_id,\n    ]).pipe(map(([buildings, id]) => buildings.find((e) => e.id === id)));\n\n    public levelNameMap$ = combineLatest([\n        this.building$,\n        this.org.level_list,\n    ]).pipe(\n        map(([building, level_list]) => {\n            let map = {};\n            if (!building) return map;\n            map[building.id] = 'All Levels';\n            const levels = level_list.filter(\n                (lvl) => lvl.parent_id === building?.id\n            );\n            levels.forEach((e) => (map[e.id] = e.display_name || e.name));\n            return map;\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private router: Router,\n        private org: OrganisationService,\n        private survey: SurveyService\n    ) {}\n\n    public initBuilding(building_id: string) {\n        if (!building_id?.length) return;\n        this._building_id.next(building_id);\n        this.loadBuildingSurveys(building_id);\n    }\n\n    public reloadBuilding() {\n        const id = this._building_id.getValue();\n        this.loadBuildingSurveys(id);\n    }\n\n    public async deleteSurvey(id: number) {\n        await this.survey.confirmDeleteSurvey(id);\n        this.reloadBuilding();\n    }\n\n    public editSurvey(id: number) {\n        this.router.navigate(\n            [\n                this._settings.get('app.default_route').includes('new')\n                    ? '/surveys/new'\n                    : '/surveys',\n                'builder',\n            ],\n            {\n                queryParams: { survey_id: id },\n            }\n        );\n    }\n\n    public async newSurvey() {\n        const building = await this.building$.pipe(take(1)).toPromise();\n        this.router.navigate(\n            [\n                this._settings.get('app.default_route').includes('new')\n                    ? '/surveys/new'\n                    : '/surveys',\n                'builder',\n            ],\n            {\n                queryParams: { building_id: building?.id || '' },\n            }\n        );\n    }\n\n    public back() {\n        this.router.navigate([\n            this._settings.get('app.default_route').includes('new')\n                ? '/surveys/new'\n                : '/surveys',\n        ]);\n    }\n\n    private async loadBuildingSurveys(building_id: string) {\n        if (!building_id?.length) return;\n        this.loading = 'Loading surveys...';\n        const res = await querySurveys({ building_id })\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError(`Error loading surveys`);\n                    return [];\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        this.surveys = res.sort((a, b) =>\n            `${a.zone_id}`.localeCompare(b.zone_id)\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { TriggerEnumMap } from '@placeos/survey-suite';\nimport { shareReplay } from 'rxjs/operators';\nimport { SurveyListingsService } from '../services/survey-listings.service';\n\n@Component({\n    selector: 'survey-listings',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            .mat-column-actions {\n                width: 4rem;\n            }\n\n            .mat-column-trigger {\n                width: 12rem;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"flex items-center justify-between px-8 py-4 w-full\">\n            <div class=\"flex\">\n                <button icon matRipple (click)=\"back()\">\n                    <app-icon class=\"flex mr-2\">arrow_back</app-icon>\n                </button>\n                <div class=\"flex flex-col\">\n                    <span class=\"text-2xl\">Survey Listing </span>\n                    <span class=\"text-4xl\">{{\n                        (building$ | async)?.display_name || building_name\n                    }}</span>\n                </div>\n            </div>\n            <button btn matRipple class=\"space-x-2\" (click)=\"newSurvey()\">\n                <span class=\"ml-2\">Add New Survey</span>\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n        <div class=\"flex flex-1 h-1/2 w-full overflow-auto px-8\">\n            <simple-table\n                class=\"min-w-[36rem] w-full block text-sm\"\n                [data]=\"surveys$\"\n                [columns]=\"[\n                    { key: 'title', name: 'Title' },\n                    { key: 'zone_id', name: 'Level', content: level_template },\n                    {\n                        key: 'trigger',\n                        name: 'Trigger',\n                        content: trigger_template\n                    },\n                    { key: 'id', name: 'Link', show: false },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '3.5rem',\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n                empty_message=\"No surveys found. Click on <i>Add survey</i> to create new surveys for this building.\"\n            ></simple-table>\n        </div>\n        <ng-template #level_template let-data=\"data\">\n            <div class=\"p-4\">\n                {{ levelMap[data] || data }}\n            </div>\n        </ng-template>\n        <ng-template #trigger_template let-data=\"data\">\n            <div class=\"p-4\">\n                {{ data }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto p-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"actionsMenu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #actionsMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"onViewStats(row.id)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">analytics</app-icon>\n                            <span>Survey Responses</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"onEdit(row.id)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">edit</app-icon>\n                            <span>Edit Survey</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"onDelete(row.id)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-error text-xl\">\n                                delete\n                            </app-icon>\n                            <span>Delete Survey</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    providers: [SurveyListingsService],\n})\nexport class SurveyListingsComponent extends AsyncHandler implements OnInit {\n    levelMap = {};\n    loading$ = this._service.loading$.pipe(shareReplay(1));\n    building$ = this._service.building$.pipe(shareReplay(1));\n    surveys$ = this._service.surveys$;\n    triggerMap = TriggerEnumMap;\n    onEdit = (id: number) => this._service.editSurvey(id);\n    onDelete = (id: number) => this._service.deleteSurvey(id);\n    newSurvey = () => this._service.newSurvey();\n    back = () => this._service.back();\n    onViewStats = (id: number) =>\n        this._router.navigate([\n            this._settings.get('app.default_route').includes('new')\n                ? '/surveys/new'\n                : '/surveys',\n            'responses',\n            id,\n        ]);\n\n    displayedColumns: string[] = ['title', 'level', 'trigger', 'actions'];\n\n    constructor(\n        private _settings: SettingsService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: SurveyListingsService\n    ) {\n        super();\n    }\n\n    public get building_name() {\n        return (\n            this._service.building?.display_name ||\n            this._service.building?.name ||\n            ''\n        );\n    }\n\n    async ngOnInit() {\n        this.subscription(\n            'route-param',\n            this._route.params.subscribe((params) => {\n                const id = params.id || '';\n                this._service.initBuilding(id);\n            })\n        );\n\n        this.subscription(\n            'level_map',\n            this._service.levelNameMap$.subscribe(\n                (map) => (this.levelMap = map)\n            )\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport {\n    Question,\n    translateToQuestion,\n    UISurveyAnswer,\n    UISurveyResponse,\n} from '@placeos/survey-suite';\nimport {\n    queryAnswers,\n    queryQuestions,\n    showSurvey,\n    Survey,\n    SurveyQuestion,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, forkJoin, of, combineLatest } from 'rxjs';\nimport { catchError, filter, finalize, first, map, switchMap, tap } from 'rxjs/operators';\n\ninterface SurveyStats {\n    question_count: number;\n    answer_count: number;\n}\n\ninterface PagedSurveyResponse {\n    title: string;\n    responses: UISurveyResponse[];\n}\n\ninterface ResponseOptions{\n    survey_id: string;\n    start?: Date;\n    end?: Date; \n}\n\n@Injectable()\nexport class SurveyResponsesService {\n\n    /** Store for response options */\n    private _options = new BehaviorSubject<ResponseOptions>({\n        survey_id: null,\n        start: null,\n        end: null,\n    });\n    public readonly options$ = this._options.asObservable();\n    private set options(value: ResponseOptions){\n        this._options.next(value);\n    }\n\n    /** Store for load state */\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    private set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    /** Store for responses */\n    // private readonly _responses = new BehaviorSubject<UISurveyResponse[]>([]);\n    // public readonly responses$ = this._responses.asObservable();\n    // private set responses(value: UISurveyResponse[]) {\n    //     this._responses.next(value);\n    // }\n\n    private readonly _survey = new BehaviorSubject<Survey>(null);\n    public readonly survey$ = this._survey.asObservable();\n    private set survey(value: Survey) {\n        this._survey.next(value);\n    }\n\n    private readonly _stats = new BehaviorSubject<SurveyStats>({\n        question_count: 0,\n        answer_count: 0,\n    });\n    public readonly stats$ = this._stats.asObservable();\n    private set stats(value: SurveyStats) {\n        this._stats.next(value);\n    }\n\n    survey_responses$ = this.options$.pipe(\n        filter( options => !!options?.survey_id?.length),\n        switchMap(options => this.getSurveyResponses(options))\n    )\n\n    paged_responses$ = combineLatest([this.survey_responses$, this.survey$]).pipe(\n        map(([responses, survey]) => {\n            if(!responses.length) return [];\n            let resMap = {};\n            responses.forEach((e) => (resMap[e.question.id] = e));\n            let paged: PagedSurveyResponse[] = [];\n            survey.pages.forEach((p) => {\n                let t = { title: p.title, responses: [] };\n                p.question_order.forEach((q) => t.responses.push(resMap[q]));\n                paged.push(t);\n            });\n            return paged;\n        })\n    );\n\n    constructor() {}\n\n    public setOptions(options: Partial<ResponseOptions>){\n        this.options = {... this._options.getValue(), ...options};\n    }\n\n    private getSurveyResponses(options: ResponseOptions) {\n        this.loading = 'Loading survey responses';\n        const { survey_id, start, end} = options;\n        const created_after = start ? Math.floor(start.getTime() / 1000) : undefined;\n        const created_before = end ? Math.floor(end.getTime() / 1000) : undefined\n        return forkJoin([\n            queryQuestions({ survey_id}).pipe(\n                map(\n                    (res: SurveyQuestion[]) =>\n                        res?.map((e) => translateToQuestion(e)) || []\n                ),\n                catchError((err) =>\n                    this.handleError('Error loading survey questions')\n                )\n            ),\n            queryAnswers({ survey_id, created_after, created_before}).pipe(\n                catchError((err) =>\n                    this.handleError('Error loading survey answers')\n                )\n            ),\n            showSurvey(survey_id).pipe(\n                catchError((err) =>\n                    this.handleError('Error loading survey details')\n                )\n            ),\n        ])\n            .pipe(\n                first(),\n                tap(([questions, answers, survey]) => {\n                    this.survey = survey;\n                    this.stats = {\n                        question_count: questions.length,\n                        answer_count: answers.length,\n                    };\n                }),\n                map(([questions, answers]) => {\n                    if (!questions?.length || !answers?.length) return [];\n                    return this.sortQuestionsAnswers(questions, answers);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n    }\n\n    public sortQuestionsAnswers(\n        questions: Question[],\n        answers: UISurveyAnswer[]\n    ): UISurveyResponse[] {\n        let qhash = questions.reduce(\n            (map, obj) => ((map[obj.id] = { question: obj, answers: [] }), map),\n            {}\n        );\n        answers.forEach((e) => {\n            if (qhash[e.question_id]) {\n                qhash[e.question_id].answers.push(e);\n            }\n        });\n        return Object.values(qhash);\n    }\n\n    private handleError(msg: string, def_res: any = null) {\n        notifyError(msg);\n        return of(def_res);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Question, UISurveyAnswer } from '../types';\nimport { AsyncHandler } from '@placeos/common';\nimport { makeHTMLId } from '../helper';\n\n@Component({\n    selector: 'base-widget',\n    styles: [],\n    template: ``,\n})\nexport class BaseWidget extends AsyncHandler {\n    private readonly _data = new BehaviorSubject<UISurveyAnswer[]>([]);\n    public readonly data$ = this._data.asObservable();\n    private set data(value: UISurveyAnswer[]) {\n        this._data.next(value);\n    }\n\n    protected hasData: boolean = false;\n    protected widget_id: string;\n\n    @Input() question: Question;\n    @Input() set value(value: UISurveyAnswer[]) {\n        if (value) {\n            this.data = value;\n        }\n        this.hasData = !!value;\n    }\n\n    constructor() {\n        super();\n        this.widget_id = 'e-' + makeHTMLId(7);\n    }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\nimport { parseSelectionAnswers } from './survey-helper';\n\n@Component({\n    selector: 'selection-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                padding-bottom: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex flex-col min-h-0 max-h-[22rem] h-full w-full overflow-y-auto relative p-2\"\n        >\n            <div class=\"flex flex-1 justify-end mx-4\">\n                <span>{{ (data$ | async)?.length || 0 }} answers</span>\n            </div>\n            <ng-container *ngIf=\"chart_data$ | async as data\">\n                <div\n                    *ngFor=\"let d of data\"\n                    class=\"flex flex-1 mx-4 pt-2 pb-3 space-x-4\"\n                >\n                    <div class=\"flex flex-1 flex-col space-y-1\">\n                        <span>{{ d.name }}</span>\n                        <div class=\"progress-bar bg-base-200 h-1\">\n                            <span\n                                class=\"progress-bar-fill h-1 rounded-lg\"\n                                [ngClass]=\"{\n                                    'bg-error': d.percentage <= 25,\n                                    'bg-warning':\n                                        d.percentage > 25 && d.percentage <= 50,\n                                    'bg-info':\n                                        d.percentage > 50 && d.percentage <= 75,\n                                    'bg-success': d.percentage > 75\n                                }\"\n                                [ngStyle]=\"{ width: d.percentage + '%' }\"\n                            ></span>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center w-12\">\n                        <span class=\"text-2xl font-thin\">{{\n                            d.percentage / 100 | percent\n                        }}</span>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n})\nexport class SelectionWidgetComponent extends BaseWidget {\n    chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) =>\n            parseSelectionAnswers(\n                data,\n                this.question?.choices?.map((_) => _.text) || []\n            )\n        )\n    );\n\n    constructor() {\n        super();\n    }\n}\n","import { Data } from 'chartist';\nimport { QuestionType, UISurveyAnswer } from '../types';\n\nexport interface SelectionStats {\n    name: string;\n    count: number;\n    percentage: number;\n}\n\nexport function parseSelectionAnswers(\n    data: UISurveyAnswer[],\n    choices?: string[]\n): SelectionStats[] {\n    if (!data?.length) return [];\n    const type = data[0].type;\n    const total = data.length;\n    let map = {};\n    let list =\n        type === QuestionType.Check_Box\n            ? data.reduce((acc, curr) => acc.concat(curr.answer_json), [])\n            : data.reduce((acc, curr) => (acc.push(curr.answer_json), acc), []);\n\n    list.forEach((e) => {\n        if (!map[e]) {\n            map[e] = 1;\n            return;\n        }\n        map[e] += 1;\n    });\n    if (choices?.length) {\n        choices.forEach((e) => {\n            if (!map[e]) map[e] = 0;\n        });\n    }\n    const stats = Object.keys(map)\n        .map((key) => ({\n            name: key,\n            count: map[key],\n            percentage: Math.round((map[key] / total) * 1000) / 10,\n        }))\n        .sort((a, b) =>\n            a.percentage < b.percentage\n                ? 1\n                : a.percentage > b.percentage\n                ? -1\n                : 0\n        );\n    return stats;\n}\n\nexport function calcSelectionAnswers() {}\n\nexport function parseRatingAnswers(data: UISurveyAnswer[], rateMax: number) {\n    const list = data.reduce(\n        (acc, curr) => (acc.push(curr.answer_json), acc),\n        []\n    );\n    let arr = Array.from({ length: rateMax }, (_, i) => 0);\n    list.forEach((e) => {\n        arr[e-1] += 1;\n    });\n    const total = list.length;\n    arr.forEach((e, i) => (arr[i] = Math.round((e / total) * 1000) / 10));\n    return arr;\n}\n\nexport function parseRatingStats(data: UISurveyAnswer[], rateMax: number) {\n    const list = data.reduce(\n        (acc, curr) => (acc.push(curr.answer_json), acc),\n        []\n    );\n    const sum = list.reduce((acc, curr) => acc + curr);\n    const average = Math.round((sum / list.length) * 10) / 10;\n    const percentage = Math.round((average / rateMax) * 1000) / 10;\n    return { average, percentage, total: list.length };\n}\n","import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\nimport { parseRatingAnswers, parseRatingStats } from './survey-helper';\n\n@Component({\n    selector: 'ratings-widget',\n    styles: [\n        `\n            :host {\n                padding-bottom: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"chart_data$ | async as data\">\n            <div class=\"flex flex-row space-x-4 p-4\">\n                <div\n                    class=\"flex flex-col w-1/3 relative justify-center items-center space-y-4\"\n                >\n                    <ng-container *ngIf=\"stats$ | async as stats\">\n                        <div class=\"flex flex-row items-end\">\n                            <span class=\"text-6xl\"\n                                >{{ stats.average || 0 | number: '1.1' }}\n                            </span>\n                            <span class=\"font-thin\"\n                                >/ {{ maxRate | number: '1.1' }}</span\n                            >\n                        </div>\n\n                        <div class=\"progress-bar bg-base-200 h-5\">\n                            <span\n                                class=\"progress-bar-fill bg-warning h-5 rounded-lg\"\n                                [ngStyle]=\"{ width: stats.percentage + '%' }\"\n                            ></span>\n                        </div>\n                        <span>{{ stats.total }} ratings</span>\n                    </ng-container>\n                </div>\n                <div class=\"flex w-2/3 flex-col-reverse\">\n                    <div\n                        *ngFor=\"let d of data; let i = index\"\n                        class=\"flex flex-row w-full items-center space-x-4\"\n                    >\n                        <div class=\"w-3 flex justify-end\">\n                            <span> {{ i + 1 }}</span>\n                        </div>\n                        <div class=\"progress-bar bg-base-200 h-3\">\n                            <span\n                                class=\"progress-bar-fill bg-warning h-3\"\n                                [ngStyle]=\"{ width: d + '%' }\"\n                            ></span>\n                        </div>\n                        <div class=\"min-w-[1.5rem] flex justify-end\">\n                            <span> {{ d / 100 | percent }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    `,\n})\nexport class RatingsWidgetComponent extends BaseWidget {\n    public chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) => parseRatingAnswers(data, this.maxRate)),\n        shareReplay(1)\n    );\n\n    public stats$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) => parseRatingStats(data, this.maxRate)),\n        shareReplay(1)\n    );\n\n    get maxRate() {\n        return this.question?.rateMax || 10;\n    }\n\n    constructor() {\n        super();\n    }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\n\n@Component({\n    selector: 'table-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                padding-bottom: 0.5rem;\n            }\n\n            blockquote:after, blockquote:before {\n                font-size: 1.3rem;  \n            } \n\n            blockquote:after {                                                       \n                content: close-quote;\n                vertical-align: bottom;\n                margin-left: 0.25rem;\n            }\n\n            blockquote:before {                                     \n                content: open-quote;\n                vertical-align: top;\n                margin-right: 0.25rem;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex flex-col min-h-0 max-h-[22rem] h-full w-full overflow-y-auto relative\"\n        >\n            <ng-container *ngIf=\"chart_data$ | async as data\">\n                <div *ngFor=\"let d of data\" class=\"flex flex-1 p-2 border-b mx-4\">\n                    <blockquote>\n                        <span class=\"text-gray-700\">{{d}}</span>\n                    </blockquote>\n                </div>\n            </ng-container>\n        </div>\n    `,\n})\nexport class TableWidgetComponent extends BaseWidget {\n    public chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) =>\n            data.reduce((acc, curr) => (acc.push(curr.answer_json), acc), [])\n        )\n    );\n\n    constructor() {\n        super();\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { QuestionType, UISurveyResponse } from '../types';\n\n@Component({\n    selector: 'survey-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"flex flex-col flex-1 p-2 w-full\">\n            <div\n                class=\"flex flex-col h-full w-full bg-base-100 rounded shadow border border-base-200\"\n            >\n                <div class=\"p-4 pb-2 text-xl\">\n                    {{ response?.question?.title || '' }}\n                </div>\n                <div class=\"flex flex-col w-full\">\n                    <ng-container\n                        *ngIf=\"\n                            [\n                                QuestionType.Comment_Box,\n                                QuestionType.Single_Line_Text\n                            ].includes(type)\n                        \"\n                    >\n                        <table-widget [value]=\"response.answers\"></table-widget>\n                    </ng-container>\n                    <ng-container\n                        *ngIf=\"\n                            [\n                                QuestionType.Drop_Down,\n                                QuestionType.Radio_Group,\n                                QuestionType.Check_Box\n                            ].includes(type)\n                        \"\n                    >\n                        <selection-widget\n                            [value]=\"response.answers\"\n                            [question]=\"response.question\"\n                        ></selection-widget>\n                    </ng-container>\n                    <ng-container *ngIf=\"QuestionType.Rating === type\">\n                        <ratings-widget\n                            [value]=\"response.answers\"\n                            [question]=\"response.question\"\n                        ></ratings-widget>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class SurveyWidgetComponent implements OnInit {\n    @Input() response: UISurveyResponse;\n    public QuestionType = QuestionType;\n    constructor() {}\n\n    get type() {\n        return this.response?.question?.type || 'empty';\n    }\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { TriggerEnumMap } from '@placeos/survey-suite';\nimport { map, shareReplay, take } from 'rxjs/operators';\nimport { SurveyResponsesService } from '../services/survey-responses.service';\n\n@Component({\n    selector: 'survey-responses',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n                overflow: auto;\n            }\n        `,\n    ],\n    template: `\n        <div\n            *ngIf=\"(loading$ | async).length\"\n            class=\"flex absolute inset-0 opacity-60 bg-base-100 z-10\"\n        >\n            <div class=\"flex flex-col m-auto items-center\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <span>{{ loading$ | async }}</span>\n            </div>\n        </div>\n        <ng-container *ngIf=\"surveyId$ | async; else noId\">\n            <header\n                class=\"flex justify-between items-center w-full pb-4 border-b mt-4 pl-2\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"back()\">\n                        <app-icon class=\"flex mr-2\">arrow_back</app-icon>\n                    </button>\n                    <div class=\"flex flex-row items-center\">\n                        <span class=\"text-2xl\">\n                            Survey Responses -\n                            {{ (survey$ | async)?.title || '' }}\n                        </span>\n                    </div>\n                </div>\n                <mat-form-field\n                    appearance=\"outline\"\n                    subscriptSizing=\"dynamic\"\n                    class=\"w-72 mr-4\"\n                >\n                    <mat-date-range-input\n                        [rangePicker]=\"picker\"\n                        (stateChanges)=\"datePicked($event)\"\n                    >\n                        <input\n                            matStartDate\n                            readonly\n                            [ngModel]=\"(options$ | async)?.start\"\n                            (ngModelChange)=\"$event ? setStartDate($event) : ''\"\n                            placeholder=\"Start date\"\n                        />\n                        <input\n                            matEndDate\n                            readonly\n                            [ngModel]=\"(options$ | async)?.end\"\n                            (ngModelChange)=\"$event ? setEndDate($event) : ''\"\n                            placeholder=\"End date\"\n                        />\n                    </mat-date-range-input>\n                    <div matSuffix class=\"flex items-center\">\n                        <mat-datepicker-toggle\n                            [for]=\"picker\"\n                        ></mat-datepicker-toggle>\n                        <button\n                            *ngIf=\"(options$ | async)?.end\"\n                            icon\n                            matRipple\n                            (click)=\"clearDates()\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                    <mat-date-range-picker #picker></mat-date-range-picker>\n                </mat-form-field>\n            </header>\n            <div class=\"flex p-4 border-b justify-end space-x-2\">\n                <div class=\"flex flex-col items-center flex-1\">\n                    <h3>Total Questions</h3>\n                    <p class=\"text-4xl\">\n                        {{ (stats$ | async)?.question_count || 0 }}\n                    </p>\n                </div>\n                <div class=\"flex flex-col items-center flex-1\">\n                    <h3>Total Answers</h3>\n                    <p class=\"text-4xl\">\n                        {{ (stats$ | async)?.answer_count || 0 }}\n                    </p>\n                </div>\n                <div class=\"flex flex-col items-center flex-1\">\n                    <h3>Triggers On</h3>\n                    <p class=\"text-2xl\">\n                        {{ triggerMap[(survey$ | async)?.trigger] }}\n                    </p>\n                </div>\n            </div>\n\n            <ng-container *ngIf=\"pagedResponses$ | async as pagedResponses\">\n                <ng-container\n                    *ngIf=\"pagedResponses?.length > 0; else noRecords\"\n                >\n                    <ng-container\n                        *ngFor=\"let p of pagedResponses; let i = index\"\n                    >\n                        <div\n                            class=\"flex w-full px-3 pt-2 space-x-2\"\n                            *ngIf=\"pagedResponses.length > 1\"\n                        >\n                            <span class=\"font-thin text-xl\"\n                                >Page {{ i + 1 }}\n                                {{\n                                    p.title?.length ? '- ' + p.title : ''\n                                }}</span\n                            >\n                        </div>\n                        <div class=\"flex flex-wrap w-full pt-2\">\n                            <survey-widget\n                                class=\"w-full lg:w-1/2 2xl:w-1/3\"\n                                *ngFor=\"let r of p.responses\"\n                                [response]=\"r\"\n                            ></survey-widget>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n\n        <ng-template #noId>\n            <div\n                class=\"flex flex-col w-full h-full items-center justify-center\"\n            >\n                <span class=\"text-lg text-gray-700\"\n                    >Invalid survey identity</span\n                >\n            </div>\n        </ng-template>\n        <ng-template #noRecords>\n            <div\n                class=\"flex flex-col w-full min-h-[10rem] items-center justify-center\"\n            >\n                <span class=\"text-lg text-gray-700\">No responses found</span>\n            </div>\n        </ng-template>\n    `,\n    providers: [SurveyResponsesService],\n})\nexport class SurveyResponsesComponent extends AsyncHandler implements OnInit {\n    surveyId$ = this.route.params.pipe(map((params) => params.id || ''));\n    survey$ = this.service.survey$;\n    pagedResponses$ = this.service.paged_responses$;\n    options$ = this.service.options$.pipe(shareReplay(1));\n    stats$ = this.service.stats$.pipe(shareReplay(1));\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n\n    triggerMap = TriggerEnumMap;\n\n    private start_date;\n\n    constructor(\n        private _settings: SettingsService,\n        private service: SurveyResponsesService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'params',\n            this.surveyId$.subscribe((survey_id) => {\n                if (survey_id?.length) {\n                    this.service.setOptions({ survey_id });\n                }\n            })\n        );\n    }\n\n    setStartDate(start: Date) {\n        if (!start) return;\n        this.start_date = start;\n    }\n\n    setEndDate(end: Date) {\n        if (!this.start_date || !end) return;\n        this.service.setOptions({ start: this.start_date, end });\n    }\n\n    clearDates() {\n        this.service.setOptions({ start: null, end: null });\n    }\n\n    public async back() {\n        const survey = await this.survey$.pipe(take(1)).toPromise();\n        this.router.navigate([\n            this._settings.get('app.default_route').includes('new')\n                ? '/surveys/new'\n                : '/surveys',\n            'survey-list',\n            survey.building_id || '',\n        ]);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-survey]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SurveyComponent {}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { ComponentsModule } from '@placeos/components';\nimport { UIModule } from '../ui/ui.module';\n\nimport { BuildingListComponent } from './pages/building-list.component';\nimport { NotFoundComponent } from './pages/not-found.component';\n\nimport { BuildingListItemComponent } from './components/building-list-item.component';\n\nimport { SurveySuiteModule } from '@placeos/survey-suite';\nimport { SurveyModule } from 'survey-angular-ui';\nimport { QuestionBankComponent } from './components/question-bank/question-bank.component';\nimport { SearchInputComponent } from './components/search-input.component';\nimport { SurveyBuilderComponent } from './components/survey-builder/survey-builder.component';\nimport { SurveyCreatorTopbarComponent } from './components/survey-creator-topbar.component';\nimport { ModQuestionOverlayComponent } from './overlays/mod-question-overlay.component';\nimport { ModSurveyComponent } from './pages/mod-survey.component';\nimport { RunSurveyComponent } from './pages/run-survey.component';\nimport { SurveyListingsComponent } from './pages/survey-listings.component';\nimport { SurveyResponsesComponent } from './pages/survey-responses.component';\nimport { QuestionBankService } from './services/question-bank.service';\nimport { SurveyBuilderService } from './services/survey-builder.service';\nimport { SurveyService } from './services/survey.service';\nimport { SurveyComponent } from './survey.component';\nimport { NewSurveyComponent } from './new-survey.component';\n\nconst children: Route[] = [\n    { path: '', component: BuildingListComponent },\n    { path: 'survey-list/:id', component: SurveyListingsComponent },\n    { path: 'builder', component: ModSurveyComponent },\n    { path: 'responses/:id', component: SurveyResponsesComponent },\n    { path: '**', pathMatch: 'full', component: NotFoundComponent },\n];\n\nconst routes: Route[] = [\n    { path: 'new', component: NewSurveyComponent, children },\n    { path: 'run/:id', component: RunSurveyComponent },\n    { path: '', component: SurveyComponent, children },\n    { path: '404', component: NotFoundComponent },\n    { path: '**', pathMatch: 'full', component: NotFoundComponent },\n];\n\nconst COMPONENTS = [\n    SurveyComponent,\n    NewSurveyComponent,\n    BuildingListComponent,\n    BuildingListItemComponent,\n    NotFoundComponent,\n    ModQuestionOverlayComponent,\n    QuestionBankComponent,\n    SurveyBuilderComponent,\n    SurveyCreatorTopbarComponent,\n    ModSurveyComponent,\n    SearchInputComponent,\n    SurveyListingsComponent,\n    RunSurveyComponent,\n    SurveyResponsesComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatDialogModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatTabsModule,\n        DragDropModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        ComponentsModule,\n        RouterModule,\n        MatTableModule,\n        MatMenuModule,\n        MatListModule,\n        MatFormFieldModule,\n        UIModule,\n        SurveySuiteModule,\n        SurveyModule,\n    ],\n    providers: [SurveyBuilderService, QuestionBankService, SurveyService],\n})\nexport class SurveysModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-survey]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewSurveyComponent {}\n"],"x_google_ignoreList":[0,1,2,3,17]}