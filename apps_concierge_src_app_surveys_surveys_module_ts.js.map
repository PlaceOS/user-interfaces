{"version":3,"file":"apps_concierge_src_app_surveys_surveys_module_ts.js","mappings":"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","names":["dispatch","state","subscriber","counter","period","next","this","schedule","extendStyles","dest","source","importantProperties","key","hasOwnProperty","value","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","parseCssPropertyValue","computedStyle","name","getPropertyValue","split","map","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","constructor","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","event","target","_getEventTarget","cachedPosition","get","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","length","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","dragImportantProperties","Set","DragRef","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","Subject","_pointerMoveSubscription","Subscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","disabled","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","Math","abs","_pickupPositionOnPage","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","newValue","coerceBooleanProperty","_toggleNativeDragInteractions","handle","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","coerceElement","disabledHandles","add","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","undefined","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","remove","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","_getShadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","margin","zIndex","classList","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","duration","getTransformTransitionDurationInMs","getComputedStyle","transitionedProperties","property","find","prop","propertyIndex","rawDurations","rawDelays","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","clamp","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","moveItemInArray","array","fromIndex","toIndex","from","to","sibling","index","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","splice","parentElement","push","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","a","b","immediateSibling","end","itemPositions","lastItemRect","firstItemRect","floor","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","interval","scheduler","async","isNumeric","Observable","animationFrameScheduler","pipe","takeUntil","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","filter","every","connectedTo","withOrientation","_scrollableElements","size","_clientRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","clientWidth","getViewportSize","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","draggedItems","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","e","options","config","_clearGlobalListeners","streams","observer","eventOptions","merge","ngOnDestroy","instance","ɵfac","i0","DOCUMENT","ɵprov","factory","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","i1","CDK_DRAG_PARENT","InjectionToken","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","ɵdir","selectors","provide","useExisting","CDK_DRAG_CONFIG","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","_destroyed","id","EventEmitter","_unsortedItems","_dropListRef","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","startWith","coerceArray","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","coerceNumberProperty","markForCheck","emit","dropEvent","draggingDisabled","listAutoScrollDisabled","listOrientation","i3","useValue","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CDK_DRAG_PLACEHOLDER","CDK_DRAG_PREVIEW","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","ngAfterViewInit","onStable","take","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","rootElementSelector","positionChange","firstChange","closest","_getBoundaryElement","boundary","dir","templateRef","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","tap","childHandleElements","switchMap","handleInstance","dragRef","dirIndex","_t","ctx","DragDropModule","ɵmod","ɵinj","imports","CdkScrollableModule","MatDividerModule","MatCommonModule","MatListModule","ObserversModule","CommonModule","MatRippleModule","MatPseudoCheckboxModule","ctx_r0","MAT_SLIDER","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderVisualThumb","_cdr","_elementRef","_slider","_isHovered","_isActive","_isValueIndicatorVisible","_onPointerMove","_sliderInput","_isFocused","_hostElement","isHovered","_isSliderThumbHovered","_showHoverRipple","_hideRipple","_hoverRippleRef","_onMouseLeave","_onFocus","_showFocusRipple","_onBlur","_focusRippleRef","_onDragStart","_showActiveRipple","_onDragEnd","_activeRippleRef","_ripple","radius","_getInput","thumbPosition","_sliderInputEl","input","_isShowingRipple","_showRipple","enterDuration","exitDuration","rippleRef","animation","ignoreGlobalRippleConfig","_showValueIndicator","_isRange","_getThumb","_globalRippleOptions","launch","_noopAnimations","centered","persistent","fadeOut","_isShowingAnyRipple","_hideValueIndicator","_getSibling","_getValueIndicatorContainer","_valueIndicatorContainer","_getKnob","_knob","dy","clientY","pow","clientX","ɵcmp","MatRipple","slider_c0","slider_c1","decls","i2","_MatSliderMixinBase","mixinColor","mixinDisableRipple","MatSlider","_platform","elementRef","animationMode","super","_discrete","_showTickMarks","_min","_max","_step","displayWith","_rippleRadius","startValueIndicatorText","endValueIndicatorText","_isRtl","_hasViewInitialized","_tickMarkTrackWidth","_hasAnimation","_resizeTimer","_knobRadius","_thumbsOverlap","_dirChangeSubscription","_onDirChange","v","endInput","startInput","discrete","_updateValueIndicatorUIs","showTickMarks","_updateMin","prevMin","_updateMinRange","old","new","_updateMinNonRange","_onMinMaxOrStepChange","oldEndValue","oldStartValue","_updateWidthInactive","_onTranslateXChangeBySideEffect","_onValueChange","oldValue","_updateThumbUIByValue","_updateTrackUI","_updateMax","prevMax","_updateMaxRange","_updateMaxNonRange","step","_updateStep","_updateStepRange","_updateStepNonRange","prevStartValue","SAFARI","isBrowser","_updateDimensions","eInput","sInput","thumb","_inputPadding","_inputOffset","_initUIRange","_initUINonRange","_updateTickMarkUI","_updateTickMarkTrackUI","_observeHostResize","initProps","initUI","_updateValueIndicatorUI","_updateMinMax","_updateStaticStyles","_resizeObserver","disconnect","_onDirChangeRange","_onDirChangeNonRange","_setIsLeftThumb","translateX","_calcTranslateXByValue","ResizeObserver","_onResize","observe","_getValue","_skipUpdate","_skipUIUpdate","_cachedWidth","offsetWidth","_cachedLeft","_setTrackActiveStyles","trackStyle","_trackActive","animationOriginChanged","transformOrigin","_calcTickMarkTransform","_tickMarks","_onTranslateXChange","_updateThumbUI","_updateOverlappingThumbUI","input1","input2","_areThumbsOverlapping","_updateOverlappingThumbClassNames","getSibling","sourceThumb","toggle","valuetext","_valuetext","visualThumb","percentage","_updateTrackUIRange","_updateTrackUINonRange","activePercentage","_isLeftThumb","fillPercentage","_updateTickMarkUIRange","_updateTickMarkUINonRange","numActive","numInactive","fill","concat","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","_input","_inputs","first","last","_thumbs","_setTransition","withAnimation","i2$1","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","slider_c2","ngContentSelectors","MAT_SLIDER_THUMB_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSliderThumb","multi","valueChange","dragStart","dragEnd","_hasSetInitialValue","_onChangeFn","_onTouchedFn","_onPointerDown","bind","_onPointerUp","val","toString","_initialValue","_translateX","_setIsFocused","_initValue","_getDefaultValue","_onChange","_onInput","_onNgControlValueChange","_formControl","_updateWidthActive","_updateThumbUIByPointerEvent","_handleValueCorrection","_fixValue","xPos","numSteps","impreciseValue","prevValue","dragEvent","_clamp","_calcTranslateXByPointerEvent","padding","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","focus","blur","MatSliderModule","SurveySuiteModule","translateToSurveyPage","pages","surveyPages","title","description","question_order","translateToQuestion","q","rateMax","max_rating","choices","isRequired","required","tags","underToSpace","str","replace","getEnumOptions","targetEnum","filterStringEnumItems","getEnumMap","emap","Object","entries","isNaN","Number","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatSelectModule","MatSlideToggleModule","MatInputModule","MatIconModule","MatButtonModule","TriggerEnum","QuestionType","QuestionTypeOptions","TriggerOptions","QuestionTypeEnumMap","TriggerEnumMap","BaseQuestionComponent","question","hasValue","SingleLineTextComponent","SelectionComponent","isDropDown","multiple","ngOnInit","addOption","text","deleteOption","t","MultiLineTextComponent","RatingsComponent","generateArray","QuestionComponent","valid","checkop","reduce","acc","BuildingListItemService","BehaviorSubject","_loading","asObservable","lives","drafts","responses","_stats","loading","stats","initStats","building_id","_this","surveys","getBuildingSurveys","resArr","s","trigger","getSurveyResponses","res","forkJoin","arr","curr","toPromise","querySurveys","catchError","err","notifyError","of","survey_id","queryAnswers","answers","BuildingListItemComponent","router","route","service","loading$","shareReplay","stats$","building","navigate","relativeTo","core","BuildingListComponent","_org","building_list","NotFoundComponent","ctx_r1","_r7","ctx_r6","ctx_r2","ctx_r3","ctx_r4","ctx_r5","ctx_r7","ctx_r10","ctx_r11","ctx_r13","ctx_r16","_r5","$implicit","ctx_r9","ctx_r12","_r21","ctx_r20","_r3","ctx_r8","_r9","_r11","ctx_r14","ctx_r15","_r8","_r10","ctx_r18","_r27","ctx_r26","_r12","_r6","_r2","_r20","ctx_r25","_r28","ctx_r22","row_r9","_r13","_r24","ctx_r17","val_r15","_r30","ctx_r28","_r33","ctx_r31","ctx_r21","_r37","ctx_r36","_r4","cell_r4","EmbeddedViewContentComponent","viewContainerRef","embeddedView","survey_angular_ui_c0","TemplateRef","BaseAngular","changeDetectorRef","isModelSubsribed","isDestroyed","surveyModel","getModel","getSurvey","ngDoCheck","previousModel","unMakeBaseElementAngular","makeBaseElementAngular","onModelChanged","beforeUpdate","setIsRendering","model","isRendering","getIsRendering","stateElement","__ngImplemented","iteratePropertiesHash","hash","onArrayChanged","arrayChanges","update","setPropertyValueCoreHandler","getPropertiesToUpdateSync","afterUpdate","__zone_symbol__queueMicrotask","queueMicrotask","ngAfterViewChecked","AngularComponentFactory","creatorHash","registerComponent","typeName","componentType","getAllTypes","isComponentRegistered","elementType","create","containerRef","params","createComponent","Instance","DynamicComponentDirective","componentChanges","component","currentValue","previousValue","componentInstance","updateComponentData","default","Error","contentTempl","keys","ActionComponent","survey_angular_ui_c1","ViewContainerRef","ActionBarComponent","allowOnClick","handleClick","onClick","hasActions","initResponsivityManager","resetResponsivityManager","survey_angular_ui_c4","VisibleDirective","el","visible","show","hide","display","PopupBaseContainerComponent","prevIsVisible","isShow","detach","applyButtonText","popupModalModel","apply","isVisible","updateOnShowing","encapsulation","PopupService","injector","applicationRef","componentFactoryResolver","popupViewModel","portalHost","DomPortalOutlet","portal","ComponentPortal","componentRef","attach","children","ModalComponent","popupService","functionDefined","showDialog","dialogOptions","createPopupModalViewModel","initializePopupContainer","onHide","unmountPopupContainer","settings","componentName","onApply","onCancel","cssClass","displayMode","createDialogOptions","DynamicHeadComponent","ariaLabel","titleAriaLabel","SurveyStringComponent","ElementTitleActionsComponent","ElementTitleComponent","SurveyHeaderComponent","survey","afterRenderHeader","locLogo","onChanged","SvgIconComponent","viewContaierRef","createSvg","iconName","Survey","rootClass","css","partCss","rootRole","innerHTML","document","createElementNS","attrs","TimerPanelComponent","arguments","circleLengthValue","getStateElement","circleLength","progress","ElementComponent","elementComponentName","isPanel","getElementWrapperComponentName","rootStyle","cssClasses","componentData","getElementWrapperComponentData","RowComponent","cdr","vcr","ngZone","row","trackElementBy","isNeedRender","startLazyRendering","stopLazyRendering","isLazyRendering","ElementRef","PageComponent","pageContainerRef","afterRenderPage","_c12","BrandInfoComponent","SurveyContentComponent","renderCallback","needRenderIcons","SvgRegistry","afterRenderSurvey","rootEl","_c14","SurveyComponent","ErrorsComponent","location","tooltipManager","TooltipManager","role","ariaLive","class","cssError","_c15","ElementHeaderComponent","cssHeader","click","clickTitleFunction","SurveyCommentComponent","comment","afterRender","getComponentName","customWidget","isDefaultRendering","getTemplate","getQuestionContentWrapperComponentName","getQuestionContentWrapperComponentData","_c18","LocalizableString","StringViewerComponent","clearOnChanged","PopupPointerComponent","popupModel","PopupComponent","destroyModel","createPopupViewModel","QuestionSkeletonComponent","DropdownComponent","dropdownModel","dropdownListModel","DropdownListModel","onClear","keyhandler","keyHandler","onBlur","updateInputDomElement","inputChange","inputElementRef","control","Helpers","filterString","_c22","TagboxFilterComponent","TagboxItemComponent","deselectItem","TagboxComponent","DropdownMultiSelectListModel","DropdownOptionItemComponent","DropdownSelectComponent","editableValue","renderedValue","keyup","onKeyUp","RendererFactory","SafeUrlPipe","domSanitizer","url","bypassSecurityTrustUrl","i1$1","ɵpipe","pure","SafeResourceUrlPipe","bypassSecurityTrustResourceUrl","LogoImageComponent","QuestionAngular","afterRenderQuestionElement","elementContentRef","beforeDestroyQuestionElement","_c27","TextQuestionComponent","SafeHtmlPipe","bypassSecurityTrustHtml","HtmlQuestionComponent","locHtml","SelectBaseComponent","inputType","showLegend","getDefaultComponentName","trackItemBy","_","trackColumnBy","getItemValueComponentName","getItemValueWrapperComponentName","getItemValueComponentData","getItemValueWrapperComponentData","RadiogroupComponent","RadiogroupItemComponent","CheckboxComponent","CheckboxItemComponent","onChange","checked","onSelectAllChange","toggleSelectAll","DropdownQuestionComponent","TagboxQuestionComponent","RatingQuestionComponent","trackByFn","setValueFromClick","BooleanQuestionComponent","booleanValue","ImagePickerItemComponent","multiSelect","currValue","locImageLink","ImagePickerQuestionComponent","Key2ClickDirective","isSubscribed","defaultOptions","onkeyup","evt","doKey2ClickUp","subscribeEventListeners","onkeydown","doKey2ClickDown","doKey2ClickBlur","tabIndex","unsubscribeEventListeners","curValue","key2click","disableTabStop","assign","processEsc","ActionBarItemComponent","ActionBarItemDropdownComponent","viewModel","ActionDropdownViewModel","SelectBaseItemComponent","showLabel","SkeletonComponent","ListItemComponent","ariaSelected","listModel","isItemSelected","getItemClass","paddingLeft","getItemIndent","onItemClick","pointerdown","onPointerDown","onLastItemRended","ListComponent","onGoToItems","goToItems","onMouseDown","onKeyDown","onMouseMove","listContainerElement","initListContainerHtmlElement","_c29","RatingDropdownComponent","BooleanCheckboxComponent","BooleanRadioItemComponent","BooleanRadioComponent","ProgressDefaultComponent","getProgressTextInBarCss","SurveyProgressModel","getProgressTextUnderBarCss","ProgressButtonsComponent","hasScroller","updateScroller","createProgressButtonsModel","progressButtonsModel","SurveyProgressButtonsModel","isListElementClickable","getListElementCss","clickListElement","getScrollButtonCss","isLeftScroll","clickScrollButton","progressButtonsListContainer","setInterval","clearInterval","_c30","PanelComponent","trackRowBy","panelContainerRef","afterRenderPanel","_c31","SurveyNavigationButton","buttonMouseDown","mouseDown","MatrixQuestionComponent","visibleRowsChangedCallback","column","isInputReadOnly","trackRowByFn","trackColumnByFn","FileQuestionComponent","trackFilesFn","inputId","CommentQuestionComponent","SignaturePadQuestionComponent","MultipleTextItemComponent","editor","MultipleTextComponent","RankingQuestionComponent","RankingItemComponent","StringEditorComponent","onInput","innerText","PaneldynamicAction","PanelDynamicAddBtn","addPanelClick","addPanelUI","PanelDynamicNextBtn","nextPanelClick","goToNextPanel","PanelDynamicPrevBtn","prevPanelClick","goToPrevPanel","PaneldynamicRemoveButtonComponent","panel","PanelDynamicProgressText","PanelDynamicQuestionComponent","renderedPanels","isRenderModeList","panels","currentPanel","panelCountChangedCallback","currentIndexChangedCallback","renderModeChangedCallback","progressCssClass","isProgressTopShowing","progressTop","progressBottom","getPanelComponentName","getPanelComponentData","SurveyModel","TemplateRendererComponent","CustomWidgetComponent","hasDefaultRender","isDefaultRender","hasAngularComponent","hasHtml","htmlTemplate","customHtml","simpleChanges","willUnmount","_c36","MatrixDynamicDragDropIconComponent","MatrixCellComponent","cell","panelComponentName","panelComponentData","getType","getHeaders","headers","getCellStyle","minWidth","hasQuestion","matrixAfterCellRender","cellQuestion","htmlElement","cellContainer","_c38","MatrixRequiredHeader","MatrixRowComponent","trackCellBy","MatrixTableComponent","table","MatrixDropdownComponent","MatrixDynamicComponent","MatrixDynamicRemoveButtonComponent","MatrixDetailButtonComponent","ExpressionComponent","ImageQuestionComponent","CustomQuestionComponent","contentQuestion","CompositeQuestionComponent","contentPanel","SurveyModule","ModQuestionOverlayComponent","_data","_dialog_ref","isEdit","generateNewQuestion","done","close","MAT_DIALOG_DATA","QuestionBankService","AsyncHandler","_dialog","_questions","_withdrawnQuestions","search","_filter","combineLatest","questions$","withdrawnQuestions$","filter$","questions","active","activeIds","includes","filteredQuestion","loadQuestions","getValue","withdrawnQuestions","setFilter","getQuestion","withdrawFilteredQuestion","setWithdrawnQuestions","depositQuestions","withdrawn","idx","onDrop","confirmDeleteQuestion","details","openConfirmModal","content","icon","reason","deleteQuestion","modQuestionOverlay","open","afterClosed","saveQuestion","_this2","removeQuestion","removeQuestionFromStore","handleError","finalize","_this3","queryQuestions","_this4","addQuestion","translateToSurveyQuestion","notifySuccess","addQuestionToStore","msg","defaultReturn","qs","SearchInputComponent","clearSearch","onSearch","search$","fromEvent","debounceTime","distinctUntilChanged","QuestionBankComponent","filteredQuestions$","SurveyBuilderService","bank","selectedPage","selectedPageIndex","setUISurvey","getUISurvey","addSurveyPage","confirmDeletePage","removeSurveyPage","removeQuestionFromSurvey","onDropQuestionToSurvey","onPreview","Model","SurveyBuilderComponent","switchView","view","onTabChange","SurveyService","builder","dialog","zone_id","_options","loadSurvey","uiSurvey","getSurveyDetails","setOptions","results","all","getSurveyQuestions","translateToUISurveyObj","questSet","transPages","confirmDeleteSurvey","deleteSurvey","saveSurvey","validateSurvey","toSave","updateSurvey","createSurvey","back","showSurvey","allQuestions","removeSurvey","_this5","addSurvey","_this6","SurveyCreatorTopbarComponent","_actRoute","_survey","_options$","options$","level_list","levels","l","parent_id","op","queryParams","qparams","updateOptions","onBuildingChange","doBuildingChange","ModSurveyComponent","_route","RunSurveyService","onComplete","sender","processSurveyAnswer","answersMap","question_id","answer_json","saveSurveyAnswer","addAnswer","RunSurveyComponent","SurveyListingsService","org","_surveys","_building_id","buildings","building$","lvl","display_name","initBuilding","loadBuildingSurveys","reloadBuilding","editSurvey","newSurvey","SurveyListingsComponent","_router","_service","surveys$","building_name","levelNameMap$","levelMap","SurveyResponsesService","_responses","question_count","answer_count","responses$","survey$","resMap","paged","sortQuestionsAnswers","qhash","obj","values","def_res","BaseWidget","widget_id","makeHTMLId","characters","charactersLength","charAt","random","hasData","SelectionWidgetComponent","data$","parseSelectionAnswers","total","count","RatingsWidgetComponent","parseRatingAnswers","maxRate","parseRatingStats","sum","average","TableWidgetComponent","SurveyWidgetComponent","response","SurveyResponsesComponent","paged_responses$","surveyId$","surveyId","routes","path","pathMatch","SurveysModule","RouterModule","MatDialogModule","MatCheckboxModule","MatTabsModule","ComponentsModule","MatTableModule","MatMenuModule","UIModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2020/drag-drop.mjs","./node_modules/@angular/material/fesm2020/divider.mjs","./node_modules/@angular/material/fesm2020/list.mjs","./node_modules/@angular/material/fesm2020/slider.mjs","./libs/survey-suite/src/lib/survey-suite.module.ts","./libs/survey-suite/src/lib/helper.ts","./libs/survey-suite/src/lib/types.ts","./libs/survey-suite/src/lib/question/base-question.component.ts","./libs/survey-suite/src/lib/question/single-line-text.component.ts","./libs/survey-suite/src/lib/question/selection.component.ts","./libs/survey-suite/src/lib/question/multi-line-text.component.ts","./libs/survey-suite/src/lib/question/rating.component.ts","./libs/survey-suite/src/lib/question/question.component.ts","./apps/concierge/src/app/surveys/services/building-list-item.service.ts","./apps/concierge/src/app/surveys/components/building-list-item.component.ts","./apps/concierge/src/app/surveys/pages/building-list.component.ts","./apps/concierge/src/app/surveys/pages/not-found.component.ts","./node_modules/survey-angular-ui/fesm2020/survey-angular-ui.mjs","./apps/concierge/src/app/surveys/overlays/mod-question-overlay.component.ts","./apps/concierge/src/app/surveys/services/question-bank.service.ts","./apps/concierge/src/app/surveys/components/search-input.component.ts","./apps/concierge/src/app/surveys/components/question-bank/question-bank.component.html","./apps/concierge/src/app/surveys/components/question-bank/question-bank.component.ts","./apps/concierge/src/app/surveys/services/survey-builder.service.ts","./apps/concierge/src/app/surveys/components/survey-builder/survey-builder.component.html","./apps/concierge/src/app/surveys/components/survey-builder/survey-builder.component.ts","./apps/concierge/src/app/surveys/services/survey.service.ts","./apps/concierge/src/app/surveys/components/survey-creator-topbar.component.ts","./apps/concierge/src/app/surveys/pages/mod-survey.component.ts","./apps/concierge/src/app/surveys/services/run-survey.service.ts","./apps/concierge/src/app/surveys/pages/run-survey.component.ts","./apps/concierge/src/app/surveys/services/survey-listings.service.ts","./apps/concierge/src/app/surveys/pages/survey-listings.component.ts","./apps/concierge/src/app/surveys/services/survey-responses.service.ts","./libs/survey-suite/src/lib/survey-widget/base-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/selection.widget.component.ts","./libs/survey-suite/src/lib/survey-widget/survey-helper.ts","./libs/survey-suite/src/lib/survey-widget/ratings-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/table-widget.component.ts","./libs/survey-suite/src/lib/survey-widget/survey-widget.component.ts","./apps/concierge/src/app/surveys/pages/survey-responses.component.ts","./apps/concierge/src/app/surveys/surveys.module.ts"],"sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, Input, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, EventEmitter, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, Output, forwardRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst LIST_OPTION = new InjectionToken('ListOption');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nclass MatListItemTitle {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nMatListItemTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemTitle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatListItemTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemTitle, selector: \"[matListItemTitle]\", host: { classAttribute: \"mat-mdc-list-item-title mdc-list-item__primary-text\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemTitle]',\n                    host: { 'class': 'mat-mdc-list-item-title mdc-list-item__primary-text' },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nclass MatListItemLine {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nMatListItemLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemLine, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatListItemLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemLine, selector: \"[matListItemLine]\", host: { classAttribute: \"mat-mdc-list-item-line mdc-list-item__secondary-text\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemLine]',\n                    host: { 'class': 'mat-mdc-list-item-line mdc-list-item__secondary-text' },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nclass MatListItemMeta {\n}\nMatListItemMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemMeta, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListItemMeta.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemMeta, selector: \"[matListItemMeta]\", host: { classAttribute: \"mat-mdc-list-item-meta mdc-list-item__end\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemMeta, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemMeta]',\n                    host: { 'class': 'mat-mdc-list-item-meta mdc-list-item__end' },\n                }]\n        }] });\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end`\n * to position content such as icons or checkboxes that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nclass _MatListItemGraphicBase {\n    constructor(_listOption) {\n        this._listOption = _listOption;\n    }\n    _isAlignedAtStart() {\n        // By default, in all list items the graphic is aligned at start. In list options,\n        // the graphic is only aligned at start if the checkbox is at the end.\n        return !this._listOption || this._listOption?._getCheckboxPosition() === 'after';\n    }\n}\n_MatListItemGraphicBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: _MatListItemGraphicBase, deps: [{ token: LIST_OPTION, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatListItemGraphicBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: _MatListItemGraphicBase, host: { properties: { \"class.mdc-list-item__start\": \"_isAlignedAtStart()\", \"class.mdc-list-item__end\": \"!_isAlignedAtStart()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: _MatListItemGraphicBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        // MDC uses intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end`\n                        // to position content such as icons or checkboxes that comes either before or after the text\n                        // content respectively. This directive detects the placement of the checkbox and applies the\n                        // correct MDC class to position the icon/avatar on the opposite side.\n                        '[class.mdc-list-item__start]': '_isAlignedAtStart()',\n                        '[class.mdc-list-item__end]': '!_isAlignedAtStart()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIST_OPTION]\n                }] }]; } });\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nclass MatListItemAvatar extends _MatListItemGraphicBase {\n}\nMatListItemAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemAvatar, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatListItemAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemAvatar, selector: \"[matListItemAvatar]\", host: { classAttribute: \"mat-mdc-list-item-avatar\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemAvatar]',\n                    host: { 'class': 'mat-mdc-list-item-avatar' },\n                }]\n        }] });\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nclass MatListItemIcon extends _MatListItemGraphicBase {\n}\nMatListItemIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatListItemIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemIcon, selector: \"[matListItemIcon]\", host: { classAttribute: \"mat-mdc-list-item-icon\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matListItemIcon]',\n                    host: { 'class': 'mat-mdc-list-item-icon' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass MatListBase {\n    constructor() {\n        this._isNonInteractive = true;\n        this._disableRipple = false;\n        this._disabled = false;\n    }\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n}\nMatListBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListBase, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"attr.aria-disabled\": \"disabled\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                }]\n        }], propDecorators: { disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/** @docs-private */\nclass MatListItemBase {\n    constructor(_elementRef, _ngZone, _listBase, _platform, globalRippleOptions, animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._listBase = _listBase;\n        this._platform = _platform;\n        this._explicitLines = null;\n        this._disableRipple = false;\n        this._disabled = false;\n        this._subscriptions = new Subscription();\n        this._rippleRenderer = null;\n        /** Whether the list item has unscoped text content. */\n        this._hasUnscopedTextContent = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this._hostElement = this._elementRef.nativeElement;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (_listBase && !_listBase._isNonInteractive) {\n            this._initInteractiveListItem();\n        }\n        // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n        // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n        // TODO: Determine if we intend to continue doing this for the MDC-based list.\n        if (this._hostElement.nodeName.toLowerCase() === 'button' &&\n            !this._hostElement.hasAttribute('type')) {\n            this._hostElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n        this._explicitLines = coerceNumberProperty(lines, null);\n        this._updateItemLines(false);\n    }\n    get disableRipple() {\n        return (this.disabled ||\n            this._disableRipple ||\n            this._noopAnimations ||\n            !!this._listBase?.disableRipple);\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    /** Whether the list-item is disabled. */\n    get disabled() {\n        return this._disabled || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    ngAfterViewInit() {\n        this._monitorProjectedLinesAndTitle();\n        this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        if (this._rippleRenderer !== null) {\n            this._rippleRenderer._removeTriggerEvents();\n        }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n        return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n        this._hostElement.classList.add('mat-mdc-list-item-interactive');\n        this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform);\n        this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n        this._ngZone.runOutsideAngular(() => {\n            this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n        });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n        // If the updated is triggered too early before the view and content is initialized,\n        // we just skip the update. After view initialization the update is triggered again.\n        if (!this._lines || !this._titles || !this._unscopedContent) {\n            return;\n        }\n        // Re-check the DOM for unscoped text content if requested. This needs to\n        // happen before any computation or sanity checks run as these rely on the\n        // result of whether there is unscoped text content or not.\n        if (recheckUnscopedContent) {\n            this._checkDomForUnscopedTextContent();\n        }\n        // Sanity check the list item lines and title in the content. This is a dev-mode only\n        // check that can be dead-code eliminated by Terser in production.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            sanityCheckListItemContent(this);\n        }\n        const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n        const unscopedContentEl = this._unscopedContent.nativeElement;\n        // Update the list item element to reflect the number of lines.\n        this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n        this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n        this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n        // If there is no title and the unscoped content is the is the only line, the\n        // unscoped text content will be treated as the title of the list-item.\n        if (this._hasUnscopedTextContent) {\n            const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n            unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n            unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n        }\n        else {\n            unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n            unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n        }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n        let numOfLines = this._titles.length + this._lines.length;\n        if (this._hasUnscopedTextContent) {\n            numOfLines += 1;\n        }\n        return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n        this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes)\n            .filter(node => node.nodeType !== node.COMMENT_NODE)\n            .some(node => !!(node.textContent && node.textContent.trim()));\n    }\n}\nMatListItemBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatListItemBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItemBase, inputs: { lines: \"lines\", disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mdc-list-item--disabled\": \"disabled\", \"attr.aria-disabled\": \"disabled\" } }, queries: [{ propertyName: \"_avatars\", predicate: MatListItemAvatar }, { propertyName: \"_icons\", predicate: MatListItemIcon }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItemBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _avatars: [{\n                type: ContentChildren,\n                args: [MatListItemAvatar, { descendants: false }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatListItemIcon, { descendants: false }]\n            }], lines: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n    const numTitles = item._titles.length;\n    const numLines = item._titles.length;\n    if (numTitles > 1) {\n        throw Error('A list item cannot have multiple titles.');\n    }\n    if (numTitles === 0 && numLines > 0) {\n        throw Error('A list item line can only be used if there is a list item title.');\n    }\n    if (numTitles === 0 &&\n        item._hasUnscopedTextContent &&\n        item._explicitLines !== null &&\n        item._explicitLines > 1) {\n        throw Error('A list item cannot have wrapping content without a title.');\n    }\n    if (numLines > 2 || (numLines === 2 && item._hasUnscopedTextContent)) {\n        throw Error('A list item can have at maximum three lines.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatActionList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n}\nMatActionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatActionList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatActionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatActionList, selector: \"mat-action-list\", host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-action-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatActionList }], exportAs: [\"matActionList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatActionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-action-list', exportAs: 'matActionList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-action-list mat-mdc-list-base mdc-list',\n                        'role': 'group',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatActionList }], styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\nclass MatList extends MatListBase {\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatList, selector: \"mat-list\", host: { classAttribute: \"mat-mdc-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list', exportAs: 'matList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-list mat-mdc-list-base mdc-list',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatList }], styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"] }]\n        }] });\nclass MatListItem extends MatListItemBase {\n    constructor(element, ngZone, listBase, platform, globalRippleOptions, animationMode) {\n        super(element, ngZone, listBase, platform, globalRippleOptions, animationMode);\n        this._activated = false;\n    }\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n        return this._activated;\n    }\n    set activated(activated) {\n        this._activated = coerceBooleanProperty(activated);\n    }\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n        return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MatListBase, optional: true }, { token: i1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { activated: \"activated\" }, host: { properties: { \"class.mdc-list-item--activated\": \"activated\", \"class.mdc-list-item--with-leading-avatar\": \"_avatars.length !== 0\", \"class.mdc-list-item--with-leading-icon\": \"_icons.length !== 0\", \"class.mdc-list-item--with-trailing-meta\": \"_meta.length !== 0\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-current\": \"_getAriaCurrent()\" }, classAttribute: \"mat-mdc-list-item mdc-list-item\" }, queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }, { propertyName: \"_meta\", predicate: MatListItemMeta, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }, { propertyName: \"_itemText\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", dependencies: [{ kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-mdc-list-item mdc-list-item',\n                        '[class.mdc-list-item--activated]': 'activated',\n                        '[class.mdc-list-item--with-leading-avatar]': '_avatars.length !== 0',\n                        '[class.mdc-list-item--with-leading-icon]': '_icons.length !== 0',\n                        '[class.mdc-list-item--with-trailing-meta]': '_meta.length !== 0',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<ng-content select=\\\"[matListItemMeta]\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: MatListBase, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _meta: [{\n                type: ContentChildren,\n                args: [MatListItemMeta, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], _itemText: [{\n                type: ViewChild,\n                args: ['text']\n            }], activated: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = new InjectionToken('SelectionList');\nclass MatListOption extends MatListItemBase {\n    constructor(elementRef, ngZone, _selectionList, platform, _changeDetectorRef, globalRippleOptions, animationMode) {\n        super(elementRef, ngZone, _selectionList, platform, globalRippleOptions, animationMode);\n        this._selectionList = _selectionList;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        this._selected = false;\n        /**\n         * This is set to true after the first OnChanges cycle so we don't\n         * clear the value of `selected` in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this._selectionList.multiple) {\n                this._selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this._selectionList;\n        if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n        const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n        // If there is no explicit title element, the unscoped text content\n        // is treated as the list item title.\n        const labelEl = titleElement || this._unscopedContent?.nativeElement;\n        return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n        return this._selectionList.multiple && this._getCheckboxPosition() === position;\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n        return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n        // If the checkbox is shown at the specified position, neither icons or\n        // avatars can be shown at the position.\n        return (this._getCheckboxPosition() !== position &&\n            (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0));\n    }\n    _handleBlur() {\n        this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox. */\n    _getCheckboxPosition() {\n        return this.checkboxPosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this._selectionList.selectedOptions.select(this);\n        }\n        else {\n            this._selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetectorRef.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n        if (!this.disabled) {\n            if (this._selectionList.multiple) {\n                this.selected = !this.selected;\n                this._selectionList._emitChangeEvent([this]);\n            }\n            else if (!this.selected) {\n                this.selected = true;\n                this._selectionList._emitChangeEvent([this]);\n            }\n        }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n        this._hostElement.setAttribute('tabindex', value + '');\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: SELECTION_LIST }, { token: i1.Platform }, { token: i0.ChangeDetectorRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE$1, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListOption, selector: \"mat-list-option\", inputs: { checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"blur\": \"_handleBlur()\", \"click\": \"_toggleOnInteraction()\" }, properties: { \"class.mdc-list-item--selected\": \"selected && !_selectionList.multiple\", \"class.mdc-list-item--with-leading-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"before\\\")\", \"class.mdc-list-item--with-leading-icon\": \"_hasProjected(\\\"icons\\\", \\\"before\\\")\", \"class.mdc-list-item--with-trailing-icon\": \"_hasProjected(\\\"icons\\\", \\\"after\\\")\", \"class.mat-mdc-list-option-with-trailing-avatar\": \"_hasProjected(\\\"avatars\\\", \\\"after\\\")\", \"class.mdc-list-item--with-leading-checkbox\": \"_hasCheckboxAt(\\\"before\\\")\", \"class.mdc-list-item--with-trailing-checkbox\": \"_hasCheckboxAt(\\\"after\\\")\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.aria-selected\": \"selected\" }, classAttribute: \"mat-mdc-list-item mat-mdc-list-option mdc-list-item\" }, providers: [\n        { provide: MatListItemBase, useExisting: MatListOption },\n        { provide: LIST_OPTION, useExisting: MatListOption },\n    ], queries: [{ propertyName: \"_lines\", predicate: MatListItemLine, descendants: true }, { propertyName: \"_titles\", predicate: MatListItemTitle, descendants: true }], viewQueries: [{ propertyName: \"_unscopedContent\", first: true, predicate: [\"unscopedContent\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Save icons and the pseudo checkbox so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<!-- Container for the checkbox at start. -->\\n<span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\"\\n      *ngIf=\\\"_hasCheckboxAt('before')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n</span>\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n<ng-template [ngIf]=\\\"_hasIconsOrAvatarsAt('before')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n</ng-template>\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<!-- Container for the checkbox at the end. -->\\n<span class=\\\"mdc-list-item__end\\\" *ngIf=\\\"_hasCheckboxAt('after')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n</span>\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n<ng-template [ngIf]=\\\"_hasIconsOrAvatarsAt('after')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n</ng-template>\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item,.mat-mdc-list-option-with-trailing-avatar.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end,.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-touch-target-wrapper{display:inline}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mat-mdc-list-option .mdc-checkbox[hidden]{display:none}.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0}.mdc-checkbox--upgraded .mat-mdc-list-option .mdc-checkbox__checkmark{opacity:1}.mat-mdc-list-option .mdc-checkbox__checkmark-path{stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mat-mdc-list-option .mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-list-option .mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}@media all and (-ms-high-contrast: none){.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox .mdc-checkbox__focus-ring{display:none}}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__background{transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__mixedmark{transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mat-mdc-list-option .mdc-checkbox{padding:calc((40px - 18px) / 2);padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((40px - 40px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.38);border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:rgba(0, 0, 0, 0.38);background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__background{top:calc((40px - 18px) / 2);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((40px - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{top:calc((40px - 40px) / 2);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((40px - 40px) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((40px - 40px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:40px;width:var(--mdc-checkbox-state-layer-size, 40px);height:40px;height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-list-option .mdc-checkbox__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"], dependencies: [{ kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', host: {\n                        'class': 'mat-mdc-list-item mat-mdc-list-option mdc-list-item',\n                        'role': 'option',\n                        // As per MDC, only list items in single selection mode should receive the `--selected`\n                        // class. For multi selection, the checkbox is used as indicator.\n                        '[class.mdc-list-item--selected]': 'selected && !_selectionList.multiple',\n                        // Based on the checkbox position and whether there are icons or avatars, we apply MDC's\n                        // list-item `--leading` and `--trailing` classes.\n                        '[class.mdc-list-item--with-leading-avatar]': '_hasProjected(\"avatars\", \"before\")',\n                        '[class.mdc-list-item--with-leading-icon]': '_hasProjected(\"icons\", \"before\")',\n                        '[class.mdc-list-item--with-trailing-icon]': '_hasProjected(\"icons\", \"after\")',\n                        '[class.mat-mdc-list-option-with-trailing-avatar]': '_hasProjected(\"avatars\", \"after\")',\n                        // Based on the checkbox position, we apply the `--leading` or `--trailing` MDC classes\n                        // which ensure that the checkbox is positioned correctly within the list item.\n                        '[class.mdc-list-item--with-leading-checkbox]': '_hasCheckboxAt(\"before\")',\n                        '[class.mdc-list-item--with-trailing-checkbox]': '_hasCheckboxAt(\"after\")',\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[attr.aria-selected]': 'selected',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_toggleOnInteraction()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MatListItemBase, useExisting: MatListOption },\n                        { provide: LIST_OPTION, useExisting: MatListOption },\n                    ], template: \"<!--\\n  Save icons and the pseudo checkbox so that they can be re-used in the template without\\n  duplication. Also content can only be injected once so we need to extract icons/avatars\\n  into a template since we use it in multiple places.\\n-->\\n<ng-template #icons>\\n  <ng-content select=\\\"[matListItemAvatar],[matListItemIcon]\\\">\\n  </ng-content>\\n</ng-template>\\n\\n<ng-template #checkbox>\\n  <div class=\\\"mdc-checkbox\\\" [class.mdc-checkbox--disabled]=\\\"disabled\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"mdc-checkbox__native-control\\\"\\n           [checked]=\\\"selected\\\" [disabled]=\\\"disabled\\\"/>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<!-- Container for the checkbox at start. -->\\n<span class=\\\"mdc-list-item__start mat-mdc-list-option-checkbox-before\\\"\\n      *ngIf=\\\"_hasCheckboxAt('before')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n</span>\\n<!-- Conditionally renders icons/avatars before the list item text. -->\\n<ng-template [ngIf]=\\\"_hasIconsOrAvatarsAt('before')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n</ng-template>\\n\\n<!-- Text -->\\n<span class=\\\"mdc-list-item__content\\\">\\n  <ng-content select=\\\"[matListItemTitle]\\\"></ng-content>\\n  <ng-content select=\\\"[matListItemLine]\\\"></ng-content>\\n  <span #unscopedContent class=\\\"mat-mdc-list-item-unscoped-content\\\"\\n        (cdkObserveContent)=\\\"_updateItemLines(true)\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n<!-- Container for the checkbox at the end. -->\\n<span class=\\\"mdc-list-item__end\\\" *ngIf=\\\"_hasCheckboxAt('after')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"checkbox\\\"></ng-template>\\n</span>\\n<!-- Conditionally renders icons/avatars after the list item text. -->\\n<ng-template [ngIf]=\\\"_hasIconsOrAvatarsAt('after')\\\">\\n  <ng-template [ngTemplateOutlet]=\\\"icons\\\"></ng-template>\\n</ng-template>\\n\\n<!-- Divider -->\\n<ng-content select=\\\"mat-divider\\\"></ng-content>\\n\\n<!--\\n  Strong focus indicator element. MDC uses the `::before` pseudo element for the default\\n  focus/hover/selected state, so we need a separate element.\\n-->\\n<div class=\\\"mat-mdc-focus-indicator\\\"></div>\\n\", styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item,.mat-mdc-list-option-with-trailing-avatar.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end,.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-touch-target-wrapper{display:inline}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mat-mdc-list-option .mdc-checkbox[hidden]{display:none}.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mat-mdc-list-option .mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mat-mdc-list-option .mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0}.mdc-checkbox--upgraded .mat-mdc-list-option .mdc-checkbox__checkmark{opacity:1}.mat-mdc-list-option .mdc-checkbox__checkmark-path{stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mat-mdc-list-option .mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mat-mdc-list-option .mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size, 48px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-list-option .mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 48px)) / 2);width:var(--mdc-checkbox-state-layer-size, 48px);height:var(--mdc-checkbox-state-layer-size, 48px)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}@media all and (-ms-high-contrast: none){.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox .mdc-checkbox__focus-ring{display:none}}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__background{transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__mixedmark{transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mat-mdc-list-option:not(._mat-animation-noopable) .mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mat-mdc-list-option .mdc-checkbox{padding:calc((40px - 18px) / 2);padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);margin:calc((40px - 40px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.38);border-color:var(--mdc-checkbox-disabled-unselected-icon-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:rgba(0, 0, 0, 0.38);background-color:var(--mdc-checkbox-disabled-selected-icon-color, rgba(0, 0, 0, 0.38))}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, #fff)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:#018786;border-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-selected-icon-color, var(--mdc-theme-secondary, #018786))}100%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unselected-icon-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__background{top:calc((40px - 18px) / 2);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2);left:calc((40px - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px) / 2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{top:calc((40px - 40px) / 2);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);right:calc((40px - 40px) / 2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);left:calc((40px - 40px) / 2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px)) / 2);width:40px;width:var(--mdc-checkbox-state-layer-size, 40px);height:40px;height:var(--mdc-checkbox-state-layer-size, 40px)}.mat-mdc-list-option .mdc-checkbox__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SELECTION_LIST]\n                }] }, { type: i1.Platform }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE$1]\n                }] }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatListItemLine, { descendants: true }]\n            }], _titles: [{\n                type: ContentChildren,\n                args: [MatListItemTitle, { descendants: true }]\n            }], _unscopedContent: [{\n                type: ViewChild,\n                args: ['unscopedContent']\n            }], selectedChange: [{\n                type: Output\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-mdc-subheader mdc-list-group__subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    // TODO(mmalerba): MDC's subheader font looks identical to the list item font, figure out why and\n                    //  make a change in one of the repos to visually distinguish.\n                    host: { 'class': 'mat-mdc-subheader mdc-list-group__subheader' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends MatListBase {\n    constructor() {\n        super(...arguments);\n        // An navigation list is considered interactive, but does not extend the interactive list\n        // base class. We do this because as per MDC, items of interactive lists are only reachable\n        // through keyboard shortcuts. We want all items for the navigation list to be reachable\n        // through tab key as we do not intend to provide any special accessibility treatment. The\n        // accessibility treatment depends on how the end-user will interact with it.\n        this._isNonInteractive = false;\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatNavList, selector: \"mat-nav-list\", host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-mdc-nav-list mat-mdc-list-base mdc-list\" }, providers: [{ provide: MatListBase, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', template: '<ng-content></ng-content>', host: {\n                        'class': 'mat-mdc-nav-list mat-mdc-list-base mdc-list',\n                        'role': 'navigation',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MatListBase, useExisting: MatNavList }], styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.options = options;\n    }\n}\nclass MatSelectionList extends MatListBase {\n    constructor(_element, _ngZone) {\n        super();\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._initialized = false;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._multiple = true;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n        this._selectionListDisabled = false;\n        /** Handles focusout events within the list. */\n        this._handleFocusout = () => {\n            // Focus takes a while to update so we have to wrap our call in a timeout.\n            setTimeout(() => {\n                if (!this._containsFocus()) {\n                    this._resetActiveOption();\n                }\n            });\n        };\n        /** Handles focusin events within the list. */\n        this._handleFocusin = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const activeIndex = this._items\n                .toArray()\n                .findIndex(item => item._elementRef.nativeElement.contains(event.target));\n            if (activeIndex > -1) {\n                this._setActiveOption(activeIndex);\n            }\n            else {\n                this._resetActiveOption();\n            }\n        };\n        this._isNonInteractive = false;\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterViewInit() {\n        // Mark the selection list as initialized so that the `multiple`\n        // binding can no longer be changed.\n        this._initialized = true;\n        this._setupRovingTabindex();\n        // These events are bound outside the zone, because they don't change\n        // any change-detected properties and they can trigger timeouts.\n        this._ngZone.runOutsideAngular(() => {\n            this._element.nativeElement.addEventListener('focusin', this._handleFocusin);\n            this._element.nativeElement.addEventListener('focusout', this._handleFocusout);\n        });\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n        const disabledChanges = changes['disabled'];\n        const disableRippleChanges = changes['disableRipple'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (disabledChanges && !disabledChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._element.nativeElement.removeEventListener('focusin', this._handleFocusin);\n        this._element.nativeElement.removeEventListener('focusout', this._handleFocusout);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n        return this._selectionListDisabled;\n    }\n    set disabled(value) {\n        // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n        // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n        // a super property.\n        this._selectionListDisabled = coerceBooleanProperty(value);\n        if (this._selectionListDisabled) {\n            this._keyManager?.setActiveItem(-1);\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            // Sync external changes to the model back to the options.\n            for (let item of event.added) {\n                item.selected = true;\n            }\n            for (let item of event.removed) {\n                item.selected = false;\n            }\n            if (!this._containsFocus()) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n        }\n        return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n        return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n        const activeItem = this._keyManager.activeItem;\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this._keyManager.isTyping() &&\n            activeItem &&\n            !activeItem.disabled) {\n            event.preventDefault();\n            activeItem._toggleOnInteraction();\n        }\n        else if (event.keyCode === A &&\n            this.multiple &&\n            !this._keyManager.isTyping() &&\n            hasModifierKey(event, 'ctrlKey')) {\n            const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n            event.preventDefault();\n            this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHomeAndEnd()\n            .withTypeAhead()\n            .withWrap()\n            .skipPredicate(() => this.disabled);\n        // Set the initial focus.\n        this._resetActiveOption();\n        // Move the tabindex to the currently-focused list item.\n        this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n        // If the active item is removed from the list, reset back to the first one.\n        this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const activeItem = this._keyManager.activeItem;\n            if (!activeItem || !this._items.toArray().indexOf(activeItem)) {\n                this._resetActiveOption();\n            }\n        });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n        this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n        this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n        if (this.disabled) {\n            this._setActiveOption(-1);\n            return;\n        }\n        const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n        this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { color: \"color\", compareWith: \"compareWith\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\" }, classAttribute: \"mat-mdc-selection-list mat-mdc-list-base mdc-list\" }, providers: [\n        MAT_SELECTION_LIST_VALUE_ACCESSOR,\n        { provide: MatListBase, useExisting: MatSelectionList },\n        { provide: SELECTION_LIST, useExisting: MatSelectionList },\n    ], queries: [{ propertyName: \"_items\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', host: {\n                        'class': 'mat-mdc-selection-list mat-mdc-list-base mdc-list',\n                        'role': 'listbox',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [\n                        MAT_SELECTION_LIST_VALUE_ACCESSOR,\n                        { provide: MatListBase, useExisting: MatSelectionList },\n                        { provide: SELECTION_LIST, useExisting: MatSelectionList },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mdc-list-item--with-leading-avatar .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-icon .mdc-list-item__start{width:24px;height:24px}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-image .mdc-list-item__start{width:56px;height:56px}.mdc-list-item--with-leading-video .mdc-list-item__start{width:100px;height:56px}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-radio .mdc-list-item__start{width:40px;height:40px}.mdc-list-item--with-leading-switch .mdc-list-item__start{width:36px;height:20px}.mdc-list-item--with-trailing-icon .mdc-list-item__end{width:24px;height:24px}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-radio .mdc-list-item__end{width:40px;height:40px}.mdc-list-item--with-trailing-switch .mdc-list-item__end{width:36px;height:20px}.mdc-list-divider{height:1px}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-list-divider::after{content:\\\"\\\";display:block;border-bottom-width:1px;border-bottom-style:solid}}.mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item__wrapper{display:block}.mdc-list-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer}.mdc-list-item:focus{outline:none}.mdc-list-item.mdc-list-item--with-one-line{height:48px}.mdc-list-item.mdc-list-item--with-two-lines{height:64px}.mdc-list-item.mdc-list-item--with-three-lines{height:88px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--disabled,.mdc-list-item.mdc-list-item--non-interactive{cursor:auto}.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item:not(.mdc-list-item--selected):focus::before,.mdc-list-item.mdc-ripple-upgraded--background-focused::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px double rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected::before{border-color:CanvasText}}.mdc-list-item.mdc-list-item--selected:focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:3px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-list-item.mdc-list-item--selected:focus::before{border-color:CanvasText}}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__content[for]{pointer-events:none}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item__overline-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:24px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start,.mdc-list-item--with-leading-avatar .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-avatar .mdc-list-item__start{border-radius:50%}.mdc-list-item--with-leading-icon.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-leading-icon .mdc-list-item__start[dir=rtl]{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-thumbnail.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-thumbnail.mdc-list-item,.mdc-list-item--with-leading-thumbnail.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-thumbnail .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-thumbnail .mdc-list-item__start,.mdc-list-item--with-leading-thumbnail .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-thumbnail.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-image.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-image.mdc-list-item,.mdc-list-item--with-leading-image.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-image .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-image .mdc-list-item__start,.mdc-list-item--with-leading-image .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-image.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-image.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-video.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-video.mdc-list-item,.mdc-list-item--with-leading-video.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-video .mdc-list-item__start{margin-left:0;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-video .mdc-list-item__start,.mdc-list-item--with-leading-video .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-video.mdc-list-item--with-one-line{height:72px}.mdc-list-item--with-leading-video.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-checkbox.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-radio.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-radio.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-radio .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-radio .mdc-list-item__start[dir=rtl]{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-leading-switch.mdc-list-item{padding-left:0;padding-right:auto}[dir=rtl] .mdc-list-item--with-leading-switch.mdc-list-item,.mdc-list-item--with-leading-switch.mdc-list-item[dir=rtl]{padding-left:auto;padding-right:0}.mdc-list-item--with-leading-switch .mdc-list-item__start{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-leading-switch .mdc-list-item__start,.mdc-list-item--with-leading-switch .mdc-list-item__start[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines .mdc-list-item__overline-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-switch.mdc-list-item--with-one-line{height:56px}.mdc-list-item--with-leading-switch.mdc-list-item--with-two-lines{height:72px}.mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item,.mdc-list-item--with-trailing-icon.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-icon .mdc-list-item__end,.mdc-list-item--with-trailing-icon .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item,.mdc-list-item--with-trailing-meta.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-trailing-meta .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-radio.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-radio .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-radio .mdc-list-item__end[dir=rtl]{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-switch.mdc-list-item{padding-left:auto;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-switch.mdc-list-item,.mdc-list-item--with-trailing-switch.mdc-list-item[dir=rtl]{padding-left:0;padding-right:auto}.mdc-list-item--with-trailing-switch .mdc-list-item__end{margin-left:16px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-switch .mdc-list-item__end,.mdc-list-item--with-trailing-switch .mdc-list-item__end[dir=rtl]{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-switch.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-overline.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item{padding-left:16px;padding-right:16px}[dir=rtl] .mdc-list-item,.mdc-list-item[dir=rtl]{padding-left:16px;padding-right:16px}.mdc-list-group .mdc-deprecated-list{padding:0}.mdc-list-group__subheader{margin:calc((3rem - 1.5rem)/2) 16px}.mdc-list-divider{padding:0;background-clip:content-box}.mdc-list-divider.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset{padding-left:16px;padding-right:auto}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset,.mdc-list-divider.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-leading-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:16px}.mdc-list-divider.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset{padding-left:auto;padding-right:16px}[dir=rtl] .mdc-list-divider.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset,[dir=rtl] .mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset,.mdc-list-divider.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-text.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-icon.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-image.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-thumbnail.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-avatar.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-checkbox.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-switch.mdc-list-divider--with-trailing-inset[dir=rtl],.mdc-list-divider--with-leading-radio.mdc-list-divider--with-trailing-inset[dir=rtl]{padding-left:16px;padding-right:auto}.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset{padding-left:0px;padding-right:auto}[dir=rtl] .mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset,.mdc-list-divider--with-leading-video.mdc-list-divider--with-leading-inset[dir=rtl]{padding-left:auto;padding-right:0px}[dir=rtl] .mdc-list-divider,.mdc-list-divider[dir=rtl]{padding:0}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatActionList,\n        MatNavList,\n        MatSelectionList,\n        MatListItem,\n        MatListOption,\n        MatListSubheaderCssMatStyler,\n        MatListItemAvatar,\n        MatListItemIcon,\n        MatListItemLine,\n        MatListItemTitle,\n        MatListItemMeta], imports: [ObserversModule,\n        CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        MatPseudoCheckboxModule], exports: [MatList,\n        MatActionList,\n        MatNavList,\n        MatSelectionList,\n        MatListItem,\n        MatListOption,\n        MatListItemAvatar,\n        MatListItemIcon,\n        MatListSubheaderCssMatStyler,\n        MatDividerModule,\n        MatListItemLine,\n        MatListItemTitle,\n        MatListItemMeta] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListModule, imports: [ObserversModule,\n        CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        MatPseudoCheckboxModule, MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        ObserversModule,\n                        CommonModule,\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatPseudoCheckboxModule,\n                    ],\n                    exports: [\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListSubheaderCssMatStyler,\n                        MatDividerModule,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatActionList,\n                        MatNavList,\n                        MatSelectionList,\n                        MatListItem,\n                        MatListOption,\n                        MatListSubheaderCssMatStyler,\n                        MatListItemAvatar,\n                        MatListItemIcon,\n                        MatListItemLine,\n                        MatListItemTitle,\n                        MatListItemMeta,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n","import * as i2$1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n        this._cdr = _cdr;\n        this._ngZone = _ngZone;\n        this._slider = _slider;\n        /** Whether the slider thumb is currently being hovered. */\n        this._isHovered = false;\n        /** Whether the slider thumb is currently being pressed. */\n        this._isActive = false;\n        /** Whether the value indicator tooltip is visible. */\n        this._isValueIndicatorVisible = false;\n        this._onPointerMove = (event) => {\n            if (this._sliderInput._isFocused) {\n                return;\n            }\n            const rect = this._hostElement.getBoundingClientRect();\n            const isHovered = this._isSliderThumbHovered(event, rect);\n            this._isHovered = isHovered;\n            if (isHovered) {\n                this._showHoverRipple();\n            }\n            else {\n                this._hideRipple(this._hoverRippleRef);\n            }\n        };\n        this._onMouseLeave = () => {\n            this._isHovered = false;\n            this._hideRipple(this._hoverRippleRef);\n        };\n        this._onFocus = () => {\n            // We don't want to show the hover ripple on top of the focus ripple.\n            // Happen when the users cursor is over a thumb and then the user tabs to it.\n            this._hideRipple(this._hoverRippleRef);\n            this._showFocusRipple();\n            this._hostElement.classList.add('mdc-slider__thumb--focused');\n        };\n        this._onBlur = () => {\n            // Happens when the user tabs away while still dragging a thumb.\n            if (!this._isActive) {\n                this._hideRipple(this._focusRippleRef);\n            }\n            // Happens when the user tabs away from a thumb but their cursor is still over it.\n            if (this._isHovered) {\n                this._showHoverRipple();\n            }\n            this._hostElement.classList.remove('mdc-slider__thumb--focused');\n        };\n        this._onDragStart = () => {\n            this._isActive = true;\n            this._showActiveRipple();\n        };\n        this._onDragEnd = () => {\n            this._isActive = false;\n            this._hideRipple(this._activeRippleRef);\n            // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n            if (!this._sliderInput._isFocused) {\n                this._hideRipple(this._focusRippleRef);\n            }\n        };\n        this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        this._ripple.radius = 24;\n        this._sliderInput = this._slider._getInput(this.thumbPosition);\n        this._sliderInputEl = this._sliderInput._hostElement;\n        const input = this._sliderInputEl;\n        // These listeners don't update any data bindings so we bind them outside\n        // of the NgZone to prevent Angular from needlessly running change detection.\n        this._ngZone.runOutsideAngular(() => {\n            input.addEventListener('pointermove', this._onPointerMove);\n            input.addEventListener('pointerdown', this._onDragStart);\n            input.addEventListener('pointerup', this._onDragEnd);\n            input.addEventListener('pointerleave', this._onMouseLeave);\n            input.addEventListener('focus', this._onFocus);\n            input.addEventListener('blur', this._onBlur);\n        });\n    }\n    ngOnDestroy() {\n        const input = this._sliderInputEl;\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n        if (!this._isShowingRipple(this._hoverRippleRef)) {\n            this._hoverRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 });\n            this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n        }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n        // Show the focus ripple event if noop animations are enabled.\n        if (!this._isShowingRipple(this._focusRippleRef)) {\n            this._focusRippleRef = this._showRipple({ enterDuration: 0, exitDuration: 0 }, true);\n            this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n        }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n        if (!this._isShowingRipple(this._activeRippleRef)) {\n            this._activeRippleRef = this._showRipple({ enterDuration: 225, exitDuration: 400 });\n            this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n        }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n        return rippleRef?.state === 0 /* RippleState.FADING_IN */ || rippleRef?.state === 1 /* RippleState.VISIBLE */;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n        if (this._slider.disabled) {\n            return;\n        }\n        this._showValueIndicator();\n        if (this._slider._isRange) {\n            const sibling = this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n            sibling._showValueIndicator();\n        }\n        if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n            return;\n        }\n        return this._ripple.launch({\n            animation: this._slider._noopAnimations ? { enterDuration: 0, exitDuration: 0 } : animation,\n            centered: true,\n            persistent: true,\n        });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n        rippleRef?.fadeOut();\n        if (this._isShowingAnyRipple()) {\n            return;\n        }\n        if (!this._slider._isRange) {\n            this._hideValueIndicator();\n        }\n        const sibling = this._getSibling();\n        if (!sibling._isShowingAnyRipple()) {\n            this._hideValueIndicator();\n            sibling._hideValueIndicator();\n        }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n        this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n        this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n        return this._slider._getThumb(this.thumbPosition === 1 /* _MatThumb.START */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n        return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n        return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n        return (this._isShowingRipple(this._hoverRippleRef) ||\n            this._isShowingRipple(this._focusRippleRef) ||\n            this._isShowingRipple(this._activeRippleRef));\n    }\n    _isSliderThumbHovered(event, rect) {\n        const radius = rect.width / 2;\n        const centerX = rect.x + radius;\n        const centerY = rect.y + radius;\n        const dx = event.clientX - centerX;\n        const dy = event.clientY - centerY;\n        return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n}\nMatSliderVisualThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderVisualThumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Component });\nMatSliderVisualThumb.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: { discrete: \"discrete\", thumbPosition: \"thumbPosition\", valueIndicatorText: \"valueIndicatorText\" }, host: { classAttribute: \"mdc-slider__thumb mat-mdc-slider-visual-thumb\" }, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], viewQueries: [{ propertyName: \"_ripple\", first: true, predicate: MatRipple, descendants: true }, { propertyName: \"_knob\", first: true, predicate: [\"knob\"], descendants: true }, { propertyName: \"_valueIndicatorContainer\", first: true, predicate: [\"valueIndicatorContainer\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderVisualThumb, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider-visual-thumb', host: {\n                        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MAT_SLIDER_VISUAL_THUMB, useExisting: MatSliderVisualThumb }], template: \"<div class=\\\"mdc-slider__value-indicator-container\\\" *ngIf=\\\"discrete\\\" #valueIndicatorContainer>\\n  <div class=\\\"mdc-slider__value-indicator\\\">\\n    <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n  </div>\\n</div>\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-mdc-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\", styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { discrete: [{\n                type: Input\n            }], thumbPosition: [{\n                type: Input\n            }], valueIndicatorText: [{\n                type: Input\n            }], _ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], _knob: [{\n                type: ViewChild,\n                args: ['knob']\n            }], _valueIndicatorContainer: [{\n                type: ViewChild,\n                args: ['valueIndicatorContainer']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n// Boilerplate for applying mixins to MatSlider.\nconst _MatSliderMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(_ngZone, _cdr, _platform, elementRef, _dir, _globalRippleOptions, animationMode) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._cdr = _cdr;\n        this._platform = _platform;\n        this._dir = _dir;\n        this._globalRippleOptions = _globalRippleOptions;\n        this._disabled = false;\n        this._discrete = false;\n        this._showTickMarks = false;\n        this._min = 0;\n        this._max = 100;\n        this._step = 0;\n        /**\n         * Function that will be used to format the value before it is displayed\n         * in the thumb label. Can be used to format very large number in order\n         * for them to fit into the slider thumb.\n         */\n        this.displayWith = (value) => `${value}`;\n        this._rippleRadius = 24;\n        // The value indicator tooltip text for the visual slider thumb(s).\n        /** @docs-private */\n        this.startValueIndicatorText = '';\n        /** @docs-private */\n        this.endValueIndicatorText = '';\n        this._isRange = false;\n        /** Whether the slider is rtl. */\n        this._isRtl = false;\n        this._hasViewInitialized = false;\n        /**\n         * The width of the tick mark track.\n         * The tick mark track width is different from full track width\n         */\n        this._tickMarkTrackWidth = 0;\n        this._hasAnimation = false;\n        this._resizeTimer = null;\n        /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n        this._knobRadius = 8;\n        /** Whether or not the slider thumbs overlap. */\n        this._thumbsOverlap = false;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n        this._isRtl = this._dir.value === 'rtl';\n    }\n    /** Whether the slider is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(v) {\n        this._disabled = coerceBooleanProperty(v);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        if (endInput) {\n            endInput.disabled = this._disabled;\n        }\n        if (startInput) {\n            startInput.disabled = this._disabled;\n        }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n        return this._discrete;\n    }\n    set discrete(v) {\n        this._discrete = coerceBooleanProperty(v);\n        this._updateValueIndicatorUIs();\n    }\n    /** Whether the slider displays tick marks along the slider track. */\n    get showTickMarks() {\n        return this._showTickMarks;\n    }\n    set showTickMarks(v) {\n        this._showTickMarks = coerceBooleanProperty(v);\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        const min = coerceNumberProperty(v, this._min);\n        if (this._min !== min) {\n            this._updateMin(min);\n        }\n    }\n    _updateMin(min) {\n        const prevMin = this._min;\n        this._min = min;\n        this._isRange ? this._updateMinRange({ old: prevMin, new: min }) : this._updateMinNonRange(min);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        startInput.min = min.new;\n        endInput.min = Math.max(min.new, startInput.value);\n        startInput.max = Math.min(endInput.max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        min.new < min.old\n            ? this._onTranslateXChangeBySideEffect(endInput, startInput)\n            : this._onTranslateXChangeBySideEffect(startInput, endInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMinNonRange(min) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.min = min;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        const max = coerceNumberProperty(v, this._max);\n        if (this._max !== max) {\n            this._updateMax(max);\n        }\n    }\n    _updateMax(max) {\n        const prevMax = this._max;\n        this._max = max;\n        this._isRange ? this._updateMaxRange({ old: prevMax, new: max }) : this._updateMaxNonRange(max);\n        this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        endInput.max = max.new;\n        startInput.max = Math.min(max.new, endInput.value);\n        endInput.min = startInput.value;\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        max.new > max.old\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateMaxNonRange(max) {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.max = max;\n            input._updateThumbUIByValue();\n            this._updateTrackUI(input);\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        const step = coerceNumberProperty(v, this._step);\n        if (this._step !== step) {\n            this._updateStep(step);\n        }\n    }\n    _updateStep(step) {\n        this._step = step;\n        this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n        this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const oldEndValue = endInput.value;\n        const oldStartValue = startInput.value;\n        const prevStartValue = startInput.value;\n        endInput.min = this._min;\n        startInput.max = this._max;\n        endInput.step = this._step;\n        startInput.step = this._step;\n        if (this._platform.SAFARI) {\n            endInput.value = endInput.value;\n            startInput.value = startInput.value;\n        }\n        endInput.min = Math.max(this._min, startInput.value);\n        startInput.max = Math.min(this._max, endInput.value);\n        startInput._updateWidthInactive();\n        endInput._updateWidthInactive();\n        endInput.value < prevStartValue\n            ? this._onTranslateXChangeBySideEffect(startInput, endInput)\n            : this._onTranslateXChangeBySideEffect(endInput, startInput);\n        if (oldEndValue !== endInput.value) {\n            this._onValueChange(endInput);\n        }\n        if (oldStartValue !== startInput.value) {\n            this._onValueChange(startInput);\n        }\n    }\n    _updateStepNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        if (input) {\n            const oldValue = input.value;\n            input.step = this._step;\n            if (this._platform.SAFARI) {\n                input.value = input.value;\n            }\n            input._updateThumbUIByValue();\n            if (oldValue !== input.value) {\n                this._onValueChange(input);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._updateDimensions();\n        }\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        this._isRange = !!eInput && !!sInput;\n        this._cdr.detectChanges();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _validateInputs(this._isRange, this._getInput(2 /* _MatThumb.END */), this._getInput(1 /* _MatThumb.START */));\n        }\n        const thumb = this._getThumb(2 /* _MatThumb.END */);\n        this._rippleRadius = thumb._ripple.radius;\n        this._inputPadding = this._rippleRadius - this._knobRadius;\n        this._inputOffset = this._knobRadius;\n        this._isRange\n            ? this._initUIRange(eInput, sInput)\n            : this._initUINonRange(eInput);\n        this._updateTrackUI(eInput);\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._observeHostResize();\n        this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n        eInput.initProps();\n        eInput.initUI();\n        this._updateValueIndicatorUI(eInput);\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n        eInput.initProps();\n        eInput.initUI();\n        sInput.initProps();\n        sInput.initUI();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        this._updateValueIndicatorUIs();\n        this._hasViewInitialized = true;\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._resizeObserver?.disconnect();\n        this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n        this._isRtl = this._dir.value === 'rtl';\n        this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n        this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        endInput._setIsLeftThumb();\n        startInput._setIsLeftThumb();\n        endInput.translateX = endInput._calcTranslateXByValue();\n        startInput.translateX = startInput._calcTranslateXByValue();\n        endInput._updateStaticStyles();\n        startInput._updateStaticStyles();\n        endInput._updateWidthInactive();\n        startInput._updateWidthInactive();\n        endInput._updateThumbUIByValue();\n        startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n        const input = this._getInput(2 /* _MatThumb.END */);\n        input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n        if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeObserver = new ResizeObserver(() => {\n                if (this._isActive()) {\n                    return;\n                }\n                if (this._resizeTimer) {\n                    clearTimeout(this._resizeTimer);\n                }\n                this._onResize();\n            });\n            this._resizeObserver.observe(this._elementRef.nativeElement);\n        });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n        return this._getThumb(1 /* _MatThumb.START */)._isActive || this._getThumb(2 /* _MatThumb.END */)._isActive;\n    }\n    _getValue(thumbPosition = 2 /* _MatThumb.END */) {\n        const input = this._getInput(thumbPosition);\n        if (!input) {\n            return this.min;\n        }\n        return input.value;\n    }\n    _skipUpdate() {\n        return !!(this._getInput(1 /* _MatThumb.START */)?._skipUIUpdate || this._getInput(2 /* _MatThumb.END */)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n        this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n        this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n        const trackStyle = this._trackActive.nativeElement.style;\n        const animationOriginChanged = styles.left !== trackStyle.left && styles.right !== trackStyle.right;\n        trackStyle.left = styles.left;\n        trackStyle.right = styles.right;\n        trackStyle.transformOrigin = styles.transformOrigin;\n        if (animationOriginChanged) {\n            this._elementRef.nativeElement.classList.add('mat-mdc-slider-disable-track-animation');\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                this._elementRef.nativeElement.classList.remove('mat-mdc-slider-disable-track-animation');\n                trackStyle.transform = styles.transform;\n            });\n        }\n        else {\n            trackStyle.transform = styles.transform;\n        }\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n        // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n        const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n        return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateThumbUI(source);\n        this._updateTrackUI(source);\n        this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        input1._updateThumbUIByValue();\n        input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateValueIndicatorUI(source);\n        this._updateTickMarkUI();\n        this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.markForCheck();\n    }\n    _onResize() {\n        if (!this._hasViewInitialized) {\n            return;\n        }\n        this._updateDimensions();\n        if (this._isRange) {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            const sInput = this._getInput(1 /* _MatThumb.START */);\n            eInput._updateThumbUIByValue();\n            sInput._updateThumbUIByValue();\n            eInput._updateStaticStyles();\n            sInput._updateStaticStyles();\n            eInput._updateMinMax();\n            sInput._updateMinMax();\n            eInput._updateWidthInactive();\n            sInput._updateWidthInactive();\n        }\n        else {\n            const eInput = this._getInput(2 /* _MatThumb.END */);\n            if (eInput) {\n                eInput._updateThumbUIByValue();\n            }\n        }\n        this._updateTickMarkUI();\n        this._updateTickMarkTrackUI();\n        this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n        const startInput = this._getInput(1 /* _MatThumb.START */);\n        const endInput = this._getInput(2 /* _MatThumb.END */);\n        if (!startInput || !endInput) {\n            return false;\n        }\n        return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n        const sibling = source.getSibling();\n        const sourceThumb = this._getThumb(source.thumbPosition);\n        const siblingThumb = this._getThumb(sibling.thumbPosition);\n        siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n        sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n        if (!this._isRange || this._skipUpdate()) {\n            return;\n        }\n        if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n            this._thumbsOverlap = !this._thumbsOverlap;\n            this._updateOverlappingThumbClassNames(source);\n        }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const thumb = this._getThumb(source.thumbPosition === 2 /* _MatThumb.END */ ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */);\n        thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const valuetext = this.displayWith(source.value);\n        this._hasViewInitialized\n            ? (source._valuetext = valuetext)\n            : source._hostElement.setAttribute('aria-valuetext', valuetext);\n        if (this.discrete) {\n            source.thumbPosition === 1 /* _MatThumb.START */\n                ? (this.startValueIndicatorText = valuetext)\n                : (this.endValueIndicatorText = valuetext);\n            const visualThumb = this._getThumb(source.thumbPosition);\n            valuetext.length < 3\n                ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value')\n                : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n        }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n        const eInput = this._getInput(2 /* _MatThumb.END */);\n        const sInput = this._getInput(1 /* _MatThumb.START */);\n        if (eInput) {\n            this._updateValueIndicatorUI(eInput);\n        }\n        if (sInput) {\n            this._updateValueIndicatorUI(sInput);\n        }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n        if (this._skipUpdate()) {\n            return;\n        }\n        const step = this._step && this._step > 0 ? this._step : 1;\n        const maxValue = Math.floor(this.max / step) * step;\n        const percentage = (maxValue - this.min) / (this.max - this.min);\n        this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n        if (this._skipUpdate()) {\n            return;\n        }\n        this._isRange\n            ? this._updateTrackUIRange(source)\n            : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n        const sibling = source.getSibling();\n        if (!sibling || !this._cachedWidth) {\n            return;\n        }\n        const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n        if (source._isLeftThumb && this._cachedWidth) {\n            this._setTrackActiveStyles({\n                left: 'auto',\n                right: `${this._cachedWidth - sibling.translateX}px`,\n                transformOrigin: 'right',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n        else {\n            this._setTrackActiveStyles({\n                left: `${sibling.translateX}px`,\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${activePercentage})`,\n            });\n        }\n    }\n    _updateTrackUINonRange(source) {\n        this._isRtl\n            ? this._setTrackActiveStyles({\n                left: 'auto',\n                right: '0px',\n                transformOrigin: 'right',\n                transform: `scaleX(${1 - source.fillPercentage})`,\n            })\n            : this._setTrackActiveStyles({\n                left: '0px',\n                right: 'auto',\n                transformOrigin: 'left',\n                transform: `scaleX(${source.fillPercentage})`,\n            });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n        if (this.step === undefined || this.min === undefined || this.max === undefined) {\n            return;\n        }\n        const step = this.step > 0 ? this.step : 1;\n        this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n        if (this._isRtl) {\n            this._tickMarks.reverse();\n        }\n    }\n    _updateTickMarkUINonRange(step) {\n        const value = this._getValue();\n        let numActive = Math.max(Math.round((value - this.min) / step), 0);\n        let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n        this._isRtl ? numActive++ : numInactive++;\n        this._tickMarks = Array(numActive)\n            .fill(0 /* _MatTickMark.ACTIVE */)\n            .concat(Array(numInactive).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    _updateTickMarkUIRange(step) {\n        const endValue = this._getValue();\n        const startValue = this._getValue(1 /* _MatThumb.START */);\n        const numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0);\n        const numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0);\n        const numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);\n        this._tickMarks = Array(numInactiveBeforeStartThumb)\n            .fill(1 /* _MatTickMark.INACTIVE */)\n            .concat(Array(numActive).fill(0 /* _MatTickMark.ACTIVE */), Array(numInactiveAfterEndThumb).fill(1 /* _MatTickMark.INACTIVE */));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n        if (thumbPosition === 2 /* _MatThumb.END */ && this._input) {\n            return this._input;\n        }\n        if (this._inputs?.length) {\n            return thumbPosition === 1 /* _MatThumb.START */ ? this._inputs.first : this._inputs.last;\n        }\n        return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n        return thumbPosition === 2 /* _MatThumb.END */ ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n        this._hasAnimation = withAnimation && !this._noopAnimations;\n        this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSlider, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: i0.ElementRef }, { token: i2$1.Directionality, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSlider, selector: \"mat-slider\", inputs: { color: \"color\", disableRipple: \"disableRipple\", disabled: \"disabled\", discrete: \"discrete\", showTickMarks: \"showTickMarks\", min: \"min\", max: \"max\", step: \"step\", displayWith: \"displayWith\" }, host: { properties: { \"class.mdc-slider--range\": \"_isRange\", \"class.mdc-slider--disabled\": \"disabled\", \"class.mdc-slider--discrete\": \"discrete\", \"class.mdc-slider--tick-marks\": \"showTickMarks\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slider mdc-slider\" }, providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], queries: [{ propertyName: \"_input\", first: true, predicate: MAT_SLIDER_THUMB, descendants: true }, { propertyName: \"_inputs\", predicate: MAT_SLIDER_RANGE_THUMB }], viewQueries: [{ propertyName: \"_trackActive\", first: true, predicate: [\"trackActive\"], descendants: true }, { propertyName: \"_thumbs\", predicate: MAT_SLIDER_VISUAL_THUMB, descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatSliderVisualThumb, selector: \"mat-slider-visual-thumb\", inputs: [\"discrete\", \"thumbPosition\", \"valueIndicatorText\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', host: {\n                        'class': 'mat-mdc-slider mdc-slider',\n                        '[class.mdc-slider--range]': '_isRange',\n                        '[class.mdc-slider--disabled]': 'disabled',\n                        '[class.mdc-slider--discrete]': 'discrete',\n                        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlider', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, inputs: ['color', 'disableRipple'], providers: [{ provide: MAT_SLIDER, useExisting: MatSlider }], template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"showTickMarks\\\" class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n    <ng-container *ngIf=\\\"_cachedWidth\\\">\\n        <div\\n          *ngFor=\\\"let tickMark of _tickMarks; let i = index\\\"\\n          [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n          [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Thumbs -->\\n<mat-slider-visual-thumb\\n  *ngIf=\\\"_isRange\\\"\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"1\\\"\\n  [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\", styles: [\".mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden;top:-1px}.mdc-slider .mdc-slider__track--active_fill{border-top:6px solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:0;margin:0;height:100%;opacity:0;pointer-events:none;position:absolute;top:0;width:100%}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-font-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation.mat-mdc-slider-disable-track-animation .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: i0.ElementRef }, { type: i2$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _trackActive: [{\n                type: ViewChild,\n                args: ['trackActive']\n            }], _thumbs: [{\n                type: ViewChildren,\n                args: [MAT_SLIDER_VISUAL_THUMB]\n            }], _input: [{\n                type: ContentChild,\n                args: [MAT_SLIDER_THUMB]\n            }], _inputs: [{\n                type: ContentChildren,\n                args: [MAT_SLIDER_RANGE_THUMB, { descendants: false }]\n            }], disabled: [{\n                type: Input\n            }], discrete: [{\n                type: Input\n            }], showTickMarks: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }] } });\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n    const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n    const endValid = endInputElement._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n    if (!startValid || !endValid) {\n        _throwInvalidInputConfigurationError();\n    }\n}\nfunction _throwInvalidInputConfigurationError() {\n    throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderThumb),\n    multi: true,\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSliderRangeThumb),\n    multi: true,\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._cdr = _cdr;\n        this._slider = _slider;\n        /** Event emitted when the `value` is changed. */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the slider thumb starts being dragged. */\n        this.dragStart = new EventEmitter();\n        /** Event emitted when the slider thumb stops being dragged. */\n        this.dragEnd = new EventEmitter();\n        /**\n         * Indicates whether this thumb is the start or end thumb.\n         * @docs-private\n         */\n        this.thumbPosition = 2 /* _MatThumb.END */;\n        /** The radius of a native html slider's knob. */\n        this._knobRadius = 8;\n        /** Whether user's cursor is currently in a mouse down state on the input. */\n        this._isActive = false;\n        /** Whether the input is currently focused (either by tab or after clicking). */\n        this._isFocused = false;\n        /**\n         * Whether the initial value has been set.\n         * This exists because the initial value cannot be immediately set because the min and max\n         * must first be relayed from the parent MatSlider component, which can only happen later\n         * in the component lifecycle.\n         */\n        this._hasSetInitialValue = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Indicates whether UI updates should be skipped.\n         *\n         * This flag is used to avoid flickering\n         * when correcting values on pointer up/down.\n         */\n        this._skipUIUpdate = false;\n        /** Callback called when the slider input value changes. */\n        this._onChangeFn = () => { };\n        /** Callback called when the slider input has been touched. */\n        this._onTouchedFn = () => { };\n        this._hostElement = _elementRef.nativeElement;\n        this._ngZone.runOutsideAngular(() => {\n            this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n            this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n            this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n        });\n    }\n    get value() {\n        return coerceNumberProperty(this._hostElement.value);\n    }\n    set value(v) {\n        const val = coerceNumberProperty(v).toString();\n        if (!this._hasSetInitialValue) {\n            this._initialValue = val;\n            return;\n        }\n        if (this._isActive) {\n            return;\n        }\n        this._hostElement.value = val;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n        if (this._slider.min >= this._slider.max) {\n            this._translateX = 0;\n            return this._translateX;\n        }\n        if (this._translateX === undefined) {\n            this._translateX = this._calcTranslateXByValue();\n        }\n        return this._translateX;\n    }\n    set translateX(v) {\n        this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n        return coerceNumberProperty(this._hostElement.min);\n    }\n    set min(v) {\n        this._hostElement.min = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n        return coerceNumberProperty(this._hostElement.max);\n    }\n    set max(v) {\n        this._hostElement.max = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    get step() {\n        return coerceNumberProperty(this._hostElement.step);\n    }\n    set step(v) {\n        this._hostElement.step = coerceNumberProperty(v).toString();\n        this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n        return coerceBooleanProperty(this._hostElement.disabled);\n    }\n    set disabled(v) {\n        this._hostElement.disabled = coerceBooleanProperty(v);\n        this._cdr.detectChanges();\n        if (this._slider.disabled !== this.disabled) {\n            this._slider.disabled = this.disabled;\n        }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n        if (this._slider.min >= this._slider.max) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n        if (!this._slider._cachedWidth) {\n            return this._slider._isRtl ? 1 : 0;\n        }\n        if (this._translateX === 0) {\n            return 0;\n        }\n        return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n        this._isFocused = v;\n    }\n    ngOnDestroy() {\n        this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n        this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n        this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.dragStart.complete();\n        this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n        this._updateWidthInactive();\n        // If this or the parent slider is disabled, just make everything disabled.\n        if (this.disabled !== this._slider.disabled) {\n            // The MatSlider setter for disabled will relay this and disable both inputs.\n            this._slider.disabled = true;\n        }\n        this.step = this._slider.step;\n        this.min = this._slider.min;\n        this.max = this._slider.max;\n        this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n        this._updateThumbUIByValue();\n    }\n    _initValue() {\n        this._hasSetInitialValue = true;\n        if (this._initialValue === undefined) {\n            this.value = this._getDefaultValue();\n        }\n        else {\n            this._hostElement.value = this._initialValue;\n            this._updateThumbUIByValue();\n            this._slider._onValueChange(this);\n            this._cdr.detectChanges();\n        }\n    }\n    _getDefaultValue() {\n        return this.min;\n    }\n    _onBlur() {\n        this._setIsFocused(false);\n        this._onTouchedFn();\n    }\n    _onFocus() {\n        this._setIsFocused(true);\n    }\n    _onChange() {\n        // only used to handle the edge case where user\n        // mousedown on the slider then uses arrow keys.\n        if (this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n    }\n    _onInput() {\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        // handles arrowing and updating the value when\n        // a step is defined.\n        if (this._slider.step || !this._isActive) {\n            this._updateThumbUIByValue({ withAnimation: true });\n        }\n        this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n        // only used to handle when the value change\n        // originates outside of the slider.\n        if (!this._isActive || !this._isFocused) {\n            this._slider._onValueChange(this);\n            this._updateThumbUIByValue();\n        }\n        this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n        if (this.disabled || event.button !== 0) {\n            return;\n        }\n        this._isActive = true;\n        this._setIsFocused(true);\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        // Does nothing if a step is defined because we\n        // want the value to snap to the values on input.\n        if (!this._slider.step) {\n            this._updateThumbUIByPointerEvent(event, { withAnimation: true });\n        }\n        if (!this.disabled) {\n            this._handleValueCorrection(event);\n        }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n        // Don't update the UI with the current value! The value on pointerdown\n        // and pointerup is calculated in the split second before the input(s)\n        // resize. See _updateWidthInactive() and _updateWidthActive() for more\n        // details.\n        this._skipUIUpdate = true;\n        // Note that this function gets triggered before the actual value of the\n        // slider is updated. This means if we were to set the value here, it\n        // would immediately be overwritten. Using setTimeout ensures the setting\n        // of the value happens after the value has been updated by the\n        // pointerdown event.\n        setTimeout(() => {\n            this._skipUIUpdate = false;\n            this._fixValue(event);\n        }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n        const xPos = event.clientX - this._slider._cachedLeft;\n        const width = this._slider._cachedWidth;\n        const step = this._slider.step === 0 ? 1 : this._slider.step;\n        const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n        const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n        // To ensure the percentage is rounded to the necessary number of decimals.\n        const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n        const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n        const value = Math.round(impreciseValue / step) * step;\n        const prevValue = this.value;\n        const dragEvent = { source: this, parent: this._slider, value: value };\n        this._isActive ? this.dragStart.emit(dragEvent) : this.dragEnd.emit(dragEvent);\n        if (value === prevValue) {\n            // Because we prevented UI updates, if it turns out that the race\n            // condition didn't happen and the value is already correct, we\n            // have to apply the ui updates now.\n            this._slider._onValueChange(this);\n            this._slider.step > 0\n                ? this._updateThumbUIByValue()\n                : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n            return;\n        }\n        this.value = value;\n        this.valueChange.emit(this.value);\n        this._onChangeFn(this.value);\n        this._slider._onValueChange(this);\n        this._slider.step > 0\n            ? this._updateThumbUIByValue()\n            : this._updateThumbUIByPointerEvent(event, { withAnimation: this._slider._hasAnimation });\n    }\n    _onPointerMove(event) {\n        // Again, does nothing if a step is defined because\n        // we want the value to snap to the values on input.\n        if (!this._slider.step && this._isActive) {\n            this._updateThumbUIByPointerEvent(event);\n        }\n    }\n    _onPointerUp() {\n        this._isActive = false;\n        setTimeout(() => {\n            this._updateWidthInactive();\n        });\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this._slider._cachedWidth), 0);\n    }\n    _calcTranslateXByValue() {\n        if (this._slider._isRtl) {\n            return (1 - this.percentage) * this._slider._cachedWidth;\n        }\n        return this.percentage * this._slider._cachedWidth;\n    }\n    _calcTranslateXByPointerEvent(event) {\n        return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n        this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding}px)`;\n    }\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n        this._hostElement.style.padding = '0px';\n        this._hostElement.style.width = 'calc(100% + 48px)';\n        this._hostElement.style.left = '-24px';\n    }\n    _updateThumbUIByValue(options) {\n        this.translateX = this._clamp(this._calcTranslateXByValue());\n        this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n        this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n        this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n        this._slider._setTransition(!!options?.withAnimation);\n        this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    focus() {\n        this._hostElement.focus();\n    }\n    blur() {\n        this._hostElement.blur();\n    }\n}\nMatSliderThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderThumb, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_SLIDER }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderThumb, selector: \"input[matSliderThumb]\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\", dragStart: \"dragStart\", dragEnd: \"dragEnd\" }, host: { attributes: { \"type\": \"range\" }, listeners: { \"change\": \"_onChange()\", \"input\": \"_onInput()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\" }, properties: { \"attr.aria-valuetext\": \"_valuetext\" }, classAttribute: \"mdc-slider__input\" }, providers: [\n        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n    ], exportAs: [\"matSliderThumb\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderThumb]',\n                    exportAs: 'matSliderThumb',\n                    host: {\n                        'class': 'mdc-slider__input',\n                        'type': 'range',\n                        '[attr.aria-valuetext]': '_valuetext',\n                        '(change)': '_onChange()',\n                        '(input)': '_onInput()',\n                        // TODO(wagnermaciel): Consider using a global event listener instead.\n                        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n                        '(blur)': '_onBlur()',\n                        '(focus)': '_onFocus()',\n                    },\n                    providers: [\n                        MAT_SLIDER_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_THUMB, useExisting: MatSliderThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], dragStart: [{\n                type: Output\n            }], dragEnd: [{\n                type: Output\n            }] } });\nclass MatSliderRangeThumb extends MatSliderThumb {\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n        super(_ngZone, _elementRef, _cdr, _slider);\n        this._cdr = _cdr;\n        this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n        this._setIsLeftThumb();\n        this.thumbPosition = this._isEndThumb ? 2 /* _MatThumb.END */ : 1 /* _MatThumb.START */;\n    }\n    /** @docs-private */\n    getSibling() {\n        if (!this._sibling) {\n            this._sibling = this._slider._getInput(this._isEndThumb ? 1 /* _MatThumb.START */ : 2 /* _MatThumb.END */);\n        }\n        return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n        const sibling = this.getSibling();\n        if (!this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return 0;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n        const sibling = this.getSibling();\n        if (this._isLeftThumb && sibling) {\n            return sibling.translateX;\n        }\n        return this._slider._cachedWidth;\n    }\n    _setIsLeftThumb() {\n        this._isLeftThumb =\n            (this._isEndThumb && this._slider._isRtl) || (!this._isEndThumb && !this._slider._isRtl);\n    }\n    _getDefaultValue() {\n        return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n        super._onInput();\n        this._updateSibling();\n        if (!this._isActive) {\n            this._updateWidthInactive();\n        }\n    }\n    _onNgControlValueChange() {\n        super._onNgControlValueChange();\n        this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n        if (this.disabled) {\n            return;\n        }\n        if (this._sibling) {\n            this._sibling._updateWidthActive();\n            this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n        }\n        super._onPointerDown(event);\n    }\n    _onPointerUp() {\n        super._onPointerUp();\n        if (this._sibling) {\n            setTimeout(() => {\n                this._sibling._updateWidthInactive();\n                this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n            });\n        }\n    }\n    _onPointerMove(event) {\n        super._onPointerMove(event);\n        if (!this._slider.step && this._isActive) {\n            this._updateSibling();\n        }\n    }\n    _fixValue(event) {\n        super._fixValue(event);\n        this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n        return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        if (this._isEndThumb) {\n            this.min = Math.max(this._slider.min, sibling.value);\n            this.max = this._slider.max;\n        }\n        else {\n            this.min = this._slider.min;\n            this.max = Math.min(this._slider.max, sibling.value);\n        }\n    }\n    _updateWidthActive() {\n        const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n        const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth;\n        const percentage = this._slider.min < this._slider.max\n            ? (this.max - this.min) / (this._slider.max - this._slider.min)\n            : 1;\n        const width = maxWidth * percentage + minWidth;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        const maxWidth = this._slider._cachedWidth;\n        const midValue = this._isEndThumb\n            ? this.value - (this.value - sibling.value) / 2\n            : this.value + (sibling.value - this.value) / 2;\n        const _percentage = this._isEndThumb\n            ? (this.max - midValue) / (this._slider.max - this._slider.min)\n            : (midValue - this.min) / (this._slider.max - this._slider.min);\n        const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n        const width = maxWidth * percentage + 24;\n        this._hostElement.style.width = `${width}px`;\n        this._hostElement.style.padding = '0px';\n        if (this._isLeftThumb) {\n            this._hostElement.style.left = '-24px';\n            this._hostElement.style.right = 'auto';\n        }\n        else {\n            this._hostElement.style.left = 'auto';\n            this._hostElement.style.right = '-24px';\n        }\n    }\n    _updateStaticStyles() {\n        this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n        const sibling = this.getSibling();\n        if (!sibling) {\n            return;\n        }\n        sibling._updateMinMax();\n        if (this._isActive) {\n            sibling._updateWidthActive();\n        }\n        else {\n            sibling._updateWidthInactive();\n        }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n    }\n}\nMatSliderRangeThumb.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderRangeThumb, deps: [{ token: i0.NgZone }, { token: MAT_SLIDER }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatSliderRangeThumb.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.0\", type: MatSliderRangeThumb, selector: \"input[matSliderStartThumb], input[matSliderEndThumb]\", providers: [\n        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n    ], exportAs: [\"matSliderRangeThumb\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderRangeThumb, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n                    exportAs: 'matSliderRangeThumb',\n                    providers: [\n                        MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR,\n                        { provide: MAT_SLIDER_RANGE_THUMB, useExisting: MatSliderRangeThumb },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDER]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb], imports: [MatCommonModule, CommonModule, MatRippleModule], exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, imports: [MatCommonModule, CommonModule, MatRippleModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule, MatRippleModule],\n                    exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb],\n                    declarations: [MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MultiLineTextComponent } from './question/multi-line-text.component';\nimport { QuestionComponent } from './question/question.component';\nimport { RatingsComponent } from './question/rating.component';\nimport { SelectionComponent } from './question/selection.component';\nimport { SingleLineTextComponent } from './question/single-line-text.component';\nimport { RatingsWidgetComponent } from './survey-widget/ratings-widget.component';\nimport { SelectionWidgetComponent } from './survey-widget/selection.widget.component';\nimport { SurveyWidgetComponent } from './survey-widget/survey-widget.component';\nimport { TableWidgetComponent } from './survey-widget/table-widget.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatIconModule,\n        MatButtonModule,\n        MatSliderModule\n    ],\n    declarations: [\n        QuestionComponent,\n        SingleLineTextComponent,\n        SelectionComponent,\n        MultiLineTextComponent,\n        RatingsComponent,\n        SurveyWidgetComponent,\n        SelectionWidgetComponent,\n        RatingsWidgetComponent,\n        TableWidgetComponent\n    ],\n    exports: [QuestionComponent,SurveyWidgetComponent],\n})\nexport class SurveySuiteModule {}\n","import { Question, QuestionType, UISurveyObj, UISurveyPage } from \"./types\";\nimport { Survey, SurveyQuestion } from '@placeos/ts-client';\n\nexport function generateNewQuestion(): Question{\n    return {\n        title: '',\n        name: '',\n        tags: [],\n        type: QuestionType.Single_Line_Text,\n        isRequired: false,\n    };\n}\n\nexport function generateNewSurvey(){\n    return {\n        title:'New Survey Title',\n        description: '',\n        pages:[\n            {\n                title:'',\n                elements:[]\n            }\n        ]\n    } as UISurveyObj;\n}\n\nexport function translateToSurveyPage(pages: UISurveyPage[]){\n    if(!pages) return [];\n    let surveyPages = [];\n    pages.forEach(p => {\n        const { title, description } = p;\n        const question_order = (p.elements || []).map(e => e.id);\n        surveyPages.push({title,description,question_order})\n    })\n    return surveyPages;\n}\n\nexport function translateToUISurveyObj(survey: Survey, questions: Question[]){\n    const {id, title, description, trigger, zone_id, building_id, pages} = survey;\n    let questSet = new Map();\n    questions.forEach(e => questSet.set(e.id, e));\n\n    let transPages:UISurveyPage[] = [];\n    pages.forEach(p => {\n        const {title, description, question_order} = p;\n        let elements = [];\n        question_order.forEach(q => elements.push(questSet.get(q)));\n        transPages.push({title,description, elements});\n    })\n\n    return { id, title, description, trigger, zone_id, building_id, pages: transPages} as UISurveyObj\n\n}\n\nexport function translateToSurveyQuestion(q: Question) {\n    const { id, title, description, type, isRequired, options, tags, rateMax, choices } = q;\n    return {\n        id,\n        title,\n        description,\n        type,\n        options,\n        choices,\n        tags,\n        required: isRequired,\n        max_rating: rateMax\n    } as Partial<SurveyQuestion>;\n}\n\nexport function translateToQuestion(q: SurveyQuestion) {\n    return {\n        id: q.id,\n        title: q.title,\n        description: q.description,\n        name: `${q.id}`,\n        type: q.type,\n        rateMax: q.max_rating,\n        choices: q.choices || [],\n        isRequired: q.required || false,\n        tags: q.tags || []\n    } as Question;\n}\n\nexport function underToSpace(str: string) {\n    return str.replace(/_/g, ' ');\n}\n\nexport function getEnumOptions<T>(targetEnum: T) {\n    return filterStringEnumItems(targetEnum).map((e) => ({\n        name: underToSpace(e[0]),\n        value: e[1],\n    }));\n}\n\nexport function getEnumMap<T>(targetEnum: T) {\n    let emap = {};\n    filterStringEnumItems(targetEnum).forEach(\n        (e) => (emap[e[1]] = underToSpace(e[0]))\n    );\n    return emap;\n}\n\nexport function filterStringEnumItems<T>(targetEnum: T) {\n    return Object.entries(targetEnum).filter((e) => isNaN(Number(e[0])));\n}\n\nexport function makeHTMLId(length: number){\n    let result           = '';\n    const characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","import { getEnumMap, getEnumOptions } from \"./helper\";\n\nexport enum TriggerEnum {\n    None = 'NONE',\n    Reserved = 'RESERVED',\n    Checked_In = 'CHECKEDIN',\n    Checked_Out = 'CHECKEDOUT',\n    // No_Show = 'NOSHOW',\n    Rejected = 'REJECTED',\n    Cancelled = 'CANCELLED',\n    // Ended = 'ENDED'\n}\n\nexport enum QuestionType {\n    Single_Line_Text = 'text',\n    Comment_Box = 'comment',\n    Radio_Group = 'radiogroup',\n    Drop_Down = 'dropdown',\n    Check_Box = 'checkbox',\n    Rating = 'rating',\n}\n\n/** Enum Options key-value pair */\nexport const QuestionTypeOptions = getEnumOptions(QuestionType);\nexport const TriggerOptions = getEnumOptions(TriggerEnum);\n\n/** Enum Map */\nexport const QuestionTypeEnumMap = getEnumMap(QuestionType);\nexport const TriggerEnumMap = getEnumMap(TriggerEnum);\n\nexport interface UISurveyStats{\n    answer_count: number;\n}\nexport interface UISurveyResponse{\n    question:Question,\n    answers: UISurveyAnswer[];\n}\nexport interface UISurveyAnswer{\n    id:number;\n    question_id: number;\n    survey_id:number;\n    type:string;\n    answer_json: any;\n}\n\nexport interface UISurveyObj{\n    id: number;\n    title: string;\n    description?: string;\n    trigger: TriggerEnum;\n    zone_id: string;\n    building_id: string;\n    pages: UISurveyPage[];\n}\n\nexport interface UISurveyPage{\n    title:string;\n    description?:string;\n    elements: Question[];\n}\n\nexport interface Question {\n    id?:number;\n    selected?: boolean;\n    type: QuestionType;\n    name?: string;\n    title: string;\n    description?: string;\n    choices?: any[];\n    rateValues?: number[]; //To be removed\n    tags?: string[];\n    isRequired?: boolean;\n    options?: any;\n    rateMax?: number;\n}\n\nexport interface Choice{\n    text:string;\n    value?: string;\n}\n\nexport enum Tag {\n    desk = 'Desk',\n    room = 'Room',\n    parking = 'Parking',\n}\n\nexport class Survey {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Survey title entered by user */\n    public readonly title: string;\n    /** Survey description */\n    public readonly description: string;\n    /** Survey description */\n    public readonly question_order: number;\n    /** Type of event that triggers survey being sent */\n    public readonly type: string;\n    /** Building that survey is associated with */\n    public readonly building_name: string;\n    /** Level that survey is associated with */\n    public readonly level?: string;\n    /** Date of survey creation */\n    public readonly date_created: string;\n    /** Link to survey for user completion */\n    public readonly link: string;\n    /** Survey options in Survey List component */\n    public readonly options: string[];\n\n    constructor(data: any = {}) {\n        this.id = data.id || '';\n        this.title = data.title || '';\n        this.description = data.description || '';\n        this.question_order = data.question_order || 0;\n        this.type = data.survey_type || '';\n        this.building_name = data.name || '';\n        this.date_created = '';\n        this.link = data.link || '';\n        this.options = ['open'];\n    }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Question, QuestionType } from \"../types\";\n\n@Component({\n    selector: 'base-question',\n    styles: [],\n    template: ``\n})\n\nexport class BaseQuestionComponent{\n    @Input() preview: boolean = false;\n    // @Input() readonly: boolean = false;\n    @Input() set value(value:Question){\n        if(value){\n            this.question = value;\n        }\n        this.hasValue = !!value;\n    }\n\n    protected hasValue = false;\n    protected question:Question;\n\n    protected readonly placeholderTitle = 'Enter your question here';\n\n    constructor(){}\n}","import { Component } from \"@angular/core\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n\n@Component({\n    selector: 'single-line-text',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full\" *ngIf=\"preview\">\n            <mat-form-field apppearance=\"outline\">\n                <input matInput type=\"text\"/>\n                <mat-hint>*Type your answer above</mat-hint>\n            </mat-form-field>\n        </div>\n    `\n})\n\nexport class SingleLineTextComponent extends BaseQuestionComponent{\n\n    constructor(){\n        super();\n    }\n}","import { ChangeDetectionStrategy, Component, Input, OnInit } from \"@angular/core\";\nimport { Question, QuestionType } from \"../types\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'selection',\n    styles: [`\n        .item-textbox{\n            padding: 0.25rem;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n\n    <ng-container *ngIf=\"question\">\n        <div class=\"flex flex-col w-full\">\n            <ng-container *ngIf=\"!preview;else previewState;\">\n                <div class=\"flex flex-col w-full mb-4 pl-2\">\n                    \n                        <div \n                            *ngFor=\"let item of question.choices; let i = index;\" \n                            class=\"flex flex-row w-full items-center space-x-3 pb-3\">\n                                \n                                    <span>{{i+1}}. </span>\n                                    <mat-form-field \n                                        class=\"w-full\" \n                                        appearance=\"outline\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <input matInput type=\"text\" [(ngModel)]=\"item.text\" name=\"item{{i}}\"/>\n                                    </mat-form-field>\n                                    <button matSuffix mat-icon-button (click)=\"deleteOption(i)\">\n                                        <mat-icon>\n                                            delete_outline\n                                        </mat-icon>\n                                    </button>\n                        </div>\n                    \n                </div>\n                <button  \n                    mat-stroked-button \n                    (click)=\"addOption()\">\n                    <div class=\"flex flex-row items-center text-gray-800\">\n                        <mat-icon>add_circle</mat-icon>\n                        <span>Add option</span>\n                    </div>\n                </button>\n\n            </ng-container>\n\n            <ng-template #previewState>\n                <mat-form-field *ngIf=\"isDropDown; else inputType;\">\n                    <mat-select>\n                        <mat-option *ngFor=\"let item of question.choices\" [value]=\"item.value\">{{item.text}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n            <ng-template #inputType>\n                <div class=\"flex flex-col w-full pl-2\">\n                    <div \n                        *ngFor=\"let item of question.choices; let i = index;\" \n                        class=\"flex flex-row w-full items-center space-x-3 pb-3\">\n                            <input [type]=\"multiple ? 'checkbox' : 'radio'\" name=\"options\">\n                            <span>{{item.text}}</span>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </ng-container>\n    `\n})\n\nexport class SelectionComponent extends BaseQuestionComponent implements OnInit{\n\n\n    public get isDropDown(){\n        return this.question?.type === QuestionType.Drop_Down;\n    }\n    public get multiple(){\n        return this.question?.type === QuestionType.Check_Box;\n    }\n\n    ngOnInit(){\n        if(!this.question?.choices){\n            this.question.choices = [];\n        }\n    }\n\n    addOption(){\n        this.question.choices.push({text:''});\n    }\n\n    deleteOption(index: number){\n        this.question.choices.splice(index,1);\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionType } from \"../types\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'multi-line-text',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full\" *ngIf=\"preview\">\n            <mat-form-field appearance=\"outline\">\n                <textarea matInput cols=\"30\" rows=\"5\"></textarea>\n                <mat-hint>*Type your answer above. Multiple lines supported</mat-hint>\n            </mat-form-field>\n        </div>\n    `\n})\n\nexport class MultiLineTextComponent extends BaseQuestionComponent{\n\n    constructor(){\n        super();\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { BaseQuestionComponent } from \"./base-question.component\";\n\n@Component({\n    selector: 'rating',\n    styles: [],\n    template: `\n        <div class=\"flex flex-col w-full p-4\">\n            <div class=\"flex flex-row items-center mb-4 space-x-2\">\n                <div *ngFor=\"let i of generateArray(question.rateMax)\" \n                    class=\"flex justify-center items-center h-10 w-10 border rounded-full\">\n                    <span class=\"font-semibold\">{{i}}</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"!preview\">\n                <mat-slider\n                    [max]=\"10\" [min]=\"3\" \n                    [thumbLabel]=\"true\" \n                    [step]=\"1\">\n                    <input matSliderThumb [(ngModel)]=\"question.rateMax\">\n                </mat-slider>\n                <span class=\"text-xs\">Move the slider to adjust the rating options</span>\n            </div>\n\n        </div>\n    `\n})\n\nexport class RatingsComponent extends BaseQuestionComponent implements OnInit{\n\n    constructor(){\n        super();\n    }\n\n    ngOnInit(){\n        if(!this.question.rateMax){\n            this.question.rateMax = 3;\n        }\n    }\n\n    generateArray(max:number){\n        return Array.from({length: max}, (val, index) => (index+1));\n    }\n\n\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { Question, QuestionType, QuestionTypeOptions } from '../types';\n\n@Component({\n    selector: 'placeos-question',\n    styles: [],\n    template: `\n        <div class=\"border bg-white shadow flex flex-col w-full items-center justify-between px-4 py-2 pt-4\">\n            <ng-container *ngIf=\"!preview; else previewTitle\">\n                <mat-form-field class=\"w-full\" appearance=\"outline\">\n                    <input\n                        matInput\n                        placeholder=\"Enter your question here\"\n                        type=\"text\"\n                        [(ngModel)]=\"question.title\">\n                    <mat-error class=\"input-error\" *ngIf=\"!question?.title\">Please enter a question</mat-error>\n                </mat-form-field>\n            </ng-container>\n\n            <ng-template #previewTitle>\n                <span class=\"text-xl w-full mb-4\">{{ question.title || 'No question' }}</span>\n            </ng-template>\n\n            <div class=\"flex flex-col w-full mb-4\" [ngSwitch]=\"question.type\">\n                <ng-container *ngSwitchCase=\"QuestionType.Comment_Box\">\n                    <multi-line-text [question]=\"question\" [preview]=\"preview\"></multi-line-text>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Single_Line_Text\">\n                    <single-line-text [question]=\"question\" [preview]=\"preview\"></single-line-text>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Check_Box\">\n                    <selection [value]=\"question\" [preview]=\"preview\"></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Radio_Group\">\n                    <selection [value]=\"question\" [preview]=\"preview\"></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Drop_Down\">\n                    <selection [value]=\"question\" [preview]=\"preview\"></selection>\n                </ng-container>\n\n                <ng-container *ngSwitchCase=\"QuestionType.Rating\">\n                    <rating [value]=\"question\" [preview]=\"preview\"></rating>\n                </ng-container>\n            </div>\n\n            <div class=\"flex flex-row w-full items-center justify-end space-x-4\" *ngIf=\"!preview\">\n                <!-- <mat-form-field appearance=\"outline\" class=\"h-[2rem]\">\n                    <div class=\"mat-form-field-wrapper\" style=\"margin-bottom: 0;\">\n                        <mat-select [(ngModel)]=\"question.type\">\n                            <mat-option\n                                *ngFor=\"let item of typeOptions\"\n                                [value]=\"item.value\"\n                            >\n                                {{ item.name }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                </mat-form-field> -->\n\n                <select [(ngModel)]=\"question.type\">\n                    <option \n                        *ngFor=\"let item of typeOptions\"\n                        [value]=\"item.value\"\n                    >\n                        {{ item.name }}\n                    </option>\n                </select>\n\n                <mat-slide-toggle [(ngModel)]=\"question.isRequired\"> Required</mat-slide-toggle>\n                <!-- <mat-slide-toggle [(ngModel)]=\"preview\"> Preview</mat-slide-toggle> -->\n            </div>\n        </div>\n    `,\n})\nexport class QuestionComponent implements OnInit {\n    @Input() preview: boolean = false;\n    @Input() set value(value: Question) {\n        if (value) {\n            this.question = value;\n        }\n        this.hasValue = !!value;\n    }\n\n    public QuestionType = QuestionType;\n    public typeOptions = QuestionTypeOptions;\n\n    public hasValue = false;\n    public question: Question;\n\n    constructor() {}\n\n    public get valid(){\n        if(!this.question?.title) return false;\n        const q = this.question;\n        let valid = true;\n\n        switch(q.type){\n            case QuestionType.Check_Box:\n            case QuestionType.Radio_Group:\n            case QuestionType.Drop_Down: \n                const checkop = q.choices?.map(e => !!(e?.text?.length));\n                valid = !!checkop?.length && checkop.reduce((acc,val) => acc && val);\n                break;\n            case QuestionType.Rating:\n                valid = q.rateMax >= 3;\n        }\n\n        return valid;\n    }\n\n    ngOnInit(): void {\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport { TriggerEnum } from '@placeos/survey-suite';\nimport { queryAnswers, querySurveys, Survey } from '@placeos/ts-client';\nimport { BehaviorSubject, forkJoin, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nexport interface BuildingSurveyStats {\n    lives: number;\n    drafts: number;\n    responses: number;\n}\n\n@Injectable()\nexport class BuildingListItemService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _stats = new BehaviorSubject<BuildingSurveyStats>({\n        lives: 0,\n        drafts: 0,\n        responses: 0,\n    });\n    public readonly stats$ = this._stats.asObservable();\n    set stats(value: BuildingSurveyStats) {\n        this._stats.next(value);\n    }\n\n    constructor() {}\n\n    async initStats(building_id: string) {\n        if (!building_id?.length) return;\n        const stats = {\n            lives: 0,\n            drafts: 0,\n            responses: 0,\n        };\n\n        this.loading = 'Loading statistics';\n        const surveys = await this.getBuildingSurveys(building_id);\n        let resArr = [];\n        surveys.forEach((s) => {\n            if (s.trigger === TriggerEnum.None) stats.drafts += 1;\n            else stats.lives += 1;\n            resArr.push(this.getSurveyResponses(`${s.id}`));\n        });\n        if (resArr.length > 0) {\n            const res = await forkJoin(resArr)\n                .pipe(\n                    map((res: number[]) =>\n                        res.reduce((arr, curr) => arr + curr, 0)\n                    )\n                )\n                .toPromise();\n            stats.responses = res;\n        }\n        this.stats = stats;\n        this.loading = '';\n    }\n\n    private async getBuildingSurveys(building_id: string) {\n        return querySurveys({ building_id })\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Error loading surveys');\n                    return of(null);\n                })\n            )\n            .toPromise() as Promise<Survey[]>;\n    }\n\n    private async getSurveyResponses(survey_id: string) {\n        return queryAnswers({ survey_id })\n            .pipe(\n                first(),\n                map((answers) => answers?.length || 0),\n                catchError((err) => of(0))\n            )\n            .toPromise();\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Building } from '@placeos/organisation';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BuildingListItemService } from '../services/building-list-item.service';\nimport { shareReplay } from 'rxjs/operators';\n\n@Component({\n    selector: 'building-list-item',\n    template: `\n        <section\n            class=\"building-wrapper bg-white my-4 mx-auto rounded-md overflow-hidden\"\n        >\n            <div *ngIf=\"building.image\" class=\"image-container\">\n                <img\n                    class=\"flex object-fill \"\n                    [src]=\"building.image\"\n                    alt=\"image of building\"\n                />\n            </div>\n            <div *ngIf=\"!building.image\" class=\"image-container\">\n                <span> <mat-icon class=\"domain-icon\">domain</mat-icon></span>\n            </div>\n            <div class=\"details-container my-4 mx-8 w-full relative\">\n                <div class=\"location-wrapper\">\n                    <mat-icon\n                        class=\"location-icon\"\n                        aria-hidden=\"false\"\n                        aria-label=\"Material icon of location pointer\"\n                        >location_on</mat-icon\n                    >\n                    <span> {{ building.address }} </span>\n                </div>\n\n                <span class=\"building-title\">\n                    {{ building.display_name }}\n                </span>\n                <ng-container *ngIf=\"!(loading$ | async)?.length; else loadState;\">\n                    <ng-container *ngIf=\"stats$ | async as stats\">\n                    <div class=\"flex py-4 justify-end space-x-2\">\n                        <div class=\"flex flex-col items-center flex-1\">\n                            <h3>Live Surveys</h3>\n                            <p class=\"text-4xl\">\n                                {{ stats?.lives || 0 }}\n                            </p>\n                        </div>\n                        <div class=\"flex flex-col items-center flex-1\">\n                            <h3>Draft Surveys</h3>\n                            <p class=\"text-4xl\">\n                                {{ stats?.drafts || 0 }}\n                            </p>\n                        </div>\n                        <div class=\"flex flex-col items-center flex-1\">\n                            <h3>Total Responses</h3>\n                            <p class=\"text-4xl\">\n                                {{ stats?.responses || 0 }}\n                            </p>\n                        </div>\n                    </div>\n                    </ng-container>\n                </ng-container>\n                <div class=\"flex justify-end w-full mt-4\">\n                    <button btn matRipple class=\"inverse\" (click)=\"navigate()\">\n                        <span class=\"ml-2\">View</span>\n                        <app-icon class=\"ml-1 text-2xl\">chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n        </section>\n        <ng-template #loadState>\n            <div class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\">\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{loading$ | async}}</span>\n                </div>\n            </div> \n        </ng-template>\n    `,\n    styles: [\n        `\n            .building-wrapper {\n                display: flex;\n                position: relative;\n                flex-direction: row;\n                position: relative;\n                justify-content: flex-start;\n                height: 260px;\n                max-width: 68rem;\n                border: 1px solid #e6e6e6;\n                box-shadow: 0px 2px 4px rgba(5, 28, 44, 0.1);\n            }\n            .options {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                background-color: #fff;\n                position: absolute;\n                height: 48px;\n                width: 48px;\n                top: 10px;\n                left: 10px;\n                border: 1px solid #e6e6e6;\n                border-radius: 3px;\n            }\n            .menu-wrapper {\n                display: flex;\n                flex-direction: column;\n                height: 90px;\n                width: 135px;\n                justify-content: center;\n            }\n            .image-container {\n                display: flex;\n                height: 100%;\n                width: 380px;\n                background-color: rgba(0, 0, 0, 0.22);\n                align-items: center;\n                justify-content: center;\n            }\n            .details-container {\n                display: flex;\n                flex-direction: column;\n                min-width: 600px;\n            }\n            .location-wrapper {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                margin-bottom: 20px;\n            }\n            .location-icon {\n                color: #5295f7;\n                margin-right: 10px;\n            }\n            .domain-icon {\n                display: flex;\n                color: #fff;\n                height: 100%;\n                width: 100%;\n            }\n            .building-title {\n                font-size: 18px;\n                font-weight: 500;\n            }\n            .details-text {\n                display: flex;\n                flex-direction: column;\n                font-size: 14px;\n                font-weight: 400;\n                color: #020202;\n                margin-bottom: 10px;\n                justify-content: space-between;\n                height: 70px;\n            }\n            .button-container {\n                display: flex;\n                position: absolute;\n                bottom: 20px;\n                right: 20px;\n            }\n            /* .view-button {\n                display: inline-flex;\n                color: #292f5b;\n                background-color: #fff;\n                border-radius: 2px;\n                margin: 20px 0px 20px 20px;\n                justify-content: center;\n                padding-left: 20px;\n            }\n            .view-button span {\n                display: inline-flex;\n            }\n            .view-button mat-icon {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            } */\n        `,\n    ],\n    providers: [BuildingListItemService]\n})\nexport class BuildingListItemComponent implements OnInit {\n    @Input() building: Building | any;\n\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n    stats$ = this.service.stats$.pipe(shareReplay(1));\n\n    constructor(\n        private router: Router, \n        private route: ActivatedRoute,\n        private service: BuildingListItemService) {}\n\n    ngOnInit(): void {\n        this.service.initStats(this.building.id);\n    }\n\n    navigate(): void {\n        this.router.navigate(['survey-list', this.building.id], {\n            relativeTo: this.route,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-list',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main\n            class=\"flex flex-col flex-1 relative h-full bg-white dark:bg-neutral-600 pt-4 overflow-y-auto\"\n        >\n            <section>\n                <div class=\"flex flex-col p-4\">\n                    <div\n                        class=\"flex w-full items-center justify-between py-4 bg-white max-w-[68rem] m-auto\"\n                    >\n                        <span class=\"text-2xl\">\n                            {{ (buildings$ | async)?.length }} Building{{\n                                (buildings$ | async)?.length > 1 ? 's' : ''\n                            }}\n                        </span>\n                    </div>\n                    <div *ngFor=\"let building of buildings$ | async\">\n                        <building-list-item\n                            [building]=\"building\"\n                        ></building-list-item>\n                    </div>\n                </div>\n            </section>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BuildingListComponent {\n    public readonly buildings$ = this._org.building_list;\n\n    constructor(private _org: OrganisationService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <div\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </div>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ViewChild, Directive, Input, ViewContainerRef, Injectable, HostBinding, ElementRef, HostListener, Pipe, NgModule } from '@angular/core';\nimport * as Survey from 'survey-core';\nimport { createPopupModalViewModel, settings, createDialogOptions, SvgRegistry, PopupSurveyModel, TooltipManager, LocalizableString, createPopupViewModel, DropdownListModel, Helpers, DropdownMultiSelectListModel, RendererFactory, ButtonGroupItemModel, doKey2ClickUp, doKey2ClickDown, doKey2ClickBlur, ActionDropdownViewModel, SurveyProgressModel, SurveyProgressButtonsModel, SurveyModel } from 'survey-core';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1$1 from '@angular/platform-browser';\n\nclass EmbeddedViewContentComponent {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnInit() {\n        if (!!this.templateRef) {\n            this.embeddedView = this.viewContainerRef?.createEmbeddedView(this.templateRef);\n        }\n    }\n}\nEmbeddedViewContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EmbeddedViewContentComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nEmbeddedViewContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: EmbeddedViewContentComponent, selector: \"ng-component\", viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: [\"template\"], descendants: true, read: TemplateRef, static: true }], ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EmbeddedViewContentComponent, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\",\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { templateRef: [{\n                type: ViewChild,\n                args: [\"template\", { read: TemplateRef, static: true }]\n            }] } });\n\nclass BaseAngular extends EmbeddedViewContentComponent {\n    constructor(changeDetectorRef, viewContainerRef) {\n        super(viewContainerRef);\n        this.changeDetectorRef = changeDetectorRef;\n        this.isModelSubsribed = false;\n        this.isDestroyed = false;\n    }\n    get surveyModel() {\n        return this.getModel().getSurvey();\n    }\n    ngDoCheck() {\n        if (this.previousModel !== this.getModel()) {\n            this.unMakeBaseElementAngular(this.previousModel);\n            this.makeBaseElementAngular(this.getModel());\n            this.onModelChanged();\n            this.previousModel = this.getModel();\n        }\n        this.beforeUpdate();\n    }\n    onModelChanged() { }\n    setIsRendering(val) {\n        const model = this.getModel();\n        if (!!model) {\n            model.isRendering = val;\n        }\n    }\n    getIsRendering() {\n        const model = this.getModel();\n        return !!model && !!model.isRendering;\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true;\n        this.unMakeBaseElementAngular(this.getModel());\n    }\n    makeBaseElementAngular(stateElement) {\n        if (!!stateElement && !stateElement.__ngImplemented) {\n            this.isModelSubsribed = true;\n            stateElement.__ngImplemented = true;\n            stateElement.iteratePropertiesHash((hash, key) => {\n                var val = hash[key];\n                if (Array.isArray(val)) {\n                    var val = val;\n                    val[\"onArrayChanged\"] = (arrayChanges) => {\n                        this.update(key);\n                    };\n                }\n            });\n            stateElement.setPropertyValueCoreHandler = (hash, key, val) => {\n                if (hash[key] !== val) {\n                    hash[key] = val;\n                    this.update(key);\n                }\n            };\n        }\n    }\n    unMakeBaseElementAngular(stateElement) {\n        if (!!stateElement && this.isModelSubsribed) {\n            this.isModelSubsribed = false;\n            stateElement.__ngImplemented = false;\n            stateElement.setPropertyValueCoreHandler = undefined;\n            stateElement.iteratePropertiesHash((hash, key) => {\n                var val = hash[key];\n                if (Array.isArray(val)) {\n                    var val = val;\n                    val[\"onArrayChanged\"] = () => { };\n                }\n            });\n        }\n    }\n    update(key) {\n        if (this.getIsRendering())\n            return;\n        this.beforeUpdate();\n        if (this.getPropertiesToUpdateSync().indexOf(key) > -1) {\n            this.detectChanges();\n            this.afterUpdate();\n        }\n        else {\n            (window[\"__zone_symbol__queueMicrotask\"]\n                ? window[\"__zone_symbol__queueMicrotask\"] : queueMicrotask)(() => {\n                if (!this.isDestroyed) {\n                    this.detectChanges();\n                }\n                this.afterUpdate();\n            });\n        }\n    }\n    getPropertiesToUpdateSync() {\n        return [];\n    }\n    detectChanges() {\n        if (!!this.embeddedView) {\n            this.embeddedView.detectChanges();\n        }\n        else {\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n    beforeUpdate() {\n        this.setIsRendering(true);\n    }\n    afterUpdate() {\n        this.setIsRendering(false);\n    }\n    ngAfterViewChecked() {\n        this.afterUpdate();\n    }\n}\nBaseAngular.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BaseAngular, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nBaseAngular.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BaseAngular, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BaseAngular, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }]; } });\n\nclass AngularComponentFactory {\n    constructor() {\n        this.creatorHash = {};\n    }\n    registerComponent(typeName, componentType) {\n        this.creatorHash[typeName] = componentType;\n    }\n    getAllTypes() {\n        var result = new Array();\n        for (var key in this.creatorHash) {\n            result.push(key);\n        }\n        return result.sort();\n    }\n    isComponentRegistered(elementType) {\n        return !!this.creatorHash[elementType];\n    }\n    create(containerRef, elementType, params) {\n        var componentType = this.creatorHash[elementType];\n        if (!componentType)\n            return null;\n        return containerRef.createComponent(componentType);\n    }\n}\nAngularComponentFactory.Instance = new AngularComponentFactory();\n\nclass DynamicComponentDirective {\n    constructor(containerRef, templateRef) {\n        this.containerRef = containerRef;\n        this.templateRef = templateRef;\n    }\n    ngOnChanges(changes) {\n        const componentChanges = changes[\"component\"];\n        if (componentChanges.currentValue.name !== componentChanges.previousValue?.name ||\n            (componentChanges.currentValue.name === undefined && componentChanges.previousValue === undefined && !this.componentInstance)) {\n            this.createComponent();\n        }\n        else {\n            this.updateComponentData();\n        }\n    }\n    createComponent() {\n        this.containerRef.clear();\n        if (AngularComponentFactory.Instance.isComponentRegistered(this.component.name)) {\n            this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.name).instance;\n        }\n        else if (this.component.default) {\n            this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.default).instance;\n        }\n        if (!this.componentInstance) {\n            throw new Error(`Can't create component with name: ${this.component.name} and default: ${this.component.default}`);\n        }\n        else {\n            this.componentInstance.contentTempl = this.templateRef;\n        }\n        this.updateComponentData();\n    }\n    updateComponentData() {\n        const data = this.component.data;\n        Object.keys(data).forEach((key) => {\n            this.componentInstance[key] = data[key];\n        });\n    }\n}\nDynamicComponentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DynamicComponentDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nDynamicComponentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DynamicComponentDirective, selector: \"[component]\", inputs: { component: \"component\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DynamicComponentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[component]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; }, propDecorators: { component: [{\n                type: Input\n            }] } });\n\nclass ActionComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    getPropertiesToUpdateSync() {\n        return [\"mode\"];\n    }\n}\nActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ActionComponent, selector: \"sv-ng-action\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"actionContent\", first: true, predicate: [\"actionContent\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: \"\\n<ng-template #template>\\n  <div [class]=\\\"model.getActionRootCss()\\\" [id]=\\\"model.id\\\">\\n    <div class=\\\"sv-action__content\\\">\\n      <ng-container *ngIf=\\\"model.needSeparator\\\">\\n        <div class=\\\"sv-action-bar-separator\\\"></div>\\n      </ng-container>\\n      <ng-template [component]=\\\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\\\"></ng-template>\\n    </div>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-action\", styles: [\":host { display: none; }\"], template: \"\\n<ng-template #template>\\n  <div [class]=\\\"model.getActionRootCss()\\\" [id]=\\\"model.id\\\">\\n    <div class=\\\"sv-action__content\\\">\\n      <ng-container *ngIf=\\\"model.needSeparator\\\">\\n        <div class=\\\"sv-action-bar-separator\\\"></div>\\n      </ng-container>\\n      <ng-template [component]=\\\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\\\"></ng-template>\\n    </div>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], actionContent: [{\n                type: ViewChild,\n                args: [\"actionContent\", { read: ViewContainerRef, static: true }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action\", ActionComponent);\n\nclass ActionBarComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get allowOnClick() {\n        return this.handleClick !== undefined ? this.handleClick : true;\n    }\n    onClick(event) {\n        if (this.allowOnClick) {\n            event.stopPropagation();\n        }\n    }\n    ngAfterViewInit() {\n        if (!!this.model.hasActions) {\n            this.model.initResponsivityManager(this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.resetResponsivityManager();\n    }\n}\nActionBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: { model: \"model\", handleClick: \"handleClick\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"model.hasActions\\\" [class]=\\\"model.getRootCss()\\\" (click)=\\\"onClick($event)\\\" #container>\\n    <ng-container *ngFor=\\\"let action of model.renderedActions\\\">\\n      <sv-ng-action [model]=\\\"action\\\"></sv-ng-action>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ActionComponent, selector: \"sv-ng-action\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-action-bar, sv-ng-action-bar\", styles: [\":host { display: none }\"], template: \"<ng-template #template>\\n  <div *ngIf=\\\"model.hasActions\\\" [class]=\\\"model.getRootCss()\\\" (click)=\\\"onClick($event)\\\" #container>\\n    <ng-container *ngFor=\\\"let action of model.renderedActions\\\">\\n      <sv-ng-action [model]=\\\"action\\\"></sv-ng-action>\\n    </ng-container>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], handleClick: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar\", ActionBarComponent);\n\nclass VisibleDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    ngOnChanges(changes) {\n        changes[\"visible\"].currentValue ? this.show() : this.hide();\n    }\n    hide() {\n        this.el.nativeElement.style.display = \"none\";\n    }\n    show() {\n        this.el.nativeElement.style.display = \"\";\n    }\n}\nVisibleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: VisibleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nVisibleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: VisibleDirective, selector: \"[visible]\", inputs: { visible: \"visible\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: VisibleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[visible]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { visible: [{\n                type: Input\n            }] } });\n\nclass PopupBaseContainerComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        this.prevIsVisible = false;\n        this.isShow = false;\n        this.changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.model;\n    }\n    get applyButtonText() {\n        const popupModalModel = this.model;\n        if (!popupModalModel)\n            return null;\n        return popupModalModel.applyButtonText;\n    }\n    apply() {\n        const popupModalModel = this.model;\n        if (!popupModalModel)\n            return;\n        popupModalModel.apply();\n    }\n    onModelChanged() {\n        this.changeDetectorRef.detectChanges();\n    }\n    beforeUpdate() {\n        super.beforeUpdate();\n        if (!this.prevIsVisible && this.model.isVisible) {\n            this.isShow = false;\n        }\n    }\n    afterUpdate() {\n        if (!this.prevIsVisible && this.model.isVisible) {\n            setTimeout(() => {\n                this.model.updateOnShowing();\n                this.isShow = true;\n                this.changeDetectorRef.detectChanges();\n            });\n        }\n        if (this.prevIsVisible !== this.model.isVisible) {\n            this.prevIsVisible = this.model.isVisible;\n        }\n        super.afterUpdate();\n    }\n}\nPopupBaseContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupBaseContainerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPopupBaseContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PopupBaseContainerComponent, selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"sv-popup\\\" tabindex=\\\"-1\\\" [class]=\\\"model.styleClass\\\" [style.visibility]=\\\"isShow ? 'visible' : 'hidden'\\\" [visible]=\\\"model.isVisible\\\" (click)=\\\"model.clickOutside()\\\" (keydown)=\\\"model.onKeyDown($event)\\\">\\n    <div class=\\\"sv-popup__container\\\" [style]=\\\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\\\">\\n        <div class=\\\"sv-popup__shadow\\\">\\n            <ng-container *ngIf=\\\"model.showHeader\\\">\\n                <ng-template [component]=\\\"{ name: model.popupHeaderTemplate, data: { model: model } }\\\"></ng-template>\\n            </ng-container>\\n            <div class=\\\"sv-popup__body-content\\\">\\n                <div *ngIf=\\\"model.title\\\" class=\\\"sv-popup__body-header\\\">{{ model.title }}</div>\\n                <div class=\\\"sv-popup__scrolling-content\\\">\\n                    <div class=\\\"sv-popup__content\\\">\\n                        <ng-template [component]=\\\"{ name: model.contentComponentName, data: model.contentComponentData }\\\"></ng-template>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"model.showFooter\\\" class=\\\"sv-popup__body-footer\\\">\\n                    <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\", components: [{ type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupBaseContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\", template: \"<div class=\\\"sv-popup\\\" tabindex=\\\"-1\\\" [class]=\\\"model.styleClass\\\" [style.visibility]=\\\"isShow ? 'visible' : 'hidden'\\\" [visible]=\\\"model.isVisible\\\" (click)=\\\"model.clickOutside()\\\" (keydown)=\\\"model.onKeyDown($event)\\\">\\n    <div class=\\\"sv-popup__container\\\" [style]=\\\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\\\">\\n        <div class=\\\"sv-popup__shadow\\\">\\n            <ng-container *ngIf=\\\"model.showHeader\\\">\\n                <ng-template [component]=\\\"{ name: model.popupHeaderTemplate, data: { model: model } }\\\"></ng-template>\\n            </ng-container>\\n            <div class=\\\"sv-popup__body-content\\\">\\n                <div *ngIf=\\\"model.title\\\" class=\\\"sv-popup__body-header\\\">{{ model.title }}</div>\\n                <div class=\\\"sv-popup__scrolling-content\\\">\\n                    <div class=\\\"sv-popup__content\\\">\\n                        <ng-template [component]=\\\"{ name: model.contentComponentName, data: model.contentComponentData }\\\"></ng-template>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"model.showFooter\\\" class=\\\"sv-popup__body-footer\\\">\\n                    <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass PopupService {\n    constructor(injector, applicationRef, componentFactoryResolver) {\n        this.injector = injector;\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n    createComponent(popupViewModel) {\n        const portalHost = new DomPortalOutlet(popupViewModel.container, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(PopupBaseContainerComponent);\n        const componentRef = portalHost.attach(portal);\n        popupViewModel.container = popupViewModel.container.children[0];\n        componentRef.instance.model = popupViewModel;\n        componentRef.changeDetectorRef.detectChanges();\n        return portalHost;\n    }\n}\nPopupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupService, deps: [{ token: i0.Injector }, { token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Injectable });\nPopupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }]; } });\n\nclass ModalComponent {\n    constructor(popupService) {\n        this.popupService = popupService;\n        this.functionDefined = false;\n    }\n    showDialog(dialogOptions) {\n        this.model = createPopupModalViewModel(dialogOptions);\n        this.model.initializePopupContainer();\n        this.model.model.onHide = () => {\n            this.portalHost.detach();\n            this.model.unmountPopupContainer();\n        };\n        this.portalHost = this.popupService.createComponent(this.model);\n        this.model.model.isVisible = true;\n        return this.model;\n    }\n    ngOnInit() {\n        if (!!settings.showModal)\n            return;\n        this.functionDefined = true;\n        settings.showModal = (componentName, data, onApply, onCancel, cssClass, title, displayMode = \"popup\") => {\n            const options = createDialogOptions(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);\n            return this.showDialog(options);\n        };\n    }\n    ngOnDestroy() {\n        if (this.functionDefined) {\n            settings.showModal = undefined;\n        }\n    }\n}\nModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ModalComponent, deps: [{ token: PopupService }], target: i0.ɵɵFactoryTarget.Component });\nModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ModalComponent, selector: \"sv-ng-modal-container\", ngImport: i0, template: \"\", isInline: true, styles: [\":host{display:none}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ModalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-modal-container\", template: \"\", styles: [\":host{display:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: PopupService }]; } });\n\nclass DynamicHeadComponent extends EmbeddedViewContentComponent {\n    get ariaLabel() {\n        return this.element.titleAriaLabel;\n    }\n}\nDynamicHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DynamicHeadComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDynamicHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DynamicHeadComponent, selector: \"sv-ng-dynamic-head\", inputs: { tagName: \"tagName\", element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container [ngSwitch]=\\\"tagName\\\">\\n    <h1 *ngSwitchCase=\\\"'h1'\\\" [class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h1>\\n    <h2 *ngSwitchCase=\\\"'h2'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h2>\\n    <h3 *ngSwitchCase=\\\"'h3'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h3>\\n    <h4 *ngSwitchCase=\\\"'h4'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h4>\\n    <h5 *ngSwitchCase=\\\"'h5'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h5>\\n    <h6 *ngSwitchCase=\\\"'h6'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h6>\\n  </ng-container>\\n  <ng-template #titleContent>\\n    <ng-content></ng-content>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DynamicHeadComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-dynamic-head\", template: \"<ng-template #template>\\n  <ng-container [ngSwitch]=\\\"tagName\\\">\\n    <h1 *ngSwitchCase=\\\"'h1'\\\" [class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h1>\\n    <h2 *ngSwitchCase=\\\"'h2'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h2>\\n    <h3 *ngSwitchCase=\\\"'h3'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h3>\\n    <h4 *ngSwitchCase=\\\"'h4'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h4>\\n    <h5 *ngSwitchCase=\\\"'h5'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h5>\\n    <h6 *ngSwitchCase=\\\"'h6'\\\"[class]=\\\"element.cssTitle\\\" [attr.id]=\\\"element.ariaTitleId\\\" [attr.tabindex]=\\\"element.titleTabIndex\\\" [attr.aria-expanded]=\\\"element.titleAriaExpanded\\\" [attr.role]=\\\"'columnheader'\\\" [attr.aria-label]=\\\"ariaLabel\\\"><ng-container *ngTemplateOutlet=\\\"titleContent\\\"></ng-container></h6>\\n  </ng-container>\\n  <ng-template #titleContent>\\n    <ng-content></ng-content>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { tagName: [{\n                type: Input\n            }], element: [{\n                type: Input\n            }] } });\n\nclass SurveyStringComponent {\n}\nSurveyStringComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyStringComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyStringComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\", isInline: true, directives: [{ type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyStringComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-string, '[sv-ng-string]'\",\n                    template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass ElementTitleActionsComponent extends EmbeddedViewContentComponent {\n}\nElementTitleActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementTitleActionsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementTitleActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!element.hasTitleActions\\\">\\n    <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"element.hasTitleActions\\\">\\n    <div class=\\\"sv-title-actions\\\">\\n      <span class=\\\"sv-title-actions__title\\\">\\n        <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n      </span>\\n      <sv-ng-action-bar [model]=\\\"element.getTitleToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </ng-container>\\n  <ng-template #elementTitleContent>\\n    <sv-ng-string *ngIf=\\\"element.isTitleRenderedAsString\\\" [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n    <ng-container *ngIf=\\\"!element.isTitleRenderedAsString\\\">\\n      <span\\n        *ngIf=\\\"element.isRequireTextOnStart\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span\\n        *ngIf=\\\"element.no\\\"\\n        style=\\\"position: static\\\"\\n        [class]=\\\"element.cssClasses.number\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.no }}</span>\\n      <span *ngIf=\\\"element.no\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\"element.isRequireTextBeforeTitle\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span *ngIf=\\\"element.isRequireTextBeforeTitle\\\">&nbsp;</span>\\n      <sv-ng-string [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n      <span *ngIf=\\\"element.isRequireTextAfterTitle\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\" element.isRequireTextAfterTitle\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span> \\n  </ng-container>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementTitleActionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-element-title-actions\", template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!element.hasTitleActions\\\">\\n    <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"element.hasTitleActions\\\">\\n    <div class=\\\"sv-title-actions\\\">\\n      <span class=\\\"sv-title-actions__title\\\">\\n        <ng-container *ngTemplateOutlet=\\\"elementTitleContent\\\"></ng-container>\\n      </span>\\n      <sv-ng-action-bar [model]=\\\"element.getTitleToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </ng-container>\\n  <ng-template #elementTitleContent>\\n    <sv-ng-string *ngIf=\\\"element.isTitleRenderedAsString\\\" [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n    <ng-container *ngIf=\\\"!element.isTitleRenderedAsString\\\">\\n      <span\\n        *ngIf=\\\"element.isRequireTextOnStart\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span\\n        *ngIf=\\\"element.no\\\"\\n        style=\\\"position: static\\\"\\n        [class]=\\\"element.cssClasses.number\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.no }}</span>\\n      <span *ngIf=\\\"element.no\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\"element.isRequireTextBeforeTitle\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span>\\n      <span *ngIf=\\\"element.isRequireTextBeforeTitle\\\">&nbsp;</span>\\n      <sv-ng-string [model]=\\\"element.locTitle\\\"></sv-ng-string>\\n      <span *ngIf=\\\"element.isRequireTextAfterTitle\\\">&nbsp;</span>\\n      <span\\n        *ngIf=\\\" element.isRequireTextAfterTitle\\\"\\n        [class]=\\\"element.cssClasses.requiredText\\\"\\n        [attr.aria-hidden]=\\\"true\\\"\\n        >{{ element.requiredText }}</span> \\n  </ng-container>\\n  </ng-template>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\n\nclass ElementTitleComponent extends EmbeddedViewContentComponent {\n}\nElementTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementTitleComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <sv-ng-dynamic-head [tagName]=\\\"element.titleTagName\\\" [element]=\\\"element\\\" *ngIf=\\\"element.hasTitle\\\">\\n    <sv-ng-element-title-actions [element]=\\\"element\\\"></sv-ng-element-title-actions>\\n  </sv-ng-dynamic-head>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: DynamicHeadComponent, selector: \"sv-ng-dynamic-head\", inputs: [\"tagName\", \"element\"] }, { type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: [\"element\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementTitleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-element-title\", template: \"<ng-template #template>\\n  <sv-ng-dynamic-head [tagName]=\\\"element.titleTagName\\\" [element]=\\\"element\\\" *ngIf=\\\"element.hasTitle\\\">\\n    <sv-ng-element-title-actions [element]=\\\"element\\\"></sv-ng-element-title-actions>\\n  </sv-ng-dynamic-head>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\n\nclass SurveyHeaderComponent {\n    constructor(viewContainerRef, changeDetectorRef) {\n        this.viewContainerRef = viewContainerRef;\n        this.changeDetectorRef = changeDetectorRef;\n    }\n    ngAfterViewInit() {\n        this.survey.afterRenderHeader(this.viewContainerRef.element.nativeElement);\n        this.survey.locLogo.onChanged = () => {\n            this.changeDetectorRef.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        this.survey.locLogo.onChanged = () => { };\n    }\n}\nSurveyHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyHeaderComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSurveyHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyHeaderComponent, selector: \"'[sv-ng-survey-header]'\", inputs: { survey: \"survey\" }, ngImport: i0, template: \"<div *ngIf=\\\"survey.isLogoBefore\\\" [class]=\\\"survey.logoClassNames\\\">\\n  <ng-template [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n</div>\\n<div\\n  *ngIf=\\\"survey.renderedHasTitle\\\"\\n  [class]=\\\"survey.css.headerText\\\"\\n  [style.maxWidth]=\\\"survey.titleMaxWidth\\\"\\n>\\n  <sv-ng-element-title [element]=\\\"survey\\\"></sv-ng-element-title>\\n  <h5 *ngIf=\\\"survey.renderedHasDescription\\\" [class]=\\\"survey.css.description\\\" [model]=\\\"survey.locDescription\\\" sv-ng-string></h5>\\n</div>\\n\\n<div *ngIf=\\\"survey.isLogoAfter\\\" [class]=\\\"survey.logoClassNames\\\">\\n  <ng-template [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n</div>\\n<div [class]=\\\"survey.css.headerClose\\\"></div>\", components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyHeaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"'[sv-ng-survey-header]'\", template: \"<div *ngIf=\\\"survey.isLogoBefore\\\" [class]=\\\"survey.logoClassNames\\\">\\n  <ng-template [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n</div>\\n<div\\n  *ngIf=\\\"survey.renderedHasTitle\\\"\\n  [class]=\\\"survey.css.headerText\\\"\\n  [style.maxWidth]=\\\"survey.titleMaxWidth\\\"\\n>\\n  <sv-ng-element-title [element]=\\\"survey\\\"></sv-ng-element-title>\\n  <h5 *ngIf=\\\"survey.renderedHasDescription\\\" [class]=\\\"survey.css.description\\\" [model]=\\\"survey.locDescription\\\" sv-ng-string></h5>\\n</div>\\n\\n<div *ngIf=\\\"survey.isLogoAfter\\\" [class]=\\\"survey.logoClassNames\\\">\\n  <ng-template [component]=\\\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\\\"></ng-template>\\n</div>\\n<div [class]=\\\"survey.css.headerClose\\\"></div>\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { survey: [{\n                type: Input\n            }] } });\n\nclass SvgIconComponent {\n    constructor(viewContaierRef) {\n        this.viewContaierRef = viewContaierRef;\n    }\n    createSvg() {\n        if (!!this.iconName) {\n            Survey.createSvg(this.size, this.width, this.height, this.iconName, this.viewContaierRef.element.nativeElement, this.title);\n        }\n    }\n    get rootClass() {\n        let className = \"sv-svg-icon\";\n        if (!this.css && !!this.partCss) {\n            className += \" \" + this.partCss;\n        }\n        else if (!!this.css) {\n            className = this.css;\n        }\n        return className;\n    }\n    get rootRole() {\n        return \"img\";\n    }\n    get ariaLabel() {\n        return this.title;\n    }\n    ngOnChanges() {\n        const el = this.viewContaierRef.element.nativeElement;\n        el.innerHTML = \"\";\n        el.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\"));\n        this.createSvg();\n    }\n}\nSvgIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SvgIconComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nSvgIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: { size: \"size\", width: \"width\", height: \"height\", iconName: \"iconName\", partCss: \"partCss\", css: \"css\", title: \"title\" }, host: { properties: { \"class\": \"this.rootClass\", \"[attr.role]\": \"this.rootRole\", \"[attr.aria-label]\": \"this.ariaLabel\" } }, usesOnChanges: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SvgIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"'[sv-ng-svg-icon]'\",\n                    template: \"\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { size: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], iconName: [{\n                type: Input\n            }], partCss: [{\n                type: Input\n            }], css: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], rootClass: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }], rootRole: [{\n                type: HostBinding,\n                args: [\"[attr.role]\"]\n            }], ariaLabel: [{\n                type: HostBinding,\n                args: [\"[attr.aria-label]\"]\n            }] } });\n\nclass TimerPanelComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.circleLengthValue = 440;\n    }\n    getStateElement() {\n        return this.model;\n    }\n    getModel() {\n        return this.model;\n    }\n    get circleLength() {\n        return this.circleLengthValue;\n    }\n    get progress() {\n        return -this.model.progress * this.circleLength;\n    }\n}\nTimerPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TimerPanelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTimerPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TimerPanelComponent, selector: \"sv-timer-panel\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<div *ngIf=\\\"model.showTimerAsClock\\\" [class]=\\\"model.rootCss\\\">\\n    <svg *ngIf=\\\"model.showProgress\\\" [class]=\\\"model.getProgressCss()\\\" [style.stroke-dasharray]=\\\"circleLength\\\" [style.stroke-dashoffset]=\\\"progress\\\" [size]=\\\"'auto'\\\" [iconName]=\\\"'icon-timercircle'\\\" sv-ng-svg-icon></svg>\\n    <div [class]=\\\"model.textContainerCss\\\">\\n        <span [class]=\\\"model.majorTextCss\\\">{{ model.clockMajorText }}</span>\\n        <span *ngIf=\\\"model.clockMinorText\\\" [class]=\\\"model.minorTextCss\\\">{{ model.clockMinorText }}</span>\\n    </div>\\n</div>\\n<div *ngIf=\\\"!model.showTimerAsClock\\\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TimerPanelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-timer-panel\", template: \"<div *ngIf=\\\"model.showTimerAsClock\\\" [class]=\\\"model.rootCss\\\">\\n    <svg *ngIf=\\\"model.showProgress\\\" [class]=\\\"model.getProgressCss()\\\" [style.stroke-dasharray]=\\\"circleLength\\\" [style.stroke-dashoffset]=\\\"progress\\\" [size]=\\\"'auto'\\\" [iconName]=\\\"'icon-timercircle'\\\" sv-ng-svg-icon></svg>\\n    <div [class]=\\\"model.textContainerCss\\\">\\n        <span [class]=\\\"model.majorTextCss\\\">{{ model.clockMajorText }}</span>\\n        <span *ngIf=\\\"model.clockMinorText\\\" [class]=\\\"model.minorTextCss\\\">{{ model.clockMinorText }}</span>\\n    </div>\\n</div>\\n<div *ngIf=\\\"!model.showTimerAsClock\\\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass ElementComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get elementComponentName() {\n        return this.model.isPanel ? \"panel\" : \"question\";\n    }\n    get componentName() {\n        const survey = this.surveyModel;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(this.model);\n            if (!!name) {\n                return name;\n            }\n        }\n        return this.elementComponentName;\n    }\n    get rootStyle() {\n        //use this if to check if cssClassses are calculated and allowRootStyle flag was set\n        if (!!this.model.cssClasses) {\n            return this.model.rootStyle;\n        }\n        else {\n            return {};\n        }\n    }\n    get componentData() {\n        const survey = this.surveyModel;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(this.model);\n        }\n        return {\n            componentName: this.elementComponentName,\n            componentData: {\n                model: this.model,\n                data: data\n            }\n        };\n    }\n}\nElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ElementComponent, selector: \"sv-ng-element\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <div *ngIf=\\\"!!model\\\" [class]=\\\"model.cssClasses.questionWrapper\\\" [style]=\\\"rootStyle\\\" (focusin)=\\\"model.focusIn()\\\">\\n        <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-element\", template: \"<ng-template #template>\\n    <div *ngIf=\\\"!!model\\\" [class]=\\\"model.cssClasses.questionWrapper\\\" [style]=\\\"rootStyle\\\" (focusin)=\\\"model.focusIn()\\\">\\n        <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass RowComponent extends BaseAngular {\n    constructor(cdr, vcr, ngZone) {\n        super(cdr, vcr);\n        this.ngZone = ngZone;\n    }\n    getModel() {\n        return this.row;\n    }\n    trackElementBy(index, element) {\n        return element.name + index;\n    }\n    ngAfterViewInit() {\n        const el = this.container?.nativeElement;\n        if (!!el && !this.row.isNeedRender) {\n            this.ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.row.startLazyRendering(el);\n                }, 10);\n            });\n        }\n    }\n    onModelChanged() {\n        super.onModelChanged();\n        if (!this.previousModel) {\n            return;\n        }\n        else {\n            this.row.isNeedRender = this.previousModel.isNeedRender;\n            this.stopLazyRendering();\n        }\n    }\n    stopLazyRendering() {\n        this.row.stopLazyRendering();\n        this.row.isNeedRender = !this.row.isLazyRendering();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stopLazyRendering();\n    }\n}\nRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RowComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RowComponent, selector: \"sv-ng-row\", inputs: { row: \"row\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"row.getRowCss()\\\" *ngIf=\\\"row.visible\\\" #container>\\n    <ng-container *ngFor=\\\"let element of row.visibleElements; trackBy: trackElementBy\\\">\\n      <sv-ng-element [model]=\\\"$any(element)\\\" *ngIf=\\\"row.isNeedRender\\\"></sv-ng-element>\\n      <ng-template *ngIf=\\\"!row.isNeedRender && element.skeletonComponentName\\\" [component]=\\\"{ name: element.skeletonComponentName, data: { element: element } }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: ElementComponent, selector: \"sv-ng-element\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RowComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-row\", template: \"<ng-template #template>\\n  <div [class]=\\\"row.getRowCss()\\\" *ngIf=\\\"row.visible\\\" #container>\\n    <ng-container *ngFor=\\\"let element of row.visibleElements; trackBy: trackElementBy\\\">\\n      <sv-ng-element [model]=\\\"$any(element)\\\" *ngIf=\\\"row.isNeedRender\\\"></sv-ng-element>\\n      <ng-template *ngIf=\\\"!row.isNeedRender && element.skeletonComponentName\\\" [component]=\\\"{ name: element.skeletonComponentName, data: { element: element } }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }, { type: i0.NgZone }]; }, propDecorators: { row: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"container\", { read: ElementRef }]\n            }] } });\n\nclass PageComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    onModelChanged() {\n        if (!!this.pageContainerRef && this.pageContainerRef.nativeElement) {\n            this.model.survey.afterRenderPage(this.pageContainerRef.nativeElement);\n        }\n    }\n    ngAfterViewInit() {\n        this.model.survey?.afterRenderPage(this.pageContainerRef?.nativeElement);\n    }\n}\nPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PageComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PageComponent, selector: \"page\", inputs: { model: \"model\", survey: \"survey\" }, viewQueries: [{ propertyName: \"pageContainerRef\", first: true, predicate: [\"pageContainer\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\\\">\\n  <div [class]=\\\"model.cssRoot\\\" #pageContainer>\\n    <sv-ng-element-title [element]=\\\"model\\\"></sv-ng-element-title>\\n    <div *ngIf=\\\"model._showDescription\\\" [class]=\\\"model.cssClasses.page.description\\\">\\n      <sv-ng-string [model]=\\\"model.locDescription\\\"></sv-ng-string>\\n    </div>\\n    <ng-container *ngFor=\\\"let row of model.rows\\\">\\n      <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n        <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n      </ng-template>\\n    </ng-container>\\n  </div>\\n</ng-container>\", styles: [\"\"], components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: RowComponent, selector: \"sv-ng-row\", inputs: [\"row\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"page\", template: \"<ng-container *ngIf=\\\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\\\">\\n  <div [class]=\\\"model.cssRoot\\\" #pageContainer>\\n    <sv-ng-element-title [element]=\\\"model\\\"></sv-ng-element-title>\\n    <div *ngIf=\\\"model._showDescription\\\" [class]=\\\"model.cssClasses.page.description\\\">\\n      <sv-ng-string [model]=\\\"model.locDescription\\\"></sv-ng-string>\\n    </div>\\n    <ng-container *ngFor=\\\"let row of model.rows\\\">\\n      <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n        <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n      </ng-template>\\n    </ng-container>\\n  </div>\\n</ng-container>\", styles: [\"\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], survey: [{\n                type: Input\n            }], pageContainerRef: [{\n                type: ViewChild,\n                args: [\"pageContainer\", { static: false, read: ElementRef }]\n            }] } });\n\nclass BrandInfoComponent {\n}\nBrandInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrandInfoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBrandInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BrandInfoComponent, selector: \"sv-brand-info\", ngImport: i0, template: \"<div class=\\\"sv-brand-info\\\">\\n  <a class=\\\"sv-brand-info__logo\\\" href=\\\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\\\"><img src=\\\"https://surveyjs.io/Content/Images/poweredby.svg\\\"/></a>\\n  <div class=\\\"sv-brand-info__text\\\">Try and see how easy it is to <a href=\\\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\\\">create a survey</a></div>\\n  <div class=\\\"sv-brand-info__terms\\\"><a href=\\\"https://surveyjs.io/TermsOfUse\\\">Terms of Use & Privacy Statement</a></div>\\n</div>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BrandInfoComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-brand-info\", template: \"<div class=\\\"sv-brand-info\\\">\\n  <a class=\\\"sv-brand-info__logo\\\" href=\\\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\\\"><img src=\\\"https://surveyjs.io/Content/Images/poweredby.svg\\\"/></a>\\n  <div class=\\\"sv-brand-info__text\\\">Try and see how easy it is to <a href=\\\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\\\">create a survey</a></div>\\n  <div class=\\\"sv-brand-info__terms\\\"><a href=\\\"https://surveyjs.io/TermsOfUse\\\">Terms of Use & Privacy Statement</a></div>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-brand-info\", BrandInfoComponent);\n\nclass SurveyContentComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    onModelChanged() {\n        this.model.renderCallback = () => {\n            this.detectChanges();\n        };\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.model[\"needRenderIcons\"]) {\n            SvgRegistry.renderIcons();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.renderCallback = undefined;\n    }\n    ngAfterViewInit() {\n        this.model.afterRenderSurvey(this.rootEl.nativeElement);\n    }\n}\nSurveyContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyContentComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSurveyContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyContentComponent, selector: \"survey-content\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"rootEl\", first: true, predicate: [\"surveyContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div #surveyContainer *ngIf=\\\"!!model\\\" [class]=\\\"model.getRootCss()\\\">\\n    <form onsubmit=\\\"return false;\\\">\\n      <div class=\\\"sv_custom_header\\\" [hidden]=\\\"model.hasLogo\\\"></div>\\n      <div [class]=\\\"model.css.container\\\">\\n        <div *ngIf=\\\"model.renderedHasHeader\\\" [class]=\\\"model.css.header\\\" [survey]=\\\"model\\\" sv-ng-survey-header></div>\\n        <ng-container *ngIf=\\\"model.isTimerPanelShowingOnTop && !model.isShowStartingPage\\\">\\n          <sv-timer-panel [model]=\\\"model.timerModel\\\"></sv-timer-panel>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"model.isShowProgressBarOnTop && !model.isShowStartingPage\\\">\\n          <ng-template [component]='{ name: \\\"sv-progress-\\\" + this.model.progressBarType, data: { model } }'></ng-template>\\n        </ng-container>\\n        <div *ngIf=\\\"model.isShowingPage\\\" [class]=\\\"model.bodyCss\\\" [style.maxWidth]=\\\"model.renderedWidth\\\">\\n          <sv-action-bar *ngIf=\\\"model.isNavigationButtonsShowingOnTop\\\" [model]=\\\"model.navigationBar\\\"></sv-action-bar>\\n          <!-- ko if: activePage -->\\n            <ng-container *ngIf=\\\"model.activePage\\\">\\n              <div [id]=\\\"model.activePage.id\\\">\\n                <page [model]=\\\"model.activePage\\\" [survey]=\\\"model\\\"></page>\\n              </div>\\n            </ng-container>\\n            <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\\n            <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\\n            <!-- /ko -->\\n            <!-- /ko -->\\n          <!-- /ko -->\\n          <ng-container *ngIf=\\\"model.isShowProgressBarOnBottom && !model.isShowStartingPage\\\">\\n            <ng-template [component]='{ name: \\\"sv-progress-\\\" + this.model.progressBarType, data: { model } }'></ng-template>\\n          </ng-container>\\n          <sv-action-bar *ngIf=\\\"model.isNavigationButtonsShowingOnBottom\\\" [model]=\\\"model.navigationBar\\\"></sv-action-bar>  \\n        </div>\\n        <ng-container *ngIf=\\\"model.isTimerPanelShowingOnBottom && !model.isShowStartingPage\\\">\\n            <sv-timer-panel [model]=\\\"model.timerModel\\\"></sv-timer-panel>\\n        </ng-container>\\n        <div *ngIf=\\\"model.state === 'completed' && model.showCompletedPage\\\" [class]=\\\"model.completedCss\\\"\\n          [innerHtml]=\\\"model.processedCompletedHtml\\\"></div>\\n        <div [hidden]=\\\"model.completedState === ''\\\" [class]=\\\"model.css.saveData.root\\\">\\n          <div [class]=\\\"model.completedStateCss\\\">\\n            <span>{{model.completedStateText}}</span>\\n            <input type=\\\"button\\\" [hidden]=\\\"model.completedState != 'error'\\\"\\n              [value]=\\\"model.getLocString('saveAgainButton')\\\" (click)=\\\"model.doComplete()\\\"\\n              [class]=\\\"model.css.saveData.saveAgainButton\\\">\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"model.state === 'completedbefore'\\\" [class]=\\\"model.css.body\\\"\\n          [innerHtml]=\\\"model.processedCompletedBeforeHtml\\\"></div>\\n        <div *ngIf=\\\"model.state === 'loading'\\\" [class]=\\\"model.css.body\\\" [innerHtml]=\\\"model.processedLoadingHtml\\\"></div>\\n        <div *ngIf=\\\"model.state === 'empty'\\\" [class]=\\\"model.css.bodyEmpty\\\">{{model.emptySurveyText}}</div>\\n      </div>\\n    </form>\\n    <sv-brand-info *ngIf=\\\"model.showBrandInfo\\\"></sv-brand-info>\\n  </div>\\n</ng-template>\", components: [{ type: SurveyHeaderComponent, selector: \"'[sv-ng-survey-header]'\", inputs: [\"survey\"] }, { type: TimerPanelComponent, selector: \"sv-timer-panel\", inputs: [\"model\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: PageComponent, selector: \"page\", inputs: [\"model\", \"survey\"] }, { type: BrandInfoComponent, selector: \"sv-brand-info\" }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i3.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i3.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"survey-content\", template: \"<ng-template #template>\\n  <div #surveyContainer *ngIf=\\\"!!model\\\" [class]=\\\"model.getRootCss()\\\">\\n    <form onsubmit=\\\"return false;\\\">\\n      <div class=\\\"sv_custom_header\\\" [hidden]=\\\"model.hasLogo\\\"></div>\\n      <div [class]=\\\"model.css.container\\\">\\n        <div *ngIf=\\\"model.renderedHasHeader\\\" [class]=\\\"model.css.header\\\" [survey]=\\\"model\\\" sv-ng-survey-header></div>\\n        <ng-container *ngIf=\\\"model.isTimerPanelShowingOnTop && !model.isShowStartingPage\\\">\\n          <sv-timer-panel [model]=\\\"model.timerModel\\\"></sv-timer-panel>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"model.isShowProgressBarOnTop && !model.isShowStartingPage\\\">\\n          <ng-template [component]='{ name: \\\"sv-progress-\\\" + this.model.progressBarType, data: { model } }'></ng-template>\\n        </ng-container>\\n        <div *ngIf=\\\"model.isShowingPage\\\" [class]=\\\"model.bodyCss\\\" [style.maxWidth]=\\\"model.renderedWidth\\\">\\n          <sv-action-bar *ngIf=\\\"model.isNavigationButtonsShowingOnTop\\\" [model]=\\\"model.navigationBar\\\"></sv-action-bar>\\n          <!-- ko if: activePage -->\\n            <ng-container *ngIf=\\\"model.activePage\\\">\\n              <div [id]=\\\"model.activePage.id\\\">\\n                <page [model]=\\\"model.activePage\\\" [survey]=\\\"model\\\"></page>\\n              </div>\\n            </ng-container>\\n            <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\\n            <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\\n            <!-- /ko -->\\n            <!-- /ko -->\\n          <!-- /ko -->\\n          <ng-container *ngIf=\\\"model.isShowProgressBarOnBottom && !model.isShowStartingPage\\\">\\n            <ng-template [component]='{ name: \\\"sv-progress-\\\" + this.model.progressBarType, data: { model } }'></ng-template>\\n          </ng-container>\\n          <sv-action-bar *ngIf=\\\"model.isNavigationButtonsShowingOnBottom\\\" [model]=\\\"model.navigationBar\\\"></sv-action-bar>  \\n        </div>\\n        <ng-container *ngIf=\\\"model.isTimerPanelShowingOnBottom && !model.isShowStartingPage\\\">\\n            <sv-timer-panel [model]=\\\"model.timerModel\\\"></sv-timer-panel>\\n        </ng-container>\\n        <div *ngIf=\\\"model.state === 'completed' && model.showCompletedPage\\\" [class]=\\\"model.completedCss\\\"\\n          [innerHtml]=\\\"model.processedCompletedHtml\\\"></div>\\n        <div [hidden]=\\\"model.completedState === ''\\\" [class]=\\\"model.css.saveData.root\\\">\\n          <div [class]=\\\"model.completedStateCss\\\">\\n            <span>{{model.completedStateText}}</span>\\n            <input type=\\\"button\\\" [hidden]=\\\"model.completedState != 'error'\\\"\\n              [value]=\\\"model.getLocString('saveAgainButton')\\\" (click)=\\\"model.doComplete()\\\"\\n              [class]=\\\"model.css.saveData.saveAgainButton\\\">\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"model.state === 'completedbefore'\\\" [class]=\\\"model.css.body\\\"\\n          [innerHtml]=\\\"model.processedCompletedBeforeHtml\\\"></div>\\n        <div *ngIf=\\\"model.state === 'loading'\\\" [class]=\\\"model.css.body\\\" [innerHtml]=\\\"model.processedLoadingHtml\\\"></div>\\n        <div *ngIf=\\\"model.state === 'empty'\\\" [class]=\\\"model.css.bodyEmpty\\\">{{model.emptySurveyText}}</div>\\n      </div>\\n    </form>\\n    <sv-brand-info *ngIf=\\\"model.showBrandInfo\\\"></sv-brand-info>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], rootEl: [{\n                type: ViewChild,\n                args: [\"surveyContainer\", { static: false }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"survey\", SurveyContentComponent);\n\nclass SurveyComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.model;\n    }\n    onModelChanged() {\n        this.changeDetectorRef.detectChanges();\n    }\n}\nSurveyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSurveyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyComponent, selector: \"survey\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\", isInline: true, components: [{ type: ModalComponent, selector: \"sv-ng-modal-container\" }, { type: SurveyContentComponent, selector: \"survey-content\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"survey\",\n                    template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass PopupSurveyComponent extends BaseAngular {\n    constructor(changeDetectorRef) {\n        super(changeDetectorRef);\n        changeDetectorRef.detach();\n    }\n    getModel() {\n        return this.popup;\n    }\n    ngOnChanges(changes) {\n        if (changes[\"model\"]?.currentValue !== changes[\"model\"]?.previousValue) {\n            this.popup = new PopupSurveyModel(null, this.model);\n        }\n        if (this.isExpanded !== undefined) {\n            this.popup.isExpanded = this.isExpanded;\n        }\n        if (this.closeOnCompleteTimeout !== undefined) {\n            this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;\n        }\n        this.popup.isShowing = true;\n        this.changeDetectorRef.detectChanges();\n    }\n}\nPopupSurveyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupSurveyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nPopupSurveyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PopupSurveyComponent, selector: \"popup-survey\", inputs: { model: \"model\", isExpanded: \"isExpanded\", closeOnCompleteTimeout: \"closeOnCompleteTimeout\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div *ngIf=\\\"!!popup && popup.isShowing\\\" [class]=\\\"popup.cssRoot\\\" style=\\\"position: fixed; bottom: 3px; right: 10px;\\\" [style.width]=\\\"popup.renderedWidth\\\" [style.maxWidth]=\\\"popup.renderedWidth\\\">\\n  <div [class]=\\\"popup.cssHeaderRoot\\\">\\n      <span (click)=\\\"popup.changeExpandCollapse()\\\" style=\\\"width: 100%; cursor: pointer;\\\">\\n          <span style=\\\"padding-right:10px\\\" [class]=\\\"popup.cssHeaderTitle\\\">{{popup.locTitle.renderedHtml}}</span>\\n          <span aria-hidden=\\\"true\\\" [class]=\\\"popup.cssButton\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"popup.isExpanded\\\" (click)=\\\"popup.changeExpandCollapse()\\\" style=\\\"float: right; cursor: pointer;\\\">\\n          <span style=\\\"padding-right:10px\\\" [class]=\\\"popup.cssHeaderTitle\\\">X</span>\\n      </span>\\n  </div>\\n  <div *ngIf=\\\"popup.isExpanded\\\" [class]=\\\"popup.cssBody\\\">\\n    <survey [model]=\\\"popup.survey\\\"></survey>\\n  </div>\\n</div>\", styles: [\"\"], components: [{ type: SurveyComponent, selector: \"survey\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupSurveyComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"popup-survey\", template: \"<div *ngIf=\\\"!!popup && popup.isShowing\\\" [class]=\\\"popup.cssRoot\\\" style=\\\"position: fixed; bottom: 3px; right: 10px;\\\" [style.width]=\\\"popup.renderedWidth\\\" [style.maxWidth]=\\\"popup.renderedWidth\\\">\\n  <div [class]=\\\"popup.cssHeaderRoot\\\">\\n      <span (click)=\\\"popup.changeExpandCollapse()\\\" style=\\\"width: 100%; cursor: pointer;\\\">\\n          <span style=\\\"padding-right:10px\\\" [class]=\\\"popup.cssHeaderTitle\\\">{{popup.locTitle.renderedHtml}}</span>\\n          <span aria-hidden=\\\"true\\\" [class]=\\\"popup.cssButton\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"popup.isExpanded\\\" (click)=\\\"popup.changeExpandCollapse()\\\" style=\\\"float: right; cursor: pointer;\\\">\\n          <span style=\\\"padding-right:10px\\\" [class]=\\\"popup.cssHeaderTitle\\\">X</span>\\n      </span>\\n  </div>\\n  <div *ngIf=\\\"popup.isExpanded\\\" [class]=\\\"popup.cssBody\\\">\\n    <survey [model]=\\\"popup.survey\\\"></survey>\\n  </div>\\n</div>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], isExpanded: [{\n                type: Input\n            }], closeOnCompleteTimeout: [{\n                type: Input\n            }] } });\n\nclass ErrorsComponent {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnInit() {\n        if (this.location == \"tooltip\") {\n            this.tooltipManager = new TooltipManager(this.viewContainerRef.element.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (!!this.tooltipManager) {\n            this.tooltipManager.dispose();\n        }\n    }\n    get role() {\n        return \"alert\";\n    }\n    get id() {\n        return this.element.id + \"_errors\";\n    }\n    get ariaLive() {\n        return \"polite\";\n    }\n    get class() {\n        return this.element.cssError;\n    }\n}\nErrorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ErrorsComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nErrorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: { element: \"element\", location: \"location\" }, host: { properties: { \"attr.role\": \"this.role\", \"id\": \"this.id\", \"attr.aria-live\": \"this.ariaLive\", \"class\": \"this.class\" } }, viewQueries: [{ propertyName: \"errorsContainerRef\", first: true, predicate: [\"errorsContainer\"], descendants: true, static: true }], ngImport: i0, template: \"<div *ngFor=\\\"let error of element.errors;\\\">\\n  <span\\n    [class]=\\\"element.cssClasses ? element.cssClasses.error.icon : 'panel-error-icon'\\\"\\n    aria-hidden=\\\"true\\\"\\n  ></span>\\n  <span [class]=\\\"element.cssClasses ? element.cssClasses.error.item : 'panel-error-item'\\\" [model]=\\\"error.locText\\\" sv-ng-string>\\n  </span>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ErrorsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"'[sv-ng-errors]'\", template: \"<div *ngFor=\\\"let error of element.errors;\\\">\\n  <span\\n    [class]=\\\"element.cssClasses ? element.cssClasses.error.icon : 'panel-error-icon'\\\"\\n    aria-hidden=\\\"true\\\"\\n  ></span>\\n  <span [class]=\\\"element.cssClasses ? element.cssClasses.error.item : 'panel-error-item'\\\" [model]=\\\"error.locText\\\" sv-ng-string>\\n  </span>\\n</div>\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { element: [{\n                type: Input\n            }], location: [{\n                type: Input\n            }], errorsContainerRef: [{\n                type: ViewChild,\n                args: [\"errorsContainer\", { static: true }]\n            }], role: [{\n                type: HostBinding,\n                args: [\"attr.role\"]\n            }], id: [{\n                type: HostBinding,\n                args: [\"id\"]\n            }], ariaLive: [{\n                type: HostBinding,\n                args: [\"attr.aria-live\"]\n            }], class: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }] } });\n\nclass ElementHeaderComponent {\n    constructor() {\n    }\n    get rootClass() {\n        return this.element.cssHeader;\n    }\n    click() {\n        this.element.clickTitleFunction();\n    }\n}\nElementHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nElementHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: { element: \"element\" }, host: { listeners: { \"click\": \"click()\" }, properties: { \"class\": \"this.rootClass\" } }, ngImport: i0, template: \"<sv-ng-element-title [element]=\\\"element\\\"></sv-ng-element-title>\\n<div *ngIf=\\\"element.hasDescriptionUnderTitle\\\" [class]=\\\"element.cssDescription\\\" [model]=\\\"element.locDescription\\\" sv-ng-string></div>\", components: [{ type: ElementTitleComponent, selector: \"sv-ng-element-title\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ElementHeaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"'[sv-ng-element-header]'\", template: \"<sv-ng-element-title [element]=\\\"element\\\"></sv-ng-element-title>\\n<div *ngIf=\\\"element.hasDescriptionUnderTitle\\\" [class]=\\\"element.cssDescription\\\" [model]=\\\"element.locDescription\\\" sv-ng-string></div>\" }]\n        }], ctorParameters: function () { return []; }, propDecorators: { element: [{\n                type: Input\n            }], rootClass: [{\n                type: HostBinding,\n                args: [\"class\"]\n            }], click: [{\n                type: HostListener,\n                args: [\"click\"]\n            }] } });\n\nclass SurveyCommentComponent {\n    constructor() {\n    }\n    get comment() {\n        if (!this.question.comment)\n            return \"\";\n        return this.question.comment;\n    }\n}\nSurveyCommentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyCommentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyCommentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: { question: \"question\" }, ngImport: i0, template: \"<textarea *ngIf=\\\"!question.isReadOnlyRenderDiv()\\\" [attr.max-length]=\\\"question.getOthersMaxLength()\\\"  [attr.aria-required]=\\\"question.ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel\\\" [attr.placeholder]=\\\"question.commentOrOtherPlaceholder\\\" \\n  [value]=\\\"comment\\\"\\n  [style.resize]=\\\"question.resizeStyle\\\"\\n  [disabled]=\\\"question.isInputReadOnly\\\"\\n  (change)=\\\"question.onCommentChange($event)\\\"\\n  (input)=\\\"question.onCommentInput($event)\\\"\\n  [class]=\\\"question.cssClasses.other\\\">\\n</textarea>\\n<div *ngIf=\\\"question.isReadOnlyRenderDiv()\\\">{{ question.comment }}</div>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyCommentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-comment, '[sv-ng-comment]'\", template: \"<textarea *ngIf=\\\"!question.isReadOnlyRenderDiv()\\\" [attr.max-length]=\\\"question.getOthersMaxLength()\\\"  [attr.aria-required]=\\\"question.ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel\\\" [attr.placeholder]=\\\"question.commentOrOtherPlaceholder\\\" \\n  [value]=\\\"comment\\\"\\n  [style.resize]=\\\"question.resizeStyle\\\"\\n  [disabled]=\\\"question.isInputReadOnly\\\"\\n  (change)=\\\"question.onCommentChange($event)\\\"\\n  (input)=\\\"question.onCommentInput($event)\\\"\\n  [class]=\\\"question.cssClasses.other\\\">\\n</textarea>\\n<div *ngIf=\\\"question.isReadOnlyRenderDiv()\\\">{{ question.comment }}</div>\\n\" }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }] } });\n\nclass QuestionComponent extends EmbeddedViewContentComponent {\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        if (!!this.rootEl?.nativeElement) {\n            this.model.afterRender(this.rootEl?.nativeElement);\n        }\n    }\n    getComponentName() {\n        if (this.model.customWidget)\n            return \"survey-customwidget\";\n        if (this.model.isDefaultRendering()) {\n            return this.model.getTemplate() + \"-question\";\n        }\n        return this.model.getComponentName();\n    }\n    getQuestionContentWrapperComponentName() {\n        return this.model.survey.getQuestionContentWrapperComponentName(this.model) || this.getComponentName();\n    }\n    getQuestionContentWrapperComponentData() {\n        return {\n            componentName: this.getComponentName(),\n            componentData: {\n                model: this.model,\n                data: this.model.survey.getElementWrapperComponentData(this.model)\n            }\n        };\n    }\n}\nQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: QuestionComponent, selector: \"sv-ng-question\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"rootEl\", first: true, predicate: [\"elementContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"!!model\\\" #elementContainer [class]=\\\"model.getRootCss()\\\" [style]=\\\"{ paddingLeft: model.paddingLeft, paddingRight: model.paddingRight }\\\" [id]=\\\"model.id\\\" [attr.data-name]=\\\"model.name\\\" [attr.role]=\\\"model.ariaRole\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-labelledby]=\\\"model.ariaLabelledBy\\\">\\n    <div *ngIf=\\\"model.showErrorsAboveQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnLeftTop\\\" sv-ng-element-header></div>\\n    <div [class]=\\\"model.cssContent\\\" role=\\\"presentation\\\" [visible]=\\\"!model.isCollapsed\\\">\\n      <div *ngIf=\\\"model.showErrorOnTop && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n      <ng-template [component]=\\\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData(), default: 'skeleton-question' }\\\">\\n      </ng-template>\\n      <div *ngIf=\\\"model.hasComment\\\" [class]=\\\"model.cssClasses.formGroup\\\">\\n        <div>{{ model.commentText }}</div>\\n        <div [question]=\\\"model\\\" sv-ng-comment></div>\\n      </div>\\n      <div *ngIf=\\\"model.showErrorOnBottom && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"model.isErrorsModeTooltip && model.hasVisibleErrors\\\" [element]=\\\"model\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"model.hasDescriptionUnderInput\\\" [class]=\\\"model.cssDescription\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n  </div>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnBottom\\\" sv-ng-element-header></div>\\n    <div *ngIf=\\\"model.showErrorsBelowQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n  </div>\\n</ng-template>\", components: [{ type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: [\"element\"] }, { type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-question\", template: \"<ng-template #template>\\n  <div *ngIf=\\\"!!model\\\" #elementContainer [class]=\\\"model.getRootCss()\\\" [style]=\\\"{ paddingLeft: model.paddingLeft, paddingRight: model.paddingRight }\\\" [id]=\\\"model.id\\\" [attr.data-name]=\\\"model.name\\\" [attr.role]=\\\"model.ariaRole\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-labelledby]=\\\"model.ariaLabelledBy\\\">\\n    <div *ngIf=\\\"model.showErrorsAboveQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnLeftTop\\\" sv-ng-element-header></div>\\n    <div [class]=\\\"model.cssContent\\\" role=\\\"presentation\\\" [visible]=\\\"!model.isCollapsed\\\">\\n      <div *ngIf=\\\"model.showErrorOnTop && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n      <ng-template [component]=\\\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData(), default: 'skeleton-question' }\\\">\\n      </ng-template>\\n      <div *ngIf=\\\"model.hasComment\\\" [class]=\\\"model.cssClasses.formGroup\\\">\\n        <div>{{ model.commentText }}</div>\\n        <div [question]=\\\"model\\\" sv-ng-comment></div>\\n      </div>\\n      <div *ngIf=\\\"model.showErrorOnBottom && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"model.isErrorsModeTooltip && model.hasVisibleErrors\\\" [element]=\\\"model\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"model.hasDescriptionUnderInput\\\" [class]=\\\"model.cssDescription\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n  </div>\\n    <div [element]=\\\"model\\\" *ngIf=\\\"model.hasTitleOnBottom\\\" sv-ng-element-header></div>\\n    <div *ngIf=\\\"model.showErrorsBelowQuestion && model.hasVisibleErrors\\\" [element]=\\\"model\\\" sv-ng-errors></div>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], rootEl: [{\n                type: ViewChild,\n                args: [\"elementContainer\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"question\", QuestionComponent);\n\nclass StringViewerComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n    }\n    ngDoCheck() {\n        if (this.model !== this.previousModel) {\n            if (!!this.previousModel) {\n                this.clearOnChanged(this.previousModel);\n            }\n            if (!!this.model) {\n                this.model.onChanged = () => { this.changeDetectorRef.detectChanges(); };\n            }\n            this.previousModel = this.model;\n        }\n    }\n    clearOnChanged(model) {\n        model.onChanged = () => { };\n    }\n    ngOnDestroy() {\n        !!this.model && this.clearOnChanged(this.model);\n    }\n}\nStringViewerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: StringViewerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nStringViewerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: StringViewerComponent, selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<span *ngIf=\\\"!model.hasHtml\\\" class=\\\"sv-string-viewer\\\">{{model.renderedHtml}}</span>\\n<span *ngIf=\\\"model.hasHtml\\\" class=\\\"sv-string-viewer\\\" [innerHtml]=\\\"model.renderedHtml\\\"></span>\", styles: [\"\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: StringViewerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\", template: \"<span *ngIf=\\\"!model.hasHtml\\\" class=\\\"sv-string-viewer\\\">{{model.renderedHtml}}</span>\\n<span *ngIf=\\\"model.hasHtml\\\" class=\\\"sv-string-viewer\\\" [innerHtml]=\\\"model.renderedHtml\\\"></span>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(LocalizableString.defaultRenderer, StringViewerComponent);\n\nclass PopupPointerComponent extends BaseAngular {\n    get popupModel() {\n        return this.model;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nPopupPointerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupPointerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPopupPointerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PopupPointerComponent, selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"sv-popup__pointer\\\" [style]=\\\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\\\"></span>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupPointerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\", template: \"<span class=\\\"sv-popup__pointer\\\" [style]=\\\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\\\"></span>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"popup-pointer\", PopupPointerComponent);\n\nclass PopupComponent extends BaseAngular {\n    constructor(viewContainerRef, changeDetectorRef, popupService) {\n        super(changeDetectorRef, viewContainerRef);\n        this.popupService = popupService;\n    }\n    getModel() {\n        return this.popupModel;\n    }\n    onModelChanged() {\n        this.destroyModel();\n        this.model = createPopupViewModel(this.popupModel, this.viewContainerRef?.element.nativeElement.parentElement);\n        this.model.initializePopupContainer();\n        this.portalHost = this.popupService.createComponent(this.model);\n    }\n    ngOnInit() {\n        this.onModelChanged();\n    }\n    destroyModel() {\n        this.portalHost?.detach();\n        this.model?.unmountPopupContainer();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.destroyModel();\n    }\n}\nPopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }, { token: PopupService }], target: i0.ɵɵFactoryTarget.Component });\nPopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: { popupModel: \"popupModel\" }, usesInheritance: true, ngImport: i0, template: \"<div></div>\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PopupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-popup, '[sv-ng-popup]'\",\n                    template: \"<div></div>\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }, { type: PopupService }]; }, propDecorators: { popupModel: [{\n                type: Input\n            }] } });\n\nclass QuestionSkeletonComponent {\n}\nQuestionSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionSkeletonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nQuestionSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: QuestionSkeletonComponent, selector: \"question-skeleton\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div class=\\\"sv-skeleton--not-implemented\\\">\\n  <div>{{ model.getType() + \\\" question type renderer is not implemented yet.\\\" }}</div>\\n  <div>{{ model.value }}</div>\\n</div>\\n\", styles: [\".sv-skeleton--not-implemented{width:100%;min-width:300px;min-height:40px;border:1px solid red;text-align:center}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionSkeletonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"question-skeleton\", template: \"<div class=\\\"sv-skeleton--not-implemented\\\">\\n  <div>{{ model.getType() + \\\" question type renderer is not implemented yet.\\\" }}</div>\\n  <div>{{ model.value }}</div>\\n</div>\\n\", styles: [\".sv-skeleton--not-implemented{width:100%;min-width:300px;min-height:40px;border:1px solid red;text-align:center}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"skeleton-question\", QuestionSkeletonComponent);\n\nclass DropdownComponent extends BaseAngular {\n    get dropdownModel() {\n        return this.dropdownListModel;\n    }\n    getModel() {\n        return this.model;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.dropdownListModel = this.model.dropdownListModel || new DropdownListModel(this.model);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.dropdownListModel?.dispose();\n    }\n    click(event) {\n        this.dropdownListModel?.onClick(event);\n    }\n    clear(event) {\n        this.dropdownListModel?.onClear(event);\n    }\n    keyhandler(event) {\n        this.dropdownListModel?.keyHandler(event);\n    }\n    blur(event) {\n        this.dropdownListModel?.onBlur(event);\n        this.updateInputDomElement();\n    }\n    inputChange(event) {\n        this.detectChanges();\n    }\n    updateInputDomElement() {\n        if (!!this.inputElementRef?.nativeElement) {\n            const control = this.inputElementRef.nativeElement;\n            const newValue = this.model.filterString;\n            if (!Helpers.isTwoValueEquals(newValue, control.value)) {\n                control.value = this.model.filterString || \"\";\n            }\n        }\n    }\n}\nDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"inputElementRef\", first: true, predicate: [\"inputElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\" (click)=\\\"click($event)\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.role]=\\\"model.ariaRole\\\">\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <ng-container *ngIf=\\\"model.showInputFieldComponent\\\">\\n                <ng-template [component]=\\\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\\\"></ng-template>\\n            </ng-container>\\n            <sv-ng-string *ngIf=\\\"model.showSelectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n            <input #inputElement type=\\\"text\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"dropdownModel.filterString\\\" [class]=\\\"model.cssClasses.filterStringInput\\\"\\n            [attr.role]=\\\"dropdownModel.filterStringEnabled ? model.ariaRole : null\\\"\\n            [attr.id]=\\\"model.getInputId()\\\"\\n            [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : -1\\\"\\n            [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\"\\n            [attr.aria-label]=\\\"model.placeholder\\\"\\n            [attr.placeholder]=\\\"model.readOnlyText\\\" [attr.readonly]=\\\"!dropdownModel.searchEnabled ? true : null\\\" \\n            (change)=\\\"inputChange($event)\\\" (blur)=\\\"blur($event)\\\" />\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\"\\n            [class]=\\\"model.cssClasses.cleanButton\\\" (click)=\\\"clear($event)\\\" [visible]=\\\"!model.isEmpty()\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"dropdownModel.popupModel\\\"></sv-ng-popup>\\n    <div disabled *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">\\n        <sv-ng-string *ngIf=\\\"model.selectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n        <div>{{ model.readOnlyText }}</div>\\n    </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\" (click)=\\\"click($event)\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.role]=\\\"model.ariaRole\\\">\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <ng-container *ngIf=\\\"model.showInputFieldComponent\\\">\\n                <ng-template [component]=\\\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\\\"></ng-template>\\n            </ng-container>\\n            <sv-ng-string *ngIf=\\\"model.showSelectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n            <input #inputElement type=\\\"text\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"dropdownModel.filterString\\\" [class]=\\\"model.cssClasses.filterStringInput\\\"\\n            [attr.role]=\\\"dropdownModel.filterStringEnabled ? model.ariaRole : null\\\"\\n            [attr.id]=\\\"model.getInputId()\\\"\\n            [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : -1\\\"\\n            [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\"\\n            [attr.aria-label]=\\\"model.placeholder\\\"\\n            [attr.placeholder]=\\\"model.readOnlyText\\\" [attr.readonly]=\\\"!dropdownModel.searchEnabled ? true : null\\\" \\n            (change)=\\\"inputChange($event)\\\" (blur)=\\\"blur($event)\\\" />\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\"\\n            [class]=\\\"model.cssClasses.cleanButton\\\" (click)=\\\"clear($event)\\\" [visible]=\\\"!model.isEmpty()\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"dropdownModel.popupModel\\\"></sv-ng-popup>\\n    <div disabled *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">\\n        <sv-ng-string *ngIf=\\\"model.selectedItemLocText\\\" [model]=\\\"model.selectedItemLocText\\\"></sv-ng-string>\\n        <div>{{ model.readOnlyText }}</div>\\n    </div>\\n</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], inputElementRef: [{\n                type: ViewChild,\n                args: [\"inputElement\"]\n            }] } });\n\nclass TagboxFilterComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nTagboxFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagboxFilterComponent, selector: \"sv-tagbox-filter\", inputs: { model: \"model\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <input\\n    type=\\\"text\\\"\\n    autocomplete=\\\"off\\\"\\n    [(ngModel)]=\\\"model.filterString\\\"\\n    [attr.id]=\\\"question.getInputId()\\\"\\n    [class]=\\\"question.cssClasses.filterStringInput\\\"\\n    [attr.role]=\\\"model.filterStringEnabled ? question.ariaRole : null\\\"\\n    [attr.readonly]=\\\"!model.searchEnabled ? true : null\\\"\\n    [attr.disabled]=\\\"question.isInputReadOnly ? true : null\\\"\\n    [attr.size]=\\\"!model.filterString ? 1 : null\\\"\\n    [attr.aria-label]=\\\"question.placeholder\\\"\\n    [attr.placeholder]=\\\"model.filterStringPlaceholder\\\"\\n    (keydown)=\\\"model.inputKeyHandler($event)\\\"\\n    (blur)=\\\"model.onBlur($event)\\\"\\n  />\\n</ng-template>\\n\", styles: [\":host{display:none}\\n\"], directives: [{ type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxFilterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-tagbox-filter\", template: \"<ng-template #template>\\n  <input\\n    type=\\\"text\\\"\\n    autocomplete=\\\"off\\\"\\n    [(ngModel)]=\\\"model.filterString\\\"\\n    [attr.id]=\\\"question.getInputId()\\\"\\n    [class]=\\\"question.cssClasses.filterStringInput\\\"\\n    [attr.role]=\\\"model.filterStringEnabled ? question.ariaRole : null\\\"\\n    [attr.readonly]=\\\"!model.searchEnabled ? true : null\\\"\\n    [attr.disabled]=\\\"question.isInputReadOnly ? true : null\\\"\\n    [attr.size]=\\\"!model.filterString ? 1 : null\\\"\\n    [attr.aria-label]=\\\"question.placeholder\\\"\\n    [attr.placeholder]=\\\"model.filterStringPlaceholder\\\"\\n    (keydown)=\\\"model.inputKeyHandler($event)\\\"\\n    (blur)=\\\"model.onBlur($event)\\\"\\n  />\\n</ng-template>\\n\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-filter\", TagboxFilterComponent);\n\nclass TagboxItemComponent extends BaseAngular {\n    removeItem(event) {\n        this.question.dropdownListModel.deselectItem(this.item.value);\n        event.stopPropagation();\n    }\n    getModel() {\n        return this.item;\n    }\n}\nTagboxItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagboxItemComponent, selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\", inputs: { item: \"item\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"sv-tagbox__item\\\">\\n  <div class=\\\"sv-tagbox__item-text\\\" [model]=\\\"item.locText\\\" sv-ng-string></div>  \\n  <div [class]=\\\"question.cssClasses.cleanItemButton\\\" (click)=\\\"removeItem($event)\\\">\\n    <svg [iconName]=\\\"question.cssClasses.cleanItemButtonIconId\\\" [partCss]=\\\"question.cssClasses.cleanItemButtonSvg\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n  </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\", template: \"<div class=\\\"sv-tagbox__item\\\">\\n  <div class=\\\"sv-tagbox__item-text\\\" [model]=\\\"item.locText\\\" sv-ng-string></div>  \\n  <div [class]=\\\"question.cssClasses.cleanItemButton\\\" (click)=\\\"removeItem($event)\\\">\\n    <svg [iconName]=\\\"question.cssClasses.cleanItemButtonIconId\\\" [partCss]=\\\"question.cssClasses.cleanItemButtonSvg\\\" [size]=\\\"16\\\" sv-ng-svg-icon></svg>\\n  </div>\\n</div>\" }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-item\", TagboxItemComponent);\n\nclass TagboxComponent {\n    get dropdownModel() {\n        return this.dropdownListModel;\n    }\n    getModel() {\n        return this.model;\n    }\n    ngOnInit() {\n        this.dropdownListModel = this.model.dropdownListModel || new DropdownMultiSelectListModel(this.model);\n    }\n    ngOnDestroy() {\n        this.dropdownListModel?.dispose();\n    }\n    click(event) {\n        this.dropdownListModel?.onClick(event);\n    }\n    clear(event) {\n        this.dropdownListModel?.onClear(event);\n    }\n    keyhandler(event) {\n        this.dropdownListModel?.keyHandler(event);\n    }\n    blur(event) {\n        this.dropdownListModel?.onBlur(event);\n    }\n}\nTagboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagboxComponent, selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\" (click)=\\\"click($event)\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.role]=\\\"model.ariaRole\\\">\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <ng-container *ngIf=\\\"!model.isEmpty()\\\">\\n                <sv-ng-tagbox-item *ngFor=\\\"let item of model.selectedChoices\\\" [item]=\\\"item\\\" [question]=\\\"model\\\">\\n                </sv-ng-tagbox-item>\\n            </ng-container>\\n            <ng-template [component]=\\\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\\\"></ng-template>\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\" [class]=\\\"model.cssClasses.cleanButton\\\"\\n            (click)=\\\"clear($event)\\\" [visible]=\\\"!model.isEmpty()\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    <div disabled *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">\\n        <div>{{ model.readOnlyText }}</div>\\n    </div>\\n</div>\", components: [{ type: TagboxItemComponent, selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\", inputs: [\"item\", \"question\"] }, { type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\", template: \"<div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <div *ngIf=\\\"!model.isReadOnly\\\" [attr.tabindex]=\\\"dropdownModel.inputReadOnly ? null : 0\\\" [class]=\\\"model.getControlClass()\\\"\\n        [attr.disabled]=\\\"model.isInputReadOnly ? true : null\\\" (click)=\\\"click($event)\\\" (blur)=\\\"blur($event)\\\"\\n        (keydown)=\\\"keyhandler($event)\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n        [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n        [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.role]=\\\"model.ariaRole\\\">\\n        <div [class]=\\\"model.cssClasses.controlValue\\\">\\n            <ng-container *ngIf=\\\"!model.isEmpty()\\\">\\n                <sv-ng-tagbox-item *ngFor=\\\"let item of model.selectedChoices\\\" [item]=\\\"item\\\" [question]=\\\"model\\\">\\n                </sv-ng-tagbox-item>\\n            </ng-container>\\n            <ng-template [component]=\\\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\\\"></ng-template>\\n        </div>\\n        <div *ngIf=\\\"(model.allowClear && model.cssClasses.cleanButtonIconId)\\\" [class]=\\\"model.cssClasses.cleanButton\\\"\\n            (click)=\\\"clear($event)\\\" [visible]=\\\"!model.isEmpty()\\\">\\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\\n            <!-- /ko -->\\n            <svg [iconName]=\\\"model.cssClasses.cleanButtonIconId\\\" [partCss]=\\\"model.cssClasses.cleanButtonSvg\\\" [title]=\\\"model.clearCaption\\\"\\n                [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </div>\\n    </div>\\n    <sv-ng-popup *ngIf=\\\"!model.isReadOnly\\\" [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    <div disabled *ngIf=\\\"model.isReadOnly\\\" [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">\\n        <div>{{ model.readOnlyText }}</div>\\n    </div>\\n</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\n\nclass DropdownOptionItemComponent extends BaseAngular {\n    getModel() {\n        return this.item;\n    }\n}\nDropdownOptionItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownOptionItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownOptionItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DropdownOptionItemComponent, selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\", inputs: { item: \"item\" }, usesInheritance: true, ngImport: i0, template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>', isInline: true, directives: [{ type: i3.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i3.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownOptionItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\",\n                    template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>',\n                }]\n        }], propDecorators: { item: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-dropdown-option-item\", DropdownOptionItemComponent);\n\nclass DropdownSelectComponent {\n    get editableValue() {\n        return this.model.renderedValue || \"\";\n    }\n    set editableValue(newValue) {\n        if (newValue === \"\") {\n            this.model.renderedValue = undefined;\n        }\n        else {\n            this.model.renderedValue = newValue;\n        }\n    }\n    click(event) {\n        this.model.onClick(event);\n    }\n    keyup(event) {\n        this.model.onKeyUp(event);\n    }\n}\nDropdownSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDropdownSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DropdownSelectComponent, selector: \"sv-ng-dropdown-select-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\">\\n  <div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <select *ngIf=\\\"!model.isReadOnly\\\" [attr.id]=\\\"model.inputId\\\" [(ngModel)]=\\\"editableValue\\\"\\n      [disabled]=\\\"model.isInputReadOnly\\\" (click)=\\\"click($event)\\\" (keyup)=\\\"keyup($event)\\\"\\n      [class]=\\\"model.getControlClass()\\\" [attr.autocomplete]=\\\"model.autocomplete\\\" [required]=\\\"model.isRequired\\\"\\n      [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n      [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\">\\n      <option *ngIf=\\\"model.allowClear\\\" value=\\\"\\\">{{ model.placeholder }}</option>\\n      <ng-template *ngFor=\\\"let item of model.visibleChoices\\\" [component]=\\\"{ name: 'sv-dropdown-option-item', data: { item } }\\\"></ng-template>\\n    </select>\\n    <div *ngIf=\\\"model.isReadOnly\\\" disabled [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">{{ model.readOnlyText }}</div>\\n  </div>\\n  <div *ngIf=\\\" model.isOtherSelected\\\" class=\\\"form-group\\\"\\n    [style.display]=\\\"model.isFlowLayout ? 'inline': '' \\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\", components: [{ type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i3.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i3.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i3.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownSelectComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-dropdown-select-question\", template: \"<div [class]=\\\"model.renderCssRoot\\\">\\n  <div [class]=\\\"model.cssClasses.selectWrapper\\\">\\n    <select *ngIf=\\\"!model.isReadOnly\\\" [attr.id]=\\\"model.inputId\\\" [(ngModel)]=\\\"editableValue\\\"\\n      [disabled]=\\\"model.isInputReadOnly\\\" (click)=\\\"click($event)\\\" (keyup)=\\\"keyup($event)\\\"\\n      [class]=\\\"model.getControlClass()\\\" [attr.autocomplete]=\\\"model.autocomplete\\\" [required]=\\\"model.isRequired\\\"\\n      [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n      [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\">\\n      <option *ngIf=\\\"model.allowClear\\\" value=\\\"\\\">{{ model.placeholder }}</option>\\n      <ng-template *ngFor=\\\"let item of model.visibleChoices\\\" [component]=\\\"{ name: 'sv-dropdown-option-item', data: { item } }\\\"></ng-template>\\n    </select>\\n    <div *ngIf=\\\"model.isReadOnly\\\" disabled [class]=\\\"model.getControlClass()\\\" [attr.id]=\\\"model.inputId\\\">{{ model.readOnlyText }}</div>\\n  </div>\\n  <div *ngIf=\\\" model.isOtherSelected\\\" class=\\\"form-group\\\"\\n    [style.display]=\\\"model.isFlowLayout ? 'inline': '' \\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"dropdown-select-question\", DropdownSelectComponent);\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"select\", \"dropdown-select-question\");\n\n//temp: disables angular sanitizer, which breaks a links\nclass SafeUrlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustUrl(url);\n    }\n}\nSafeUrlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeUrlPipe, deps: [{ token: i1$1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeUrlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeUrlPipe, name: \"safeUrl\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeUrlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeUrl\" }]\n        }], ctorParameters: function () { return [{ type: i1$1.DomSanitizer }]; } });\nclass SafeResourceUrlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\nSafeResourceUrlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeResourceUrlPipe, deps: [{ token: i1$1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeResourceUrlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeResourceUrlPipe, name: \"safeResourceUrl\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeResourceUrlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeResourceUrl\" }]\n        }], ctorParameters: function () { return [{ type: i1$1.DomSanitizer }]; } });\n\nclass LogoImageComponent extends EmbeddedViewContentComponent {\n    get survey() {\n        return this.data;\n    }\n}\nLogoImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: LogoImageComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLogoImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: LogoImageComponent, selector: \"sv-logo-image\", inputs: { data: \"data\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <img\\n  [class]=\\\"survey.css.logoImage\\\"\\n  [attr.src]=\\\"survey.locLogo.renderedHtml | safeUrl\\\"\\n  [attr.width]=\\\"survey.logoWidth ? survey.logoWidth : undefined\\\"\\n  [attr.height]=\\\"survey.logoHeight ? survey.logoHeight : undefined\\\"\\n  [attr.alt]=\\\"survey.locTitle.renderedHtml\\\"\\n  [style.objectFit]=\\\"survey.logoFit\\\"\\n  />\\n</ng-template>\", styles: [\":host{display:none}\\n\"], pipes: { \"safeUrl\": SafeUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: LogoImageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-logo-image\", template: \"<ng-template #template>\\n  <img\\n  [class]=\\\"survey.css.logoImage\\\"\\n  [attr.src]=\\\"survey.locLogo.renderedHtml | safeUrl\\\"\\n  [attr.width]=\\\"survey.logoWidth ? survey.logoWidth : undefined\\\"\\n  [attr.height]=\\\"survey.logoHeight ? survey.logoHeight : undefined\\\"\\n  [attr.alt]=\\\"survey.locTitle.renderedHtml\\\"\\n  [style.objectFit]=\\\"survey.logoFit\\\"\\n  />\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { data: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-logo-image\", LogoImageComponent);\n\nclass QuestionAngular extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        if (!!this.model) {\n            this.model.afterRenderQuestionElement(this.elementContentRef?.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (!!this.model) {\n            this.model.beforeDestroyQuestionElement(this.elementContentRef?.nativeElement);\n        }\n        super.ngOnDestroy();\n    }\n}\nQuestionAngular.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionAngular, deps: null, target: i0.ɵɵFactoryTarget.Component });\nQuestionAngular.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: QuestionAngular, selector: \"ng-component\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"elementContentRef\", first: true, predicate: [\"contentElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: QuestionAngular, decorators: [{\n            type: Component,\n            args: [{\n                    template: \"\"\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], elementContentRef: [{\n                type: ViewChild,\n                args: [\"contentElement\"]\n            }] } });\n\nclass TextQuestionComponent extends QuestionAngular {\n}\nTextQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TextQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTextQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TextQuestionComponent, selector: \"sv-ng-text-question\", usesInheritance: true, ngImport: i0, template: \"  <ng-container [ngTemplateOutlet]=\\\"input\\\" *ngIf=\\\"!model.dataListId && !model.isReadOnlyRenderDiv()\\\"></ng-container>\\n  <div *ngIf=\\\"model.dataListId && !model.isReadOnlyRenderDiv()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"input\\\"></ng-container>\\n    <datalist [id]=\\\"model.dataListId\\\">\\n      <option *ngFor=\\\"let dataListItem of model.dataList\\\" [value]=\\\"dataListItem\\\"></option>\\n    </datalist>\\n  </div>\\n  <div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ model.value }}</div>\\n  <ng-template #input>\\n    <input [style]=\\\"model.inputStyle\\\" [class]=\\\"model.getControlClass()\\\" [attr.list]=\\\"model.dataListId\\\"\\n    (change)=\\\"model.onChange($event)\\\" [attr.value]=\\\"model.value\\\" [disabled]=\\\"model.isInputReadOnly\\\" name=\\\"user\\\" [type]=\\\"model.inputType\\\" [id]=\\\"model.inputId\\\" [attr.placeholder]=\\\"model.renderedPlaceholder || ''\\\"\\n    (keyup)=\\\"model.onKeyUp($event)\\\" (keydown)=\\\"model.onKeyDown($event)\\\" (blur)=\\\"model.onBlur($event)\\\" (compositionupdate)=\\\"model.onCompositionUpdate($event)\\\" \\n    [attr.size] = \\\"model.renderedInputSize\\\" [attr.max-length]= \\\"model.getMaxLength()\\\" [attr.min]=\\\"model.renderedMin\\\"\\n    [attr.max]=\\\"model.renderedMax\\\" [attr.step]=\\\"model.renderedStep\\\" [attr.max]=\\\"model.renderedMax\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.autocomplete]=\\\"model.autocomplete\\\"\\n    [attr.ar] #contentElement/>\\n  </ng-template>\", styles: [\"\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i3.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TextQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-text-question\", template: \"  <ng-container [ngTemplateOutlet]=\\\"input\\\" *ngIf=\\\"!model.dataListId && !model.isReadOnlyRenderDiv()\\\"></ng-container>\\n  <div *ngIf=\\\"model.dataListId && !model.isReadOnlyRenderDiv()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"input\\\"></ng-container>\\n    <datalist [id]=\\\"model.dataListId\\\">\\n      <option *ngFor=\\\"let dataListItem of model.dataList\\\" [value]=\\\"dataListItem\\\"></option>\\n    </datalist>\\n  </div>\\n  <div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ model.value }}</div>\\n  <ng-template #input>\\n    <input [style]=\\\"model.inputStyle\\\" [class]=\\\"model.getControlClass()\\\" [attr.list]=\\\"model.dataListId\\\"\\n    (change)=\\\"model.onChange($event)\\\" [attr.value]=\\\"model.value\\\" [disabled]=\\\"model.isInputReadOnly\\\" name=\\\"user\\\" [type]=\\\"model.inputType\\\" [id]=\\\"model.inputId\\\" [attr.placeholder]=\\\"model.renderedPlaceholder || ''\\\"\\n    (keyup)=\\\"model.onKeyUp($event)\\\" (keydown)=\\\"model.onKeyDown($event)\\\" (blur)=\\\"model.onBlur($event)\\\" (compositionupdate)=\\\"model.onCompositionUpdate($event)\\\" \\n    [attr.size] = \\\"model.renderedInputSize\\\" [attr.max-length]= \\\"model.getMaxLength()\\\" [attr.min]=\\\"model.renderedMin\\\"\\n    [attr.max]=\\\"model.renderedMax\\\" [attr.step]=\\\"model.renderedStep\\\" [attr.max]=\\\"model.renderedMax\\\" [attr.aria-required]=\\\"model.ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [attr.autocomplete]=\\\"model.autocomplete\\\"\\n    [attr.ar] #contentElement/>\\n  </ng-template>\", styles: [\"\"] }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"text-question\", TextQuestionComponent);\n\nclass SafeHtmlPipe {\n    constructor(domSanitizer) {\n        this.domSanitizer = domSanitizer;\n    }\n    transform(url) {\n        return this.domSanitizer.bypassSecurityTrustHtml(url);\n    }\n}\nSafeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, deps: [{ token: i1$1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSafeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, name: \"safeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SafeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: \"safeHtml\" }]\n        }], ctorParameters: function () { return [{ type: i1$1.DomSanitizer }]; } });\n\nclass HtmlQuestionComponent extends QuestionAngular {\n    onModelChanged() {\n        super.onModelChanged();\n        this.model.locHtml.onChanged = () => {\n            this.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        this.model.locHtml.onChanged = () => { };\n        super.ngOnDestroy();\n    }\n}\nHtmlQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HtmlQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHtmlQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: HtmlQuestionComponent, selector: \"sv-ng-html-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" [innerHTML]=\\\"model.locHtml.renderedHtml | safeHtml\\\" #contentElement></div>\", pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HtmlQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-html-question\", template: \"<div [class]=\\\"model.renderCssRoot\\\" [innerHTML]=\\\"model.locHtml.renderedHtml | safeHtml\\\" #contentElement></div>\", styles: [] }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"html-question\", HtmlQuestionComponent);\n\nclass SelectBaseComponent extends QuestionAngular {\n    constructor() {\n        super(...arguments);\n        this.inputType = \"checkbox\";\n        this.showLegend = true;\n    }\n    getDefaultComponentName() {\n        return \"sv-ng-selectbase-item\";\n    }\n    trackItemBy(_, item) {\n        return item.value;\n    }\n    trackColumnBy(index) {\n        return index;\n    }\n    getItemValueComponentName(item) {\n        return this.model.getItemValueWrapperComponentName(item) || this.getDefaultComponentName();\n    }\n    getItemValueComponentData(item) {\n        return {\n            componentName: this.getDefaultComponentName(),\n            componentData: {\n                question: this.model,\n                model: item,\n                inputType: this.inputType,\n                data: this.model.getItemValueWrapperComponentData(item)\n            }\n        };\n    }\n}\nSelectBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SelectBaseComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSelectBaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SelectBaseComponent, selector: \"['sv-ng-selectbase']\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SelectBaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"['sv-ng-selectbase']\", template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"selectbase\", SelectBaseComponent);\n\nclass RadiogroupComponent extends SelectBaseComponent {\n    ngOnInit() {\n        this.inputType = \"radio\";\n        this.showLegend = false;\n        super.ngOnInit();\n    }\n}\nRadiogroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RadiogroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRadiogroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RadiogroupComponent, selector: \"sv-ng-radiogroup-question\", usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RadiogroupComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-radiogroup-question\", template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"radiogroup-question\", RadiogroupComponent);\n\nclass RadiogroupItemComponent {\n    constructor() {\n    }\n}\nRadiogroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RadiogroupItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nRadiogroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RadiogroupItemComponent, selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\", inputs: { question: \"question\", model: \"model\" }, ngImport: i0, template: \"<input type=\\\"radio\\\" [name]=\\\"question.questionName\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"\\n/>\\n<ng-content></ng-content>\", styles: [\"\"], directives: [{ type: i3.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RadiogroupItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\", template: \"<input type=\\\"radio\\\" [name]=\\\"question.questionName\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"\\n/>\\n<ng-content></ng-content>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass CheckboxComponent extends SelectBaseComponent {\n}\nCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CheckboxComponent, selector: \"sv-ng-checkbox-question\", usesInheritance: true, ngImport: i0, template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\", components: [{ type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CheckboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-checkbox-question\", template: \"<fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" role=\\\"presentation\\\" #contentElement>\\n  <legend *ngIf=\\\"showLegend\\\" role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n  <ng-container *ngIf=\\\"model.hasHeadItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.headItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!model.hasColumns && !model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.bodyItems; trackBy: trackItemBy\\\" >\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div [class]=\\\"model.cssClasses.rootRow\\\" *ngIf=\\\"!model.hasColumns && model.blockedRow\\\">\\n    <ng-container *ngFor=\\\"let item of model.dataChoices; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </div>\\n  <ng-container *ngIf=\\\"model.hasColumns\\\">\\n    <div [class]=\\\"model.cssClasses.rootMultiColumn\\\">\\n      <div [class]=\\\"model.getColumnClass()\\\" *ngFor=\\\"let column of model.columns; trackBy: trackColumnBy\\\" role=\\\"presentation\\\">\\n        <ng-container *ngFor=\\\"let item of column; trackBy: trackItemBy\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"model.hasFootItems\\\">\\n    <ng-container *ngFor=\\\"let item of model.footItems; trackBy: trackItemBy\\\">\\n      <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n    </ng-container>\\n  </ng-container>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n  <div *ngIf=\\\"model.showClearButtonInContent\\\">\\n    <input\\n      type=\\\"button\\\"\\n      (click)=\\\"model.clearValue()\\\"\\n      [value]=\\\"model.clearButtonCaption\\\"\\n      [class]=\\\"model.cssClasses.clearButton\\\"\\n    />\\n  </div>\\n</fieldset>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"checkbox-question\", CheckboxComponent);\n\nclass CheckboxItemComponent {\n    constructor() {\n    }\n    onChange(event) {\n        var newValue = [].concat(this.question.renderedValue || []);\n        var index = newValue.indexOf(this.model.value);\n        if (event.target.checked) {\n            if (index < 0) {\n                newValue.push(this.model.value);\n            }\n        }\n        else {\n            if (index > -1) {\n                newValue.splice(index, 1);\n            }\n        }\n        this.question.renderedValue = newValue;\n    }\n    onSelectAllChange(event) {\n        this.question.toggleSelectAll();\n    }\n}\nCheckboxItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CheckboxItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckboxItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CheckboxItemComponent, selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\", inputs: { question: \"question\", model: \"model\" }, ngImport: i0, template: \"<input *ngIf=\\\"model == question.selectAllItem\\\" role=\\\"option\\\" type=\\\"checkbox\\\" [name]=\\\"question.name\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [checked]=\\\"question.isAllSelected\\\" [value]=\\\"''\\\" (change)=\\\"onSelectAllChange($event)\\\"/>\\n<input *ngIf=\\\"model != question.selectAllItem\\\" role=\\\"option\\\" type=\\\"checkbox\\\" [name]=\\\"question.name\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [checked]=\\\"question.isItemSelected(model)\\\" [value]=\\\"model.value\\\" (change)=\\\"onChange($event)\\\"/>\\n<ng-content></ng-content>\", styles: [\"\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CheckboxItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\", template: \"<input *ngIf=\\\"model == question.selectAllItem\\\" role=\\\"option\\\" type=\\\"checkbox\\\" [name]=\\\"question.name\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [checked]=\\\"question.isAllSelected\\\" [value]=\\\"''\\\" (change)=\\\"onSelectAllChange($event)\\\"/>\\n<input *ngIf=\\\"model != question.selectAllItem\\\" role=\\\"option\\\" type=\\\"checkbox\\\" [name]=\\\"question.name\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n  [disabled]=\\\"!question.getItemEnabled(model)\\\" [checked]=\\\"question.isItemSelected(model)\\\" [value]=\\\"model.value\\\" (change)=\\\"onChange($event)\\\"/>\\n<ng-content></ng-content>\", styles: [\"\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass DropdownQuestionComponent extends QuestionAngular {\n}\nDropdownQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDropdownQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DropdownQuestionComponent, selector: \"sv-ng-dropdown-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\", components: [{ type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: [\"model\"] }, { type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DropdownQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-dropdown-question\", template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"dropdown-question\", DropdownQuestionComponent);\n\nclass TagboxQuestionComponent extends QuestionAngular {\n}\nTagboxQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTagboxQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagboxQuestionComponent, selector: \"sv-ng-tagbox-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-tagbox [model]=\\\"model\\\"></sv-ng-tagbox>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\", components: [{ type: TagboxComponent, selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\", inputs: [\"model\"] }, { type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagboxQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-tagbox-question\", template: \"<div [class]=\\\"model.renderCssRoot\\\" #contentElement>\\n  <sv-ng-tagbox [model]=\\\"model\\\"></sv-ng-tagbox>\\n  <div *ngIf=\\\"model.isOtherSelected\\\" class=\\\"form-group\\\" [question]=\\\"model\\\" sv-ng-comment></div>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"tagbox-question\", TagboxQuestionComponent);\n\nclass RatingQuestionComponent extends QuestionAngular {\n    trackByFn(index) {\n        return index;\n    }\n    onClick(event) {\n        event.stopPropagation();\n        this.model.setValueFromClick(event.target.value);\n    }\n}\nRatingQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RatingQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRatingQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RatingQuestionComponent, selector: \"sv-ng-rating-question\", usesInheritance: true, ngImport: i0, template: \"  <div [class]=\\\"model.ratingRootCss\\\" #contentElement>\\n      <fieldset role=\\\"radiogroup\\\">\\n          <legend role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n          <span *ngIf=\\\"model.hasMinLabel\\\" [class]=\\\"model.cssClasses.minText\\\" [model]=\\\"model.locMinRateDescription\\\" sv-ng-string>\\n          </span>\\n          <label *ngFor=\\\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\\\" [class]=\\\"model.getItemClass(item.itemValue)\\\" >\\n            <input type=\\\"radio\\\"\\n              class=\\\"sv-visuallyhidden\\\"\\n              [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.getInputId(index)\\\" [value]=\\\"item.value\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n              [disabled]=\\\"model.isInputReadOnly\\\" [checked]=\\\"model.value === item.value\\\" (click)=\\\"onClick($event)\\\"\\n              />\\n              <span [class]=\\\"model.cssClasses.itemText\\\" [model]=\\\"item.locText\\\" sv-ng-string></span>\\n          </label>\\n          <span *ngIf=\\\"model.hasMaxLabel\\\" [class]=\\\"model.cssClasses.maxText\\\" [model]=\\\"model.locMaxRateDescription\\\" sv-ng-string></span>\\n      </fieldset>\\n  </div>\\n\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RatingQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-rating-question\", template: \"  <div [class]=\\\"model.ratingRootCss\\\" #contentElement>\\n      <fieldset role=\\\"radiogroup\\\">\\n          <legend role=\\\"presentation\\\" class=\\\"sv-hidden\\\"></legend>\\n          <span *ngIf=\\\"model.hasMinLabel\\\" [class]=\\\"model.cssClasses.minText\\\" [model]=\\\"model.locMinRateDescription\\\" sv-ng-string>\\n          </span>\\n          <label *ngFor=\\\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\\\" [class]=\\\"model.getItemClass(item.itemValue)\\\" >\\n            <input type=\\\"radio\\\"\\n              class=\\\"sv-visuallyhidden\\\"\\n              [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.getInputId(index)\\\" [value]=\\\"item.value\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n              [disabled]=\\\"model.isInputReadOnly\\\" [checked]=\\\"model.value === item.value\\\" (click)=\\\"onClick($event)\\\"\\n              />\\n              <span [class]=\\\"model.cssClasses.itemText\\\" [model]=\\\"item.locText\\\" sv-ng-string></span>\\n          </label>\\n          <span *ngIf=\\\"model.hasMaxLabel\\\" [class]=\\\"model.cssClasses.maxText\\\" [model]=\\\"model.locMaxRateDescription\\\" sv-ng-string></span>\\n      </fieldset>\\n  </div>\\n\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"rating-question\", RatingQuestionComponent);\n\nclass BooleanQuestionComponent extends QuestionAngular {\n    onChange(event) {\n        this.model.booleanValue = event.target.value;\n    }\n}\nBooleanQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBooleanQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BooleanQuestionComponent, selector: \"sv-ng-boolean-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" (keydown)=\\\"model.onKeyDownCore($event)\\\" #contentElement>\\n    <label [class]=\\\"model.getItemCss()\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n        [class]=\\\"model.cssClasses.control\\\" [disabled]=\\\"model.isInputReadOnly\\\"  [indeterminate]=\\\"model.isIndeterminate\\\" [value]=\\\"model.booleanValue\\\" [(ngModel)]=\\\"model.booleanValue\\\" />\\n      <span [class]=\\\"model.getLabelCss(false)\\\" (click)=\\\"model.onLabelClick($event, false)\\\" [model]=\\\"model.locLabelFalse\\\" sv-ng-string></span>\\n      <div [class]=\\\"model.cssClasses.switch\\\" (click)=\\\"model.onSwitchClickModel($event)\\\">\\n        <span [class]=\\\"model.cssClasses.slider\\\">\\n            <span *ngIf=\\\"model.cssClasses.sliderText && model.isDeterminated\\\" [class]=\\\"model.cssClasses.sliderText\\\" [model]=\\\"model.getCheckedLabel()\\\" sv-ng-string></span>\\n        </span>\\n      </div>\\n      <span [class]=\\\"model.getLabelCss(true)\\\" (click)=\\\"model.onLabelClick($event, true)\\\" [model]=\\\"model.locLabelTrue\\\"  sv-ng-string></span>\\n    </label>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i3.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-boolean-question\", template: \"<div [class]=\\\"model.cssClasses.root\\\" (keydown)=\\\"model.onKeyDownCore($event)\\\" #contentElement>\\n    <label [class]=\\\"model.getItemCss()\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\" [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n        [class]=\\\"model.cssClasses.control\\\" [disabled]=\\\"model.isInputReadOnly\\\"  [indeterminate]=\\\"model.isIndeterminate\\\" [value]=\\\"model.booleanValue\\\" [(ngModel)]=\\\"model.booleanValue\\\" />\\n      <span [class]=\\\"model.getLabelCss(false)\\\" (click)=\\\"model.onLabelClick($event, false)\\\" [model]=\\\"model.locLabelFalse\\\" sv-ng-string></span>\\n      <div [class]=\\\"model.cssClasses.switch\\\" (click)=\\\"model.onSwitchClickModel($event)\\\">\\n        <span [class]=\\\"model.cssClasses.slider\\\">\\n            <span *ngIf=\\\"model.cssClasses.sliderText && model.isDeterminated\\\" [class]=\\\"model.cssClasses.sliderText\\\" [model]=\\\"model.getCheckedLabel()\\\" sv-ng-string></span>\\n        </span>\\n      </div>\\n      <span [class]=\\\"model.getLabelCss(true)\\\" (click)=\\\"model.onLabelClick($event, true)\\\" [model]=\\\"model.locLabelTrue\\\"  sv-ng-string></span>\\n    </label>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"boolean-question\", BooleanQuestionComponent);\n\nclass ImagePickerItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    onChange(event) {\n        if (this.question.multiSelect) {\n            if (event.target.checked) {\n                this.question.value = this.question.value.concat(event.target.value);\n            }\n            else {\n                var currValue = this.question.value;\n                currValue.splice(this.question.value.indexOf(event.target.value), 1);\n                this.question.value = currValue;\n            }\n        }\n        else {\n            this.question.value = event.target.value;\n        }\n    }\n    ngAfterViewInit() {\n        this.model.locImageLink.onChanged = () => {\n            this.detectChanges();\n        };\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.model.locImageLink.onChanged = () => { };\n    }\n}\nImagePickerItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImagePickerItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImagePickerItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ImagePickerItemComponent, selector: \"sv-ng-imagepicker-item\", inputs: { question: \"question\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"question.getItemClass(model)\\\">\\n    <label [class]=\\\"question.cssClasses.label\\\">\\n        <input [type]=\\\"question.inputType\\\" [attr.name]=\\\"question.questionName\\\" [attr.value]=\\\"model.value\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-required]=\\\"question.ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel\\\" [attr.aria-invalid]=\\\"question.ariaInvalid\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\"\\n        (change)=\\\"onChange($event)\\\" [checked]=\\\"question.isItemSelected(model)\\\" [disabled]=\\\"!question.getItemEnabled(model)\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n        />\\n        <div [class]=\\\"question.cssClasses.itemDecorator\\\">\\n            <div [class]=\\\"question.cssClasses.imageContainer\\\">\\n              <img *ngIf=\\\"model.locImageLink.renderedHtml && question.contentMode === 'image'\\\" [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [attr.alt]=\\\"model.locText.renderedHtml\\\"  [style.objectFit]=\\\"question.imageFit\\\" (load)=\\\"question.onContentLoaded(model, $event)\\\"/>\\n              <video *ngIf=\\\"model.locImageLink.renderedHtml && question.contentMode === 'video'\\\" controls [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [style.objectFit]=\\\"question.imageFit\\\" (loadedmetadata)=\\\"question.onContentLoaded(model, $event)\\\"></video>\\n              <div *ngIf=\\\"!model.locImageLink.renderedHtml\\\" [class]=\\\"question.cssClasses.itemNoImage\\\" [style.width]=\\\"question.renderedImageWidth\\\" [style.height]=\\\"question.renderedImageHeight\\\" [style.objectFit]=\\\"question.imageFit\\\">\\n                <svg [class]=\\\"question.cssClasses.itemNoImageSvgIcon\\\" *ngIf=\\\"question.cssClasses.itemNoImageSvgIcon\\\">\\n                  <use [attr.xlink:href]=\\\"question.cssClasses.itemNoImageSvgIconId\\\"></use>\\n                </svg>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"question.showLabel\\\" [class]=\\\"question.cssClasses.itemText\\\" [model]=\\\"model.locText\\\" sv-ng-string></span>\\n        </div>\\n    </label>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImagePickerItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-imagepicker-item\", styles: [\":host { display: none; }\"], template: \"<ng-template #template>\\n  <div [class]=\\\"question.getItemClass(model)\\\">\\n    <label [class]=\\\"question.cssClasses.label\\\">\\n        <input [type]=\\\"question.inputType\\\" [attr.name]=\\\"question.questionName\\\" [attr.value]=\\\"model.value\\\" [id]=\\\"question.getItemId(model)\\\" [attr.aria-required]=\\\"question.ariaRequired\\\" [attr.aria-label]=\\\"question.ariaLabel\\\" [attr.aria-invalid]=\\\"question.ariaInvalid\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\"\\n        (change)=\\\"onChange($event)\\\" [checked]=\\\"question.isItemSelected(model)\\\" [disabled]=\\\"!question.getItemEnabled(model)\\\" [class]=\\\"question.cssClasses.itemControl\\\"\\n        />\\n        <div [class]=\\\"question.cssClasses.itemDecorator\\\">\\n            <div [class]=\\\"question.cssClasses.imageContainer\\\">\\n              <img *ngIf=\\\"model.locImageLink.renderedHtml && question.contentMode === 'image'\\\" [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [attr.alt]=\\\"model.locText.renderedHtml\\\"  [style.objectFit]=\\\"question.imageFit\\\" (load)=\\\"question.onContentLoaded(model, $event)\\\"/>\\n              <video *ngIf=\\\"model.locImageLink.renderedHtml && question.contentMode === 'video'\\\" controls [class]=\\\"question.cssClasses.image\\\" [attr.src]=\\\"model.locImageLink.renderedHtml\\\" [attr.width]=\\\"question.renderedImageWidth\\\" [attr.height]=\\\"question.renderedImageHeight\\\" [style.objectFit]=\\\"question.imageFit\\\" (loadedmetadata)=\\\"question.onContentLoaded(model, $event)\\\"></video>\\n              <div *ngIf=\\\"!model.locImageLink.renderedHtml\\\" [class]=\\\"question.cssClasses.itemNoImage\\\" [style.width]=\\\"question.renderedImageWidth\\\" [style.height]=\\\"question.renderedImageHeight\\\" [style.objectFit]=\\\"question.imageFit\\\">\\n                <svg [class]=\\\"question.cssClasses.itemNoImageSvgIcon\\\" *ngIf=\\\"question.cssClasses.itemNoImageSvgIcon\\\">\\n                  <use [attr.xlink:href]=\\\"question.cssClasses.itemNoImageSvgIconId\\\"></use>\\n                </svg>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"question.showLabel\\\" [class]=\\\"question.cssClasses.itemText\\\" [model]=\\\"model.locText\\\" sv-ng-string></span>\\n        </div>\\n    </label>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-imagepicker-item\", ImagePickerItemComponent);\n\nclass ImagePickerQuestionComponent extends QuestionAngular {\n    getItemValueComponentName(item) {\n        return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-imagepicker-item\";\n    }\n    getItemValueComponentData(item) {\n        return {\n            componentName: \"sv-ng-imagepicker-item\",\n            componentData: {\n                question: this.model,\n                model: item,\n                data: this.model.getItemValueWrapperComponentData(item)\n            }\n        };\n    }\n}\nImagePickerQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImagePickerQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImagePickerQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ImagePickerQuestionComponent, selector: \"sv-ng-imagepicker-question\", usesInheritance: true, ngImport: i0, template: \"  <fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement>\\n      <legend [attr.aria-label]=\\\"model.locTitle.renderedHtml\\\" role=\\\"radio\\\"></legend>\\n      <ng-container *ngIf=\\\"!model.hasColumns\\\">\\n        <ng-container *ngFor=\\\"let item of model.visibleChoices\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"model.hasColumns\\\">\\n        <div *ngFor=\\\"let column of model.columns\\\" [class]=\\\"model.getColumnClass()\\\" role=\\\"presentation\\\">\\n          <ng-container *ngFor=\\\"let item of column\\\">\\n            <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n          </ng-container>\\n        </div>\\n      </ng-container>\\n  </fieldset>\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImagePickerQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-imagepicker-question\", template: \"  <fieldset [class]=\\\"model.getSelectBaseRootCss()\\\" #contentElement>\\n      <legend [attr.aria-label]=\\\"model.locTitle.renderedHtml\\\" role=\\\"radio\\\"></legend>\\n      <ng-container *ngIf=\\\"!model.hasColumns\\\">\\n        <ng-container *ngFor=\\\"let item of model.visibleChoices\\\">\\n          <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n        </ng-container>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"model.hasColumns\\\">\\n        <div *ngFor=\\\"let column of model.columns\\\" [class]=\\\"model.getColumnClass()\\\" role=\\\"presentation\\\">\\n          <ng-container *ngFor=\\\"let item of column\\\">\\n            <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\\\"></ng-template>\\n          </ng-container>\\n        </div>\\n      </ng-container>\\n  </fieldset>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"imagepicker-question\", ImagePickerQuestionComponent);\n\nclass ButtonGroupItemComponent extends BaseAngular {\n    ngOnChanges() {\n        this.model = new ButtonGroupItemModel(this.question, this.item, this.index);\n    }\n    getModel() {\n        return this.item;\n    }\n}\nButtonGroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ButtonGroupItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nButtonGroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ButtonGroupItemComponent, selector: \"sv-button-group-item\", inputs: { item: \"item\", question: \"question\", index: \"index\" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-template #template>\\n  <label role=\\\"radio\\\" [class]=\\\"model.css.label\\\" [attr.title]=\\\"model.caption.renderedHtml\\\">\\n    <input type=\\\"radio\\\"\\n      [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.id\\\" [attr.aria-required]=\\\"model.isRequired\\\" [attr.aria-label]=\\\"model.caption.renderedHtml\\\" role=\\\"radio\\\" [attr.aria-invalid]=\\\"model.hasErrors\\\" [attr.aria-describedby]=\\\"model.describedBy\\\" [disabled]=\\\"model.readOnly\\\" [class]=\\\"model.css.control\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"/>\\n    <div data-bind=\\\"css: model.css.decorator\\\">\\n      <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [class]=\\\"model.css.icon\\\" sv-ng-svg-icon></svg>\\n      <span [class]=\\\"model.css.caption\\\" *ngIf=\\\"model.showCaption\\\" [attr.title]=\\\"model.caption.renderedHtml\\\" sv-ng-string [model]=\\\"model.caption\\\">\\n      </span>\\n    </div>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i3.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ButtonGroupItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-button-group-item\", template: \"<ng-template #template>\\n  <label role=\\\"radio\\\" [class]=\\\"model.css.label\\\" [attr.title]=\\\"model.caption.renderedHtml\\\">\\n    <input type=\\\"radio\\\"\\n      [attr.name]=\\\"model.name\\\" [attr.id]=\\\"model.id\\\" [attr.aria-required]=\\\"model.isRequired\\\" [attr.aria-label]=\\\"model.caption.renderedHtml\\\" role=\\\"radio\\\" [attr.aria-invalid]=\\\"model.hasErrors\\\" [attr.aria-describedby]=\\\"model.describedBy\\\" [disabled]=\\\"model.readOnly\\\" [class]=\\\"model.css.control\\\" [(ngModel)]=\\\"question.renderedValue\\\" [attr.value]=\\\"model.value\\\" [value]=\\\"model.value\\\"/>\\n    <div data-bind=\\\"css: model.css.decorator\\\">\\n      <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [class]=\\\"model.css.icon\\\" sv-ng-svg-icon></svg>\\n      <span [class]=\\\"model.css.caption\\\" *ngIf=\\\"model.showCaption\\\" [attr.title]=\\\"model.caption.renderedHtml\\\" sv-ng-string [model]=\\\"model.caption\\\">\\n      </span>\\n    </div>\\n  </label>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\n\nclass ButtonGroupQuestionComponent extends QuestionAngular {\n}\nButtonGroupQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ButtonGroupQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nButtonGroupQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ButtonGroupQuestionComponent, selector: \"sv-ng-buttongroup-question\", usesInheritance: true, ngImport: i0, template: \"<div role=\\\"group\\\" [class]=\\\"model.cssClasses.root\\\">\\n  <sv-button-group-item *ngFor=\\\"let item of model.visibleChoices; index as index\\\" [question]=\\\"model\\\" [item]=\\\"item\\\" [index]=\\\"index\\\" ></sv-button-group-item>\\n</div>\\n\", components: [{ type: ButtonGroupItemComponent, selector: \"sv-button-group-item\", inputs: [\"item\", \"question\", \"index\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ButtonGroupQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-buttongroup-question\", template: \"<div role=\\\"group\\\" [class]=\\\"model.cssClasses.root\\\">\\n  <sv-button-group-item *ngFor=\\\"let item of model.visibleChoices; index as index\\\" [question]=\\\"model\\\" [item]=\\\"item\\\" [index]=\\\"index\\\" ></sv-button-group-item>\\n</div>\\n\" }]\n        }] });\n\nclass Key2ClickDirective {\n    constructor(el) {\n        this.el = el;\n        this.isSubscribed = false;\n        this.options = Key2ClickDirective.defaultOptions;\n        this.onkeyup = (evt) => {\n            evt.preventDefault();\n            evt.stopPropagation();\n            doKey2ClickUp(evt, this.options);\n            return false;\n        };\n        this.subscribeEventListeners();\n    }\n    onkeydown(evt) {\n        doKey2ClickDown(evt, this.options);\n    }\n    blur(evt) {\n        doKey2ClickBlur(evt);\n    }\n    get element() {\n        return this.el.nativeElement;\n    }\n    subscribeEventListeners() {\n        if (this.isSubscribed)\n            return;\n        this.element.tabIndex = 0;\n        this.element.addEventListener(\"keyup\", this.onkeyup);\n        this.element.addEventListener(\"keydown\", this.onkeydown);\n        this.element.addEventListener(\"blur\", this.blur);\n        this.isSubscribed = true;\n    }\n    unsubscribeEventListeners() {\n        if (!this.isSubscribed)\n            return;\n        this.element.tabIndex = -1;\n        this.element.removeEventListener(\"keyup\", this.onkeyup);\n        this.element.removeEventListener(\"keydown\", this.onkeydown);\n        this.element.removeEventListener(\"blur\", this.blur);\n        this.isSubscribed = false;\n    }\n    ngOnChanges(changes) {\n        const curValue = changes[\"key2click\"].currentValue;\n        if (curValue.disableTabStop) {\n            this.unsubscribeEventListeners();\n        }\n        else {\n            this.subscribeEventListeners();\n        }\n        this.options = Object.assign({}, Key2ClickDirective.defaultOptions, curValue);\n    }\n    ngOnDestroy() {\n        this.unsubscribeEventListeners();\n    }\n}\nKey2ClickDirective.defaultOptions = { processEsc: true, disableTabStop: false };\nKey2ClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Key2ClickDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nKey2ClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Key2ClickDirective, selector: \"[key2click]\", inputs: { key2click: \"key2click\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Key2ClickDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: \"[key2click]\"\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { key2click: [{\n                type: Input\n            }] } });\n\nclass ActionBarItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nActionBarItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ActionBarItemComponent, selector: \"sv-action-bar-item\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <button type=\\\"button\\\" (click)=\\\"model.action()\\\" [key2click]=\\\"{ processEsc: false }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [attr.title]=\\\"model.tooltip || model.title\\\" [attr.aria-checked]=\\\"model.ariaChecked\\\" [attr.role]=\\\"model.ariaRole\\\" [disabled]=\\\"model.disabled\\\" \\n    data-bind=\\\"key2click: { processEsc: false }\\\">\\n    <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n    <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n  </button>\\n<ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-action-bar-item\", template: \"<ng-template #template>\\n  <button type=\\\"button\\\" (click)=\\\"model.action()\\\" [key2click]=\\\"{ processEsc: false }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [attr.title]=\\\"model.tooltip || model.title\\\" [attr.aria-checked]=\\\"model.ariaChecked\\\" [attr.role]=\\\"model.ariaRole\\\" [disabled]=\\\"model.disabled\\\" \\n    data-bind=\\\"key2click: { processEsc: false }\\\">\\n    <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n    <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n  </button>\\n<ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item\", ActionBarItemComponent);\n\nclass ActionBarItemDropdownComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.viewModel = new ActionDropdownViewModel(this.model);\n    }\n    ngOnDestroy() {\n        this.viewModel.dispose();\n        super.ngOnDestroy();\n    }\n}\nActionBarItemDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarItemDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nActionBarItemDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ActionBarItemDropdownComponent, selector: \"sv-action-bar-item-dropdown\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <button type=\\\"button\\\" (click)=\\\"model.action()\\\" [key2click]=\\\"{ processEsc: false }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [title]=\\\"model.tooltip || model.title\\\" [disabled]=\\\"model.disabled\\\">\\n        <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n        <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n        <sv-ng-popup [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    </button>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: PopupComponent, selector: \"sv-ng-popup, '[sv-ng-popup]'\", inputs: [\"popupModel\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ActionBarItemDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-action-bar-item-dropdown\", template: \"<ng-template #template>\\n    <button type=\\\"button\\\" (click)=\\\"model.action()\\\" [key2click]=\\\"{ processEsc: false }\\\" [class]=\\\"model.getActionBarItemCss()\\\" [title]=\\\"model.tooltip || model.title\\\" [disabled]=\\\"model.disabled\\\">\\n        <svg *ngIf=\\\"model.iconName\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"model.iconSize\\\" [title]=\\\"model.tooltip || model.title\\\" [class]=\\\"model.cssClasses.itemIcon\\\" sv-ng-svg-icon></svg>\\n        <span *ngIf=\\\"model.hasTitle\\\" [class]=\\\"model.getActionBarItemTitleCss()\\\">{{ model.title }}</span>\\n        <sv-ng-popup [popupModel]=\\\"model.popupModel\\\"></sv-ng-popup>\\n    </button>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item-dropdown\", ActionBarItemDropdownComponent);\n\nclass SelectBaseItemComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.showLabel = true;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nSelectBaseItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SelectBaseItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSelectBaseItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SelectBaseItemComponent, selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\", inputs: { question: \"question\", model: \"model\", inputType: \"inputType\", showLabel: \"showLabel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div role=\\\"presentation\\\" [class]=\\\"question.getItemClass(model)\\\">\\n    <ng-container [ngSwitch]=\\\"inputType\\\">\\n      <label *ngSwitchCase=\\\"'checkbox'\\\" [class]=\\\"question.getLabelClass(model)\\\"  [attr.aria-label]=\\\"question.getAriaItemLabel(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-checkbox-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n      <label *ngSwitchCase=\\\"'radio'\\\" [class]=\\\"question.getLabelClass(model)\\\"  [attr.aria-label]=\\\"question.getAriaItemLabel(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-radiogroup-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n    </ng-container>\\n    <ng-template #itemDecorator>\\n      <span *ngIf=\\\"question.cssClasses.materialDecorator\\\" [class]=\\\"question.cssClasses.materialDecorator\\\">\\n        <svg *ngIf=\\\"question.itemSvgIcon\\\" [class]=\\\"question.cssClasses.itemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"question.itemSvgIcon\\\"></use>\\n        </svg>\\n      </span>\\n      <span [class]=\\\"question.getControlLabelClass(model)\\\" [visible]=\\\"!model.hideCaption\\\">\\n        <sv-ng-string [model]=\\\"model.locText\\\"></sv-ng-string>\\n      </span> \\n    </ng-template>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: CheckboxItemComponent, selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\", inputs: [\"question\", \"model\"] }, { type: RadiogroupItemComponent, selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\", inputs: [\"question\", \"model\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SelectBaseItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\", styles: [\":host { display: none; }\"], template: \"<ng-template #template>\\n  <div role=\\\"presentation\\\" [class]=\\\"question.getItemClass(model)\\\">\\n    <ng-container [ngSwitch]=\\\"inputType\\\">\\n      <label *ngSwitchCase=\\\"'checkbox'\\\" [class]=\\\"question.getLabelClass(model)\\\"  [attr.aria-label]=\\\"question.getAriaItemLabel(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-checkbox-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n      <label *ngSwitchCase=\\\"'radio'\\\" [class]=\\\"question.getLabelClass(model)\\\"  [attr.aria-label]=\\\"question.getAriaItemLabel(model)\\\" [model]=\\\"model\\\" [question]=\\\"question\\\" sv-ng-radiogroup-item>\\n        <ng-container *ngTemplateOutlet=\\\"itemDecorator\\\"></ng-container>\\n      </label>\\n    </ng-container>\\n    <ng-template #itemDecorator>\\n      <span *ngIf=\\\"question.cssClasses.materialDecorator\\\" [class]=\\\"question.cssClasses.materialDecorator\\\">\\n        <svg *ngIf=\\\"question.itemSvgIcon\\\" [class]=\\\"question.cssClasses.itemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"question.itemSvgIcon\\\"></use>\\n        </svg>\\n      </span>\\n      <span [class]=\\\"question.getControlLabelClass(model)\\\" [visible]=\\\"!model.hideCaption\\\">\\n        <sv-ng-string [model]=\\\"model.locText\\\"></sv-ng-string>\\n      </span> \\n    </ng-template>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], inputType: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-selectbase-item\", SelectBaseItemComponent);\n\nclass SkeletonComponent extends EmbeddedViewContentComponent {\n}\nSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SkeletonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SkeletonComponent, selector: \"sv-skeleton\", inputs: { element: \"element\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div class=\\\"sv-skeleton-element\\\" [id]=\\\"element.id\\\"></div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SkeletonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-skeleton\", template: \"<ng-template #template>\\n  <div class=\\\"sv-skeleton-element\\\" [id]=\\\"element.id\\\"></div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { element: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-skeleton\", SkeletonComponent);\n\nclass ListItemComponent extends BaseAngular {\n    get ariaSelected() {\n        return this.listModel.isItemSelected(this.model) || \"\";\n    }\n    get class() {\n        return this.listModel.getItemClass(this.model);\n    }\n    get paddingLeft() {\n        return this.listModel.getItemIndent(this.model);\n    }\n    click(event) {\n        this.listModel.onItemClick(this.model);\n        event.stopPropagation();\n    }\n    pointerdown(event) {\n        this.listModel.onPointerDown(event, this.model);\n    }\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        this.listModel.onLastItemRended(this.model);\n    }\n}\nListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ListItemComponent, selector: \"sv-ng-list-item, '[sv-ng-list-item]'\", inputs: { element: \"element\", model: \"model\", listModel: \"listModel\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <li role=\\\"option\\\" [key2click] [visible]=\\\"listModel.isItemVisible(model)\\\" [class]=\\\"class\\\" [attr.aria-selected]=\\\"ariaSelected\\\" (click)=\\\"click($event)\\\" (pointerdown)=\\\"pointerdown($event)\\\">\\n    <ng-container *ngIf=\\\"model.needSeparator\\\">\\n    <div [class]=\\\"listModel.cssClasses.itemSeparator\\\"></div>\\n    </ng-container>\\n    <div [class]=\\\"listModel.cssClasses.itemBody\\\" [style.paddingInlineStart]=\\\"paddingLeft\\\">\\n    <ng-container *ngIf=\\\"!model.component\\\">\\n      <svg *ngIf=\\\"model.iconName\\\" [class]=\\\"listModel.cssClasses.itemIcon\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"24\\\"\\n        sv-ng-svg-icon></svg>\\n      <sv-ng-string [model]=\\\"model.locTitle\\\"></sv-ng-string>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.component\\\">\\n      <ng-template [component]=\\\"{ name: model.component, data: { model: model } }\\\"></ng-template>\\n    </ng-container>\\n    </div>\\n  </li>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: Key2ClickDirective, selector: \"[key2click]\", inputs: [\"key2click\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ListItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-list-item, '[sv-ng-list-item]'\", template: \"<ng-template #template>\\n  <li role=\\\"option\\\" [key2click] [visible]=\\\"listModel.isItemVisible(model)\\\" [class]=\\\"class\\\" [attr.aria-selected]=\\\"ariaSelected\\\" (click)=\\\"click($event)\\\" (pointerdown)=\\\"pointerdown($event)\\\">\\n    <ng-container *ngIf=\\\"model.needSeparator\\\">\\n    <div [class]=\\\"listModel.cssClasses.itemSeparator\\\"></div>\\n    </ng-container>\\n    <div [class]=\\\"listModel.cssClasses.itemBody\\\" [style.paddingInlineStart]=\\\"paddingLeft\\\">\\n    <ng-container *ngIf=\\\"!model.component\\\">\\n      <svg *ngIf=\\\"model.iconName\\\" [class]=\\\"listModel.cssClasses.itemIcon\\\" [iconName]=\\\"model.iconName\\\" [size]=\\\"24\\\"\\n        sv-ng-svg-icon></svg>\\n      <sv-ng-string [model]=\\\"model.locTitle\\\"></sv-ng-string>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"model.component\\\">\\n      <ng-template [component]=\\\"{ name: model.component, data: { model: model } }\\\"></ng-template>\\n    </ng-container>\\n    </div>\\n  </li>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { element: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], listModel: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item\", ListItemComponent);\n\nclass ListComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.trackItemBy = (_, item) => {\n            return item.id;\n        };\n    }\n    getModel() {\n        return this.model;\n    }\n    onGoToItems(event) {\n        this.model.goToItems(event);\n    }\n    onMouseDown(event) {\n        event.preventDefault();\n    }\n    onKeyDown(event) {\n        this.model.onKeyDown(event);\n    }\n    onMouseMove(event) {\n        this.model.onMouseMove(event);\n    }\n    ngAfterViewInit() {\n        if (!!this.listContainerElement?.nativeElement) {\n            this.model.initListContainerHtmlElement(this.listContainerElement.nativeElement);\n        }\n    }\n}\nListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ListComponent, selector: \"sv-ng-list, '[sv-ng-list]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"listContainerElement\", first: true, predicate: [\"listContainerElement\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n    <div [class]=\\\"model.cssClasses.root\\\" #listContainerElement>\\n        <div *ngIf=\\\"model.showFilter\\\" [class]=\\\"model.cssClasses.filter\\\">\\n            <div [class]=\\\"model.cssClasses.filterIcon\\\">\\n                <svg [iconName]=\\\"'icon-search'\\\" [size]=\\\"24\\\" sv-ng-svg-icon></svg>\\n            </div>\\n            <input type=\\\"text\\\" [class]=\\\"model.cssClasses.filterInput\\\" [(ngModel)]=\\\"model.filterString\\\"\\n                [attr.aria-label]=\\\"model.filterStringPlaceholder || ''\\\"\\n                [attr.placeholder]=\\\"model.filterStringPlaceholder || ''\\\" \\n                (keyup)=\\\"onGoToItems($event)\\\" />\\n        </div>\\n        <div [class]=\\\"model.cssClasses.emptyContainer\\\" [visible]=\\\"model.isEmpty\\\">\\n            <div [class]=\\\"model.cssClasses.emptyText\\\" [attr.aria-label]=\\\"model.emptyMessage || ''\\\">{{ model.emptyMessage }}</div>\\n        </div>\\n        <ul [class]=\\\"model.cssClasses.itemsContainer\\\" role=\\\"listbox\\\" (mousedown)=\\\"onMouseDown($event)\\\" (keydown)=\\\"onKeyDown($event)\\\" (mousemove)=\\\"onMouseMove($event)\\\">\\n            <sv-ng-list-item *ngFor=\\\"let item of model.renderedActions; trackBy: trackItemBy\\\" [listModel]=\\\"model\\\" [model]=\\\"item\\\"></sv-ng-list-item>\\n            <!--ko foreach: model.renderedActions -->\\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\\n            <!-- /ko -->\\n            <!-- /ko -->\\n        </ul>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: ListItemComponent, selector: \"sv-ng-list-item, '[sv-ng-list-item]'\", inputs: [\"element\", \"model\", \"listModel\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-list, '[sv-ng-list]'\", template: \"<ng-template #template>\\n    <div [class]=\\\"model.cssClasses.root\\\" #listContainerElement>\\n        <div *ngIf=\\\"model.showFilter\\\" [class]=\\\"model.cssClasses.filter\\\">\\n            <div [class]=\\\"model.cssClasses.filterIcon\\\">\\n                <svg [iconName]=\\\"'icon-search'\\\" [size]=\\\"24\\\" sv-ng-svg-icon></svg>\\n            </div>\\n            <input type=\\\"text\\\" [class]=\\\"model.cssClasses.filterInput\\\" [(ngModel)]=\\\"model.filterString\\\"\\n                [attr.aria-label]=\\\"model.filterStringPlaceholder || ''\\\"\\n                [attr.placeholder]=\\\"model.filterStringPlaceholder || ''\\\" \\n                (keyup)=\\\"onGoToItems($event)\\\" />\\n        </div>\\n        <div [class]=\\\"model.cssClasses.emptyContainer\\\" [visible]=\\\"model.isEmpty\\\">\\n            <div [class]=\\\"model.cssClasses.emptyText\\\" [attr.aria-label]=\\\"model.emptyMessage || ''\\\">{{ model.emptyMessage }}</div>\\n        </div>\\n        <ul [class]=\\\"model.cssClasses.itemsContainer\\\" role=\\\"listbox\\\" (mousedown)=\\\"onMouseDown($event)\\\" (keydown)=\\\"onKeyDown($event)\\\" (mousemove)=\\\"onMouseMove($event)\\\">\\n            <sv-ng-list-item *ngFor=\\\"let item of model.renderedActions; trackBy: trackItemBy\\\" [listModel]=\\\"model\\\" [model]=\\\"item\\\"></sv-ng-list-item>\\n            <!--ko foreach: model.renderedActions -->\\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\\n            <!-- /ko -->\\n            <!-- /ko -->\\n        </ul>\\n    </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], listContainerElement: [{\n                type: ViewChild,\n                args: [\"listContainerElement\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-list\", ListComponent);\n\nclass RatingDropdownComponent {\n}\nRatingDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RatingDropdownComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nRatingDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RatingDropdownComponent, selector: \"sv-ng-rating-dropdown-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootDropdown\\\">\\n    <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n</div>\", components: [{ type: DropdownComponent, selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RatingDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-rating-dropdown-question\", template: \"<div [class]=\\\"model.cssClasses.rootDropdown\\\">\\n    <sv-ng-dropdown [model]=\\\"model\\\"></sv-ng-dropdown>\\n</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"rating-dropdown-question\", RatingDropdownComponent);\nRendererFactory.Instance.registerRenderer(\"rating\", \"dropdown\", \"rating-dropdown-question\");\n\nclass BooleanCheckboxComponent {\n}\nBooleanCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BooleanCheckboxComponent, selector: \"sv-ng-boolean-checkbox-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootCheckbox\\\">\\n  <div [class]=\\\"model.getCheckboxItemCss()\\\">\\n    <label [class]=\\\"model.cssClasses.checkboxLabel\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [value]=\\\"model.booleanValue\\\" [class]=\\\"model.cssClasses.controlCheckbox\\\" \\n        [attr.name]=\\\"model.name\\\" [id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n        [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [(ngModel)]=\\\"model.booleanValue\\\" [value]=\\\"model.booleanValue\\\"\\n        [disabled]=\\\"model.isInputReadOnly\\\" [indeterminate]=\\\"model.isIndeterminate\\\"\\n      />\\n      <span [class]=\\\"model.cssClasses.checkboxMaterialDecorator\\\">\\n        <svg *ngIf=\\\"!!model.svgIcon\\\" [class]=\\\"model.cssClasses.checkboxItemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"model.svgIcon\\\"></use>\\n        </svg>\\n        <span class=\\\"check\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"model.isLabelRendered\\\" [class]=\\\"model.cssClasses.checkboxControlLabel\\\" [id]=\\\"model.labelRenderedAriaID\\\">\\n        <sv-ng-element-title-actions [element]=\\\"model\\\"></sv-ng-element-title-actions>\\n      </span>\\n    </label>\\n    <div *ngIf=\\\"model.canRenderLabelDescription\\\" [class]=\\\"model.cssDescription\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n  </div>\\n</div>\", components: [{ type: ElementTitleActionsComponent, selector: \"sv-ng-element-title-actions\", inputs: [\"element\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i3.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanCheckboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-boolean-checkbox-question\", template: \"<div [class]=\\\"model.cssClasses.rootCheckbox\\\">\\n  <div [class]=\\\"model.getCheckboxItemCss()\\\">\\n    <label [class]=\\\"model.cssClasses.checkboxLabel\\\">\\n      <input\\n        type=\\\"checkbox\\\"\\n        [value]=\\\"model.booleanValue\\\" [class]=\\\"model.cssClasses.controlCheckbox\\\" \\n        [attr.name]=\\\"model.name\\\" [id]=\\\"model.inputId\\\" [attr.aria-required]=\\\"model.ariaRequired\\\" [attr.aria-label]=\\\"model.ariaLabel\\\"\\n        [attr.aria-invalid]=\\\"model.ariaInvalid\\\" [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\" [(ngModel)]=\\\"model.booleanValue\\\" [value]=\\\"model.booleanValue\\\"\\n        [disabled]=\\\"model.isInputReadOnly\\\" [indeterminate]=\\\"model.isIndeterminate\\\"\\n      />\\n      <span [class]=\\\"model.cssClasses.checkboxMaterialDecorator\\\">\\n        <svg *ngIf=\\\"!!model.svgIcon\\\" [class]=\\\"model.cssClasses.checkboxItemDecorator\\\">\\n          <use [attr.xlink:href]=\\\"model.svgIcon\\\"></use>\\n        </svg>\\n        <span class=\\\"check\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"model.isLabelRendered\\\" [class]=\\\"model.cssClasses.checkboxControlLabel\\\" [id]=\\\"model.labelRenderedAriaID\\\">\\n        <sv-ng-element-title-actions [element]=\\\"model\\\"></sv-ng-element-title-actions>\\n      </span>\\n    </label>\\n    <div *ngIf=\\\"model.canRenderLabelDescription\\\" [class]=\\\"model.cssDescription\\\" [model]=\\\"model.locDescription\\\" sv-ng-string></div>\\n  </div>\\n</div>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"boolean-checkbox-question\", BooleanCheckboxComponent);\nRendererFactory.Instance.registerRenderer(\"boolean\", \"checkbox\", \"boolean-checkbox-question\");\n\nclass BooleanRadioItemComponent {\n    constructor() {\n    }\n}\nBooleanRadioItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanRadioItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanRadioItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BooleanRadioItemComponent, selector: \"sv-ng-boolean-radio-item\", inputs: { question: \"question\", value: \"value\", locText: \"locText\" }, ngImport: i0, template: \"<div role=\\\"presentation\\\" [class]=\\\"question.getRadioItemClass(question.cssClasses, value)\\\">\\n  <label [class]=\\\"question.cssClasses.radioLabel\\\">\\n    <input\\n      type=\\\"radio\\\"\\n      [attr.name]=\\\"question.name\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [value]=\\\"value\\\" [(ngModel)]=\\\"question.value\\\"\\n      [disabled]=\\\"question.isInputReadOnly\\\" [class]=\\\"question.cssClasses.itemRadioControl || ''\\\"\\n    />\\n    <span *ngIf=\\\"question.cssClasses.materialRadioDecorator\\\" [class]=\\\"question.cssClasses.materialRadioDecorator\\\"></span>\\n    <span [class]=\\\"question.cssClasses.radioControlLabel\\\" [model]=\\\"locText\\\" sv-ng-string>\\n    </span>\\n  </label>\\n</div>\\n\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i3.RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: [\"name\", \"formControlName\", \"value\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanRadioItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-boolean-radio-item\", template: \"<div role=\\\"presentation\\\" [class]=\\\"question.getRadioItemClass(question.cssClasses, value)\\\">\\n  <label [class]=\\\"question.cssClasses.radioLabel\\\">\\n    <input\\n      type=\\\"radio\\\"\\n      [attr.name]=\\\"question.name\\\" [attr.aria-describedby]=\\\"question.ariaDescribedBy\\\" [value]=\\\"value\\\" [(ngModel)]=\\\"question.value\\\"\\n      [disabled]=\\\"question.isInputReadOnly\\\" [class]=\\\"question.cssClasses.itemRadioControl || ''\\\"\\n    />\\n    <span *ngIf=\\\"question.cssClasses.materialRadioDecorator\\\" [class]=\\\"question.cssClasses.materialRadioDecorator\\\"></span>\\n    <span [class]=\\\"question.cssClasses.radioControlLabel\\\" [model]=\\\"locText\\\" sv-ng-string>\\n    </span>\\n  </label>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return []; }, propDecorators: { question: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], locText: [{\n                type: Input\n            }] } });\n\nclass BooleanRadioComponent {\n}\nBooleanRadioComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanRadioComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBooleanRadioComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: BooleanRadioComponent, selector: \"sv-ng-boolean-radio-question\", inputs: { model: \"model\" }, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.rootRadio\\\">\\n  <fieldset role=\\\"presentation\\\" [class]=\\\"model.cssClasses.radioFieldset\\\">\\n    <sv-ng-boolean-radio-item  [value]=\\\"false\\\" [locText]=\\\"model.locLabelFalse\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n    <sv-ng-boolean-radio-item  [value]=\\\"true\\\" [locText]=\\\"model.locLabelTrue\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n  </fieldset>\\n</div>\\n\", components: [{ type: BooleanRadioItemComponent, selector: \"sv-ng-boolean-radio-item\", inputs: [\"question\", \"value\", \"locText\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: BooleanRadioComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-boolean-radio-question\", template: \"<div [class]=\\\"model.cssClasses.rootRadio\\\">\\n  <fieldset role=\\\"presentation\\\" [class]=\\\"model.cssClasses.radioFieldset\\\">\\n    <sv-ng-boolean-radio-item  [value]=\\\"false\\\" [locText]=\\\"model.locLabelFalse\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n    <sv-ng-boolean-radio-item  [value]=\\\"true\\\" [locText]=\\\"model.locLabelTrue\\\" [question]=\\\"model\\\" ></sv-ng-boolean-radio-item>\\n  </fieldset>\\n</div>\\n\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"boolean-radio-question\", BooleanRadioComponent);\nRendererFactory.Instance.registerRenderer(\"boolean\", \"radio\", \"boolean-radio-question\");\n\nclass ProgressDefaultComponent extends EmbeddedViewContentComponent {\n    getProgressTextInBarCss(css) {\n        return SurveyProgressModel.getProgressTextInBarCss(css);\n    }\n    getProgressTextUnderBarCss(css) {\n        return SurveyProgressModel.getProgressTextUnderBarCss(css);\n    }\n}\nProgressDefaultComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressDefaultComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nProgressDefaultComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ProgressDefaultComponent, selector: \"sv-ng-progress-default\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.css.progress\\\">\\n    <div [class]=\\\"model.css.progressBar\\\" [style.width]=\\\"model.progressValue + '%'\\\"\\n        role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n        <span [class]=\\\"getProgressTextInBarCss(model.css)\\\">\\n          {{ model.progressText }}\\n        </span>\\n    </div>\\n    <span [class]=\\\"getProgressTextUnderBarCss(model.css)\\\"> {{  model.progressText }} </span>\\n  </div>\\n</ng-template>\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressDefaultComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-progress-default\", template: \"<ng-template #template>\\n  <div [class]=\\\"model.css.progress\\\">\\n    <div [class]=\\\"model.css.progressBar\\\" [style.width]=\\\"model.progressValue + '%'\\\"\\n        role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n        <span [class]=\\\"getProgressTextInBarCss(model.css)\\\">\\n          {{ model.progressText }}\\n        </span>\\n    </div>\\n    <span [class]=\\\"getProgressTextUnderBarCss(model.css)\\\"> {{  model.progressText }} </span>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-progress\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-pages\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-questions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-correctQuestions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-requiredQuestions\", ProgressDefaultComponent);\n\nclass ProgressButtonsComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.hasScroller = false;\n        this.updateScroller = undefined;\n    }\n    createProgressButtonsModel() {\n        this.progressButtonsModel = new SurveyProgressButtonsModel(this.model);\n    }\n    ngOnInit() {\n        this.createProgressButtonsModel();\n    }\n    ngOnChanges(changes) {\n        this.createProgressButtonsModel();\n    }\n    isListElementClickable(index) {\n        return this.progressButtonsModel.isListElementClickable(index);\n    }\n    getListElementCss(index) {\n        return this.progressButtonsModel.getListElementCss(index);\n    }\n    clickListElement(index) {\n        this.progressButtonsModel.clickListElement(index);\n    }\n    getScrollButtonCss(isLeftScroll) {\n        return this.progressButtonsModel.getScrollButtonCss(this.hasScroller, isLeftScroll);\n    }\n    clickScrollButton(isLeftScroll) {\n        if (this.progressButtonsListContainer) {\n            this.progressButtonsListContainer.nativeElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n        }\n    }\n    ngAfterViewInit() {\n        this.progressButtonsModel = new SurveyProgressButtonsModel(this.model);\n        this.updateScroller = setInterval(() => {\n            if (!!this.progressButtonsListContainer?.nativeElement) {\n                const listContainerElement = this.progressButtonsListContainer.nativeElement;\n                this.hasScroller = listContainerElement.scrollWidth > listContainerElement.offsetWidth;\n                this.changeDetectorRef.detectChanges();\n            }\n        }, 100);\n    }\n    ngOnDestroy() {\n        if (typeof this.updateScroller !== \"undefined\") {\n            clearInterval(this.updateScroller);\n            this.updateScroller = undefined;\n        }\n    }\n}\nProgressButtonsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressButtonsComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nProgressButtonsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ProgressButtonsComponent, selector: \"sv-ng-progress-buttons\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"progressButtonsListContainer\", first: true, predicate: [\"progressButtonsListContainer\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div [class]=\\\"model.css.progressButtonsContainerCenter\\\">\\n  <div [class]=\\\"model.css.progressButtonsContainer\\\">\\n    <div\\n      [class]=\\\"getScrollButtonCss(true)\\\"\\n      (click)=\\\"clickScrollButton(true)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n    <div\\n      [class]=\\\"model.css.progressButtonsListContainer\\\" #progressButtonsListContainer>\\n      <ul [class]=\\\"model.css.progressButtonsList\\\">\\n        <li\\n          *ngFor=\\\"let page of model.visiblePages; index as index\\\"\\n          [class]=\\\"getListElementCss(index)\\\"\\n          (click)=\\\"isListElementClickable(index) ? clickListElement(index) : null\\\">\\n          <div\\n            [class]=\\\"model.css.progressButtonsPageTitle\\\"\\n            [title]=\\\"page.locNavigationTitle.renderedHtml || page.name\\\"\\n          >\\n            {{ page.locNavigationTitle.renderedHtml || page.name }}\\n          </div>\\n          <div\\n            [class]=\\\"model.css.progressButtonsPageDescription\\\"\\n            [title]=\\\"page.locNavigationDescription.renderedHtml\\\"\\n          >\\n            {{ page.locNavigationDescription.renderedHtml }}\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n    <div\\n      [class]=\\\"getScrollButtonCss(false)\\\"\\n      (click)=\\\"clickScrollButton(false)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n  </div>\\n</div>\", directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ProgressButtonsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-progress-buttons\", template: \"<div [class]=\\\"model.css.progressButtonsContainerCenter\\\">\\n  <div [class]=\\\"model.css.progressButtonsContainer\\\">\\n    <div\\n      [class]=\\\"getScrollButtonCss(true)\\\"\\n      (click)=\\\"clickScrollButton(true)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n    <div\\n      [class]=\\\"model.css.progressButtonsListContainer\\\" #progressButtonsListContainer>\\n      <ul [class]=\\\"model.css.progressButtonsList\\\">\\n        <li\\n          *ngFor=\\\"let page of model.visiblePages; index as index\\\"\\n          [class]=\\\"getListElementCss(index)\\\"\\n          (click)=\\\"isListElementClickable(index) ? clickListElement(index) : null\\\">\\n          <div\\n            [class]=\\\"model.css.progressButtonsPageTitle\\\"\\n            [title]=\\\"page.locNavigationTitle.renderedHtml || page.name\\\"\\n          >\\n            {{ page.locNavigationTitle.renderedHtml || page.name }}\\n          </div>\\n          <div\\n            [class]=\\\"model.css.progressButtonsPageDescription\\\"\\n            [title]=\\\"page.locNavigationDescription.renderedHtml\\\"\\n          >\\n            {{ page.locNavigationDescription.renderedHtml }}\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n    <div\\n      [class]=\\\"getScrollButtonCss(false)\\\"\\n      (click)=\\\"clickScrollButton(false)\\\"\\n      role=\\\"button\\\"\\n    ></div>\\n  </div>\\n</div>\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], progressButtonsListContainer: [{\n                type: ViewChild,\n                args: [\"progressButtonsListContainer\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-buttons\", ProgressButtonsComponent);\n\nclass PanelComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.trackRowBy = (_, row) => {\n            return row.id;\n        };\n    }\n    getModel() {\n        return this.model;\n    }\n    ngAfterViewInit() {\n        if (!!this.panelContainerRef?.nativeElement) {\n            this.model.survey?.afterRenderPanel(this.model, this.panelContainerRef.nativeElement);\n        }\n    }\n}\nPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelComponent, selector: \"sv-ng-panel, '[sv-ng-panel]'\", inputs: { model: \"model\" }, viewQueries: [{ propertyName: \"panelContainerRef\", first: true, predicate: [\"panelContainer\"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div *ngIf=\\\"!!model && model.isVisible\\\" [attr.id]=\\\"model.id\\\" [class]=\\\"model.getContainerCss()\\\" (focusin)=\\\"model.focusIn()\\\" #panelContainer>\\n    <div *ngIf=\\\"model.hasDescription || model.hasTitle\\\" [element]=\\\"model\\\" sv-ng-element-header></div>\\n    <!-- ko template: { name: 'survey-question-errors', data: $data } -->\\n    <!-- /ko -->\\n    <div *ngIf=\\\"!model.isCollapsed\\\" [style.paddingLeft]=\\\"model.innerPaddingLeft\\\" [class]=\\\"model.cssClasses.panel.content\\\" [attr.id]=\\\"model.contentId\\\">\\n      <ng-container *ngFor=\\\"let row of model.rows; trackBy: trackRowBy\\\">\\n        <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n          <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n        </ng-template>\\n      </ng-container>\\n      <sv-ng-action-bar [model]=\\\"model.getFooterToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\", components: [{ type: ElementHeaderComponent, selector: \"'[sv-ng-element-header]'\", inputs: [\"element\"] }, { type: RowComponent, selector: \"sv-ng-row\", inputs: [\"row\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-panel, '[sv-ng-panel]'\", template: \"<ng-template #template>\\n  <div *ngIf=\\\"!!model && model.isVisible\\\" [attr.id]=\\\"model.id\\\" [class]=\\\"model.getContainerCss()\\\" (focusin)=\\\"model.focusIn()\\\" #panelContainer>\\n    <div *ngIf=\\\"model.hasDescription || model.hasTitle\\\" [element]=\\\"model\\\" sv-ng-element-header></div>\\n    <!-- ko template: { name: 'survey-question-errors', data: $data } -->\\n    <!-- /ko -->\\n    <div *ngIf=\\\"!model.isCollapsed\\\" [style.paddingLeft]=\\\"model.innerPaddingLeft\\\" [class]=\\\"model.cssClasses.panel.content\\\" [attr.id]=\\\"model.contentId\\\">\\n      <ng-container *ngFor=\\\"let row of model.rows; trackBy: trackRowBy\\\">\\n        <ng-template [component]=\\\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\\\">\\n          <sv-ng-row [row]=\\\"row\\\"></sv-ng-row>\\n        </ng-template>\\n      </ng-container>\\n      <sv-ng-action-bar [model]=\\\"model.getFooterToolbar()\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], panelContainerRef: [{\n                type: ViewChild,\n                args: [\"panelContainer\", { static: false, read: ElementRef }]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"panel\", PanelComponent);\n\nclass SurveyNavigationButton {\n    getModel() {\n        return this.model;\n    }\n    buttonMouseDown() {\n        return this.model.data && this.model.data.mouseDown();\n    }\n}\nSurveyNavigationButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyNavigationButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSurveyNavigationButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SurveyNavigationButton, selector: \"sv-ng-nav-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<input *ngIf=\\\"model.visible\\\" type=\\\"button\\\" [value]=\\\"model.title\\\" [class]=\\\"model.innerCss\\\" (mousedown)=\\\"buttonMouseDown()\\\" (click)=\\\"model.action()\\\" [disabled]=\\\"model.disabled\\\"/>\", styles: [\":host{display:contents}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyNavigationButton, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-nav-btn\", styles: [\":host { display: contents; }\"], template: \"<input *ngIf=\\\"model.visible\\\" type=\\\"button\\\" [value]=\\\"model.title\\\" [class]=\\\"model.innerCss\\\" (mousedown)=\\\"buttonMouseDown()\\\" (click)=\\\"model.action()\\\" [disabled]=\\\"model.disabled\\\"/>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-nav-btn\", SurveyNavigationButton);\n\nclass MatrixQuestionComponent extends QuestionAngular {\n    ngOnInit() {\n        this.model.visibleRowsChangedCallback = () => {\n            this.detectChanges();\n        };\n        super.ngOnInit();\n    }\n    onChange(row, column) {\n        if (this.model.isInputReadOnly)\n            return;\n        row.value = column.value;\n        this.detectChanges();\n    }\n    trackRowByFn(i, row) {\n        return \"column-\" + row.name + \"-\" + i;\n    }\n    trackColumnByFn(i, column) {\n        return \"column-\" + column.value + \"-\" + i;\n    }\n}\nMatrixQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixQuestionComponent, selector: \"sv-ng-matrix-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [class]=\\\"model.cssClasses.tableWrapper\\\" #contentElement>\\n    <fieldset>\\n      <legend [attr.aria-label]=\\\"model.locTitle.renderedHtml\\\"></legend>\\n      <table [class]=\\\"model.getTableCss()\\\">\\n        <thead *ngIf=\\\"model.showHeader\\\">\\n          <tr>\\n            <td [visible]=\\\"model.hasRows\\\"></td>\\n            <th\\n              *ngFor=\\\"let column of model.visibleColumns\\\" [class]=\\\"model.cssClasses.headerCell\\\">\\n              <ng-template [component]=\\\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\\\">\\n                <sv-ng-string [model]=\\\"column.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let row of model.visibleRows; trackBy: trackRowByFn \\\" [class]=\\\"row.rowClasses || undefined\\\">\\n           <td [class]=\\\"model.cssClasses.rowTextCell\\\" *ngIf=\\\"model.hasRows\\\">\\n              <ng-template [component]=\\\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\\\">\\n                <sv-ng-string [model]=\\\"row.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </td>\\n            <ng-container *ngIf=\\\"model.hasCellText\\\">\\n              <td *ngFor=\\\"let column of model.visibleColumns\\\"\\n                [class]=\\\"model.getItemClass(row, column)\\\"\\n                (click)=\\\"onChange(row, column)\\\" [model]=\\\"model.getCellDisplayLocText(row.name, column)\\\" sv-ng-string>\\n              </td>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!model.hasCellText\\\">\\n              <td\\n              *ngFor=\\\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\\\"\\n              [attr.data-responsive-title]=\\\"column.locText.renderedHtml\\\"\\n              [class]=\\\"model.cssClasses.cell\\\">\\n                <label [class]=\\\"model.getItemClass(row, column)\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    [class]=\\\"model.cssClasses.itemValue\\\"\\n                    [name]=\\\"row.fullName\\\"\\n                    [value]=\\\"column.value\\\"\\n                    [checked]=\\\"row.value === column.value\\\"\\n                    [disabled]=\\\"model.isInputReadOnly\\\"\\n                    [attr.id]=\\\"model.inputId + '_' + row.name + '_' + columnIndex\\\"\\n                    (change)=\\\"onChange(row, column)\\\"\\n                    [attr.aria-required]=\\\"model.ariaRequired\\\"\\n                    [attr.aria-label]=\\\"column.locText.renderedHtml\\\"\\n                    [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n                    [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n                  />\\n                  <span [class]=\\\"model.cssClasses.materialDecorator\\\">\\n                    <svg *ngIf=\\\"model.itemSvgIcon\\\" [class]=\\\"model.cssClasses.itemDecorator\\\">\\n                      <use [attr.xlink:href]=\\\"model.itemSvgIcon\\\"></use>\\n                    </svg> \\n                  </span>\\n                  <span [visible]=\\\"model.isMobile\\\" [class]=\\\"model.cssClasses.cellResponsiveTitle\\\" [model]=\\\"column.locText\\\" sv-ng-string></span>\\n                </label>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </fieldset>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-question\", template: \"<ng-template #template>\\n  <div [class]=\\\"model.cssClasses.tableWrapper\\\" #contentElement>\\n    <fieldset>\\n      <legend [attr.aria-label]=\\\"model.locTitle.renderedHtml\\\"></legend>\\n      <table [class]=\\\"model.getTableCss()\\\">\\n        <thead *ngIf=\\\"model.showHeader\\\">\\n          <tr>\\n            <td [visible]=\\\"model.hasRows\\\"></td>\\n            <th\\n              *ngFor=\\\"let column of model.visibleColumns\\\" [class]=\\\"model.cssClasses.headerCell\\\">\\n              <ng-template [component]=\\\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\\\">\\n                <sv-ng-string [model]=\\\"column.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let row of model.visibleRows; trackBy: trackRowByFn \\\" [class]=\\\"row.rowClasses || undefined\\\">\\n           <td [class]=\\\"model.cssClasses.rowTextCell\\\" *ngIf=\\\"model.hasRows\\\">\\n              <ng-template [component]=\\\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\\\">\\n                <sv-ng-string [model]=\\\"row.locText\\\"></sv-ng-string>\\n              </ng-template>\\n            </td>\\n            <ng-container *ngIf=\\\"model.hasCellText\\\">\\n              <td *ngFor=\\\"let column of model.visibleColumns\\\"\\n                [class]=\\\"model.getItemClass(row, column)\\\"\\n                (click)=\\\"onChange(row, column)\\\" [model]=\\\"model.getCellDisplayLocText(row.name, column)\\\" sv-ng-string>\\n              </td>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!model.hasCellText\\\">\\n              <td\\n              *ngFor=\\\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\\\"\\n              [attr.data-responsive-title]=\\\"column.locText.renderedHtml\\\"\\n              [class]=\\\"model.cssClasses.cell\\\">\\n                <label [class]=\\\"model.getItemClass(row, column)\\\">\\n                  <input\\n                    type=\\\"radio\\\"\\n                    [class]=\\\"model.cssClasses.itemValue\\\"\\n                    [name]=\\\"row.fullName\\\"\\n                    [value]=\\\"column.value\\\"\\n                    [checked]=\\\"row.value === column.value\\\"\\n                    [disabled]=\\\"model.isInputReadOnly\\\"\\n                    [attr.id]=\\\"model.inputId + '_' + row.name + '_' + columnIndex\\\"\\n                    (change)=\\\"onChange(row, column)\\\"\\n                    [attr.aria-required]=\\\"model.ariaRequired\\\"\\n                    [attr.aria-label]=\\\"column.locText.renderedHtml\\\"\\n                    [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n                    [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n                  />\\n                  <span [class]=\\\"model.cssClasses.materialDecorator\\\">\\n                    <svg *ngIf=\\\"model.itemSvgIcon\\\" [class]=\\\"model.cssClasses.itemDecorator\\\">\\n                      <use [attr.xlink:href]=\\\"model.itemSvgIcon\\\"></use>\\n                    </svg> \\n                  </span>\\n                  <span [visible]=\\\"model.isMobile\\\" [class]=\\\"model.cssClasses.cellResponsiveTitle\\\" [model]=\\\"column.locText\\\" sv-ng-string></span>\\n                </label>\\n              </td>\\n            </ng-container>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </fieldset>\\n  </div>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrix-question\", MatrixQuestionComponent);\n\nclass FileQuestionComponent extends QuestionAngular {\n    constructor() {\n        super(...arguments);\n        this.trackFilesFn = (index) => {\n            return this.model.inputId + \"_\" + index;\n        };\n    }\n}\nFileQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: FileQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFileQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: FileQuestionComponent, selector: \"sv-ng-file-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.fileRootCss\\\" #contentElement>\\n  <input\\n    [class]=\\\"model.cssClasses.fileInput\\\"\\n    *ngIf=\\\"!model.isReadOnly\\\"\\n    tabindex=\\\"-1\\\"\\n    type=\\\"file\\\"\\n    [attr.id]=\\\"model.inputId\\\"\\n    (change)=\\\"model.doChange($event)\\\"\\n    [attr.aria-required]=\\\"model.ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.ariaLabel\\\"\\n    [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n    [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\"\\n    [attr.title]=\\\"model.inputTitle\\\"\\n    [attr.accept]=\\\"model.acceptedTypes\\\"\\n  />\\n  <input\\n    *ngIf=\\\"model.isReadOnly\\\"\\n    type=\\\"file\\\"\\n    disabled\\n    [class]=\\\"model.getReadOnlyFileCss()\\\"\\n    [attr.id]=\\\"model.inputId\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\"\\n    [attr.placeholder]=\\\"model.title\\\"\\n    style=\\\"color: transparent\\\"\\n  />\\n  <div [class]=\\\"model.cssClasses.dragArea\\\"\\n    (dragenter)=\\\"model.onDragEnter($event)\\\"\\n    (drop)=\\\"model.onDrop($event)\\\"\\n    (dragover)=\\\"model.onDragOver($event)\\\"\\n    (dragleave)=\\\"model.onDragLeave($event)\\\">  \\n    <div\\n      [class]=\\\"model.getFileDecoratorCss()\\\"\\n    >\\n      <span [class]=\\\"model.cssClasses.dragAreaPlaceholder\\\">{{ model.dragAreaPlaceholder }}</span>\\n      <div [class]=\\\"model.cssClasses.wrapper\\\">\\n        <label\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          [class]=\\\"model.getChooseFileCss()\\\"\\n          [attr.for]=\\\"model.inputId\\\"\\n          [attr.aria-label]=\\\"model.chooseButtonCaption\\\"\\n          >\\n          <span>{{ model.chooseButtonCaption }}</span>\\n          <svg *ngIf=\\\"model.cssClasses.chooseFileIconId\\\" [title]=\\\"model.chooseButtonCaption\\\" [iconName]=\\\"model.cssClasses.chooseFileIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </label>\\n        <span\\n          [class]=\\\"model.cssClasses.noFileChosen\\\"\\n          *ngIf=\\\"model.isEmpty()\\\"\\n          >{{ model.noFileChosenCaption }}</span\\n        >\\n      </div>\\n    </div>\\n    <button\\n      type=\\\"button\\\"\\n      *ngIf=\\\"model.showRemoveButton\\\"\\n      [class]=\\\"model.cssClasses.removeButton\\\"\\n      (click)=\\\"model.doClean($event)\\\"\\n    >\\n      <span>{{ model.clearButtonCaption }}</span>\\n      <svg *ngIf=\\\"model.cssClasses.removeButtonIconId\\\" [iconName]=\\\"model.cssClasses.removeButtonIconId\\\" [size]=\\\"'auto'\\\" [title]=\\\"model.clearButtonCaption\\\" sv-ng-svg-icon></svg>\\n    </button>\\n    <div [class]=\\\"model.cssClasses.fileList || undefined\\\" *ngIf=\\\"!model.isEmpty()\\\">\\n      <span\\n        *ngFor=\\\"let val of model.previewValue; index as index; trackBy: trackFilesFn\\\"\\n        [visible]=\\\"val && model.isPreviewVisible(index)\\\"\\n        [class]=\\\"model.cssClasses.preview\\\"\\n      >\\n        <div *ngIf=\\\"val.name && model.cssClasses.fileSign\\\" [class]=\\\"model.cssClasses.fileSign\\\">\\n          <a\\n            (click)=\\\"model.doDownloadFile($event, val)\\\"\\n            [attr.href]=\\\"val.content | safeUrl\\\"\\n            [attr.title]=\\\"val.name\\\"\\n            [attr.download]=\\\"val.name\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            >{{ val.name }}</a\\n          >\\n        </div>\\n        <div [class]=\\\"model.cssClasses.imageWrapper\\\">\\n          <img\\n            *ngIf=\\\"model.canPreviewImage(val)\\\"\\n            [attr.src]=\\\"val.content | safeUrl\\\"\\n            [style.height]=\\\"model.imageHeight\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            alt=\\\"File preview\\\"\\n          />\\n          <svg *ngIf=\\\"model.defaultImage(val)\\\" \\n            [iconName]=\\\"model.cssClasses.defaultImageIconId\\\" [partCss]=\\\"model.cssClasses.defaultImage\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n          <div *ngIf=\\\"val.name && !model.isReadOnly\\\" [class]=\\\"model.cssClasses.removeFileButton\\\" (click)=\\\"model.doRemoveFile(val)\\\">\\n            <span\\n              [class]=\\\"model.cssClasses.removeFile\\\"\\n              >{{ model.removeFileCaption }}</span\\n            >\\n            <svg *ngIf=\\\"model.cssClasses.removeFileSvgIconId\\\" [title]=\\\"model.removeFileCaption\\\" [partCss]=\\\"model.cssClasses.removeFileSvg\\\" [iconName]=\\\"model.cssClasses.removeFileSvgIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon ></svg>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"val.name && model.cssClasses.fileSignBottom\\\" [class]=\\\"model.cssClasses.fileSignBottom\\\">\\n          <a\\n            (click)=\\\"model.doDownloadFile($event, val)\\\"\\n            [attr.href]=\\\"val.content | safeUrl\\\"\\n            [attr.title]=\\\"val.name\\\"\\n            [attr.download]=\\\"val.name\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            >{{ val.name }}</a\\n          >\\n        </div>\\n      </span>\\n    </div>\\n    <button\\n      type=\\\"button\\\"\\n      *ngIf=\\\"model.showRemoveButtonBottom\\\"\\n      [class]=\\\"model.showRemoveButtonBottom\\\"\\n      (click)=\\\"model.doClean($event)\\\"\\n    >\\n      <span>{{ model.clearButtonCaption }}</span>\\n      <svg *ngIf=\\\"model.cssClasses.removeButtonIconId\\\" [iconName]=\\\"model.cssClasses.removeButtonIconId\\\" [size]=\\\"'auto'\\\" [title]=\\\"model.clearButtonCaption\\\" sv-ng-svg-icon></svg>\\n    </button>\\n    <sv-action-bar *ngIf=\\\"model.mobileFileNavigatorVisible\\\" [model]=\\\"model.mobileFileNavigator\\\"></sv-action-bar>\\n  </div>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }], pipes: { \"safeUrl\": SafeUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: FileQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-file-question\", template: \"<div [class]=\\\"model.fileRootCss\\\" #contentElement>\\n  <input\\n    [class]=\\\"model.cssClasses.fileInput\\\"\\n    *ngIf=\\\"!model.isReadOnly\\\"\\n    tabindex=\\\"-1\\\"\\n    type=\\\"file\\\"\\n    [attr.id]=\\\"model.inputId\\\"\\n    (change)=\\\"model.doChange($event)\\\"\\n    [attr.aria-required]=\\\"model.ariaRequired\\\"\\n    [attr.aria-label]=\\\"model.ariaLabel\\\"\\n    [attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n    [attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\"\\n    [attr.title]=\\\"model.inputTitle\\\"\\n    [attr.accept]=\\\"model.acceptedTypes\\\"\\n  />\\n  <input\\n    *ngIf=\\\"model.isReadOnly\\\"\\n    type=\\\"file\\\"\\n    disabled\\n    [class]=\\\"model.getReadOnlyFileCss()\\\"\\n    [attr.id]=\\\"model.inputId\\\"\\n    [attr.multiple]=\\\"model.multipleRendered\\\"\\n    [attr.placeholder]=\\\"model.title\\\"\\n    style=\\\"color: transparent\\\"\\n  />\\n  <div [class]=\\\"model.cssClasses.dragArea\\\"\\n    (dragenter)=\\\"model.onDragEnter($event)\\\"\\n    (drop)=\\\"model.onDrop($event)\\\"\\n    (dragover)=\\\"model.onDragOver($event)\\\"\\n    (dragleave)=\\\"model.onDragLeave($event)\\\">  \\n    <div\\n      [class]=\\\"model.getFileDecoratorCss()\\\"\\n    >\\n      <span [class]=\\\"model.cssClasses.dragAreaPlaceholder\\\">{{ model.dragAreaPlaceholder }}</span>\\n      <div [class]=\\\"model.cssClasses.wrapper\\\">\\n        <label\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          [class]=\\\"model.getChooseFileCss()\\\"\\n          [attr.for]=\\\"model.inputId\\\"\\n          [attr.aria-label]=\\\"model.chooseButtonCaption\\\"\\n          >\\n          <span>{{ model.chooseButtonCaption }}</span>\\n          <svg *ngIf=\\\"model.cssClasses.chooseFileIconId\\\" [title]=\\\"model.chooseButtonCaption\\\" [iconName]=\\\"model.cssClasses.chooseFileIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n        </label>\\n        <span\\n          [class]=\\\"model.cssClasses.noFileChosen\\\"\\n          *ngIf=\\\"model.isEmpty()\\\"\\n          >{{ model.noFileChosenCaption }}</span\\n        >\\n      </div>\\n    </div>\\n    <button\\n      type=\\\"button\\\"\\n      *ngIf=\\\"model.showRemoveButton\\\"\\n      [class]=\\\"model.cssClasses.removeButton\\\"\\n      (click)=\\\"model.doClean($event)\\\"\\n    >\\n      <span>{{ model.clearButtonCaption }}</span>\\n      <svg *ngIf=\\\"model.cssClasses.removeButtonIconId\\\" [iconName]=\\\"model.cssClasses.removeButtonIconId\\\" [size]=\\\"'auto'\\\" [title]=\\\"model.clearButtonCaption\\\" sv-ng-svg-icon></svg>\\n    </button>\\n    <div [class]=\\\"model.cssClasses.fileList || undefined\\\" *ngIf=\\\"!model.isEmpty()\\\">\\n      <span\\n        *ngFor=\\\"let val of model.previewValue; index as index; trackBy: trackFilesFn\\\"\\n        [visible]=\\\"val && model.isPreviewVisible(index)\\\"\\n        [class]=\\\"model.cssClasses.preview\\\"\\n      >\\n        <div *ngIf=\\\"val.name && model.cssClasses.fileSign\\\" [class]=\\\"model.cssClasses.fileSign\\\">\\n          <a\\n            (click)=\\\"model.doDownloadFile($event, val)\\\"\\n            [attr.href]=\\\"val.content | safeUrl\\\"\\n            [attr.title]=\\\"val.name\\\"\\n            [attr.download]=\\\"val.name\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            >{{ val.name }}</a\\n          >\\n        </div>\\n        <div [class]=\\\"model.cssClasses.imageWrapper\\\">\\n          <img\\n            *ngIf=\\\"model.canPreviewImage(val)\\\"\\n            [attr.src]=\\\"val.content | safeUrl\\\"\\n            [style.height]=\\\"model.imageHeight\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            alt=\\\"File preview\\\"\\n          />\\n          <svg *ngIf=\\\"model.defaultImage(val)\\\" \\n            [iconName]=\\\"model.cssClasses.defaultImageIconId\\\" [partCss]=\\\"model.cssClasses.defaultImage\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n          <div *ngIf=\\\"val.name && !model.isReadOnly\\\" [class]=\\\"model.cssClasses.removeFileButton\\\" (click)=\\\"model.doRemoveFile(val)\\\">\\n            <span\\n              [class]=\\\"model.cssClasses.removeFile\\\"\\n              >{{ model.removeFileCaption }}</span\\n            >\\n            <svg *ngIf=\\\"model.cssClasses.removeFileSvgIconId\\\" [title]=\\\"model.removeFileCaption\\\" [partCss]=\\\"model.cssClasses.removeFileSvg\\\" [iconName]=\\\"model.cssClasses.removeFileSvgIconId\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon ></svg>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"val.name && model.cssClasses.fileSignBottom\\\" [class]=\\\"model.cssClasses.fileSignBottom\\\">\\n          <a\\n            (click)=\\\"model.doDownloadFile($event, val)\\\"\\n            [attr.href]=\\\"val.content | safeUrl\\\"\\n            [attr.title]=\\\"val.name\\\"\\n            [attr.download]=\\\"val.name\\\"\\n            [style.width]=\\\"model.imageWidth\\\"\\n            >{{ val.name }}</a\\n          >\\n        </div>\\n      </span>\\n    </div>\\n    <button\\n      type=\\\"button\\\"\\n      *ngIf=\\\"model.showRemoveButtonBottom\\\"\\n      [class]=\\\"model.showRemoveButtonBottom\\\"\\n      (click)=\\\"model.doClean($event)\\\"\\n    >\\n      <span>{{ model.clearButtonCaption }}</span>\\n      <svg *ngIf=\\\"model.cssClasses.removeButtonIconId\\\" [iconName]=\\\"model.cssClasses.removeButtonIconId\\\" [size]=\\\"'auto'\\\" [title]=\\\"model.clearButtonCaption\\\" sv-ng-svg-icon></svg>\\n    </button>\\n    <sv-action-bar *ngIf=\\\"model.mobileFileNavigatorVisible\\\" [model]=\\\"model.mobileFileNavigator\\\"></sv-action-bar>\\n  </div>\\n</div>\", styles: [] }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"file-question\", FileQuestionComponent);\n\nclass CommentQuestionComponent extends QuestionAngular {\n    onChange(event) {\n        this.model.value = event.target.value;\n    }\n}\nCommentQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CommentQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCommentQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CommentQuestionComponent, selector: \"sv-ng-question-comment\", usesInheritance: true, ngImport: i0, template: \"<textarea\\n*ngIf=\\\"!model.isReadOnlyRenderDiv()\\\"\\n[readonly]=\\\"model.isInputReadOnly\\\"\\n[attr.disabled]=\\\"model.renderedInputDisabled\\\"\\n[id]=\\\"model.inputId\\\"\\n[attr.maxlength]=\\\"model.getMaxLength()\\\"\\n[attr.cols]=\\\"model.cols\\\"\\n[attr.rows]=\\\"model.rows\\\"\\n[attr.placeholder]=\\\"model.renderedPlaceholder\\\"\\n[class]=\\\"model.className\\\"\\n[value]=\\\"model.value || null\\\"\\n(input)=\\\"model.onInput($event)\\\"\\n(keydown)=\\\"model.onKeyDown($event)\\\"\\n(change)=\\\"onChange($event)\\\"\\n[attr.aria-required]=\\\"model.ariaRequired\\\"\\n[attr.aria-label]=\\\"model.ariaLabel\\\"\\n[attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n[attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n[style.resize]=\\\"model.resizeStyle\\\"\\n#contentElement></textarea>\\n<div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ model.value }}</div>\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CommentQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-question-comment\", template: \"<textarea\\n*ngIf=\\\"!model.isReadOnlyRenderDiv()\\\"\\n[readonly]=\\\"model.isInputReadOnly\\\"\\n[attr.disabled]=\\\"model.renderedInputDisabled\\\"\\n[id]=\\\"model.inputId\\\"\\n[attr.maxlength]=\\\"model.getMaxLength()\\\"\\n[attr.cols]=\\\"model.cols\\\"\\n[attr.rows]=\\\"model.rows\\\"\\n[attr.placeholder]=\\\"model.renderedPlaceholder\\\"\\n[class]=\\\"model.className\\\"\\n[value]=\\\"model.value || null\\\"\\n(input)=\\\"model.onInput($event)\\\"\\n(keydown)=\\\"model.onKeyDown($event)\\\"\\n(change)=\\\"onChange($event)\\\"\\n[attr.aria-required]=\\\"model.ariaRequired\\\"\\n[attr.aria-label]=\\\"model.ariaLabel\\\"\\n[attr.aria-invalid]=\\\"model.ariaInvalid\\\"\\n[attr.aria-describedby]=\\\"model.ariaDescribedBy\\\"\\n[style.resize]=\\\"model.resizeStyle\\\"\\n#contentElement></textarea>\\n<div *ngIf=\\\"model.isReadOnlyRenderDiv()\\\" #contentElement>{{ model.value }}</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"comment-question\", CommentQuestionComponent);\n\nclass SignaturePadQuestionComponent extends QuestionAngular {\n}\nSignaturePadQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SignaturePadQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSignaturePadQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: SignaturePadQuestionComponent, selector: \"sv-ng-signature-component\", usesInheritance: true, ngImport: i0, template: \"<div\\n[class]=\\\"model.cssClasses.root\\\"\\n[style.height]=\\\"model.signatureHeight + 'px'\\\" [style.width]=\\\"model.signatureWidth + 'px'\\\" #contentElement>\\n<div [class]=\\\"model.cssClasses.placeholder\\\" [visible]=\\\"model.needShowPlaceholder()\\\">\\n  {{ model.placeHolderText }}\\n</div>\\n<div>\\n  <canvas tabindex=\\\"0\\\"></canvas>\\n</div>\\n<div [class]=\\\"model.cssClasses.controls\\\" [visible]=\\\"model.canShowClearButton\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"model.cssClasses.clearButton\\\"\\n    [title]=\\\"model.clearButtonCaption\\\"\\n    (click)=\\\"model.clearValue()\\\"\\n  >\\n    <span *ngIf=\\\"!model.cssClasses.clearButtonIconId\\\">\\u2716</span>\\n    <svg\\n      *ngIf=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [iconName]=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n  </button>\\n</div>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }], directives: [{ type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SignaturePadQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-signature-component\", template: \"<div\\n[class]=\\\"model.cssClasses.root\\\"\\n[style.height]=\\\"model.signatureHeight + 'px'\\\" [style.width]=\\\"model.signatureWidth + 'px'\\\" #contentElement>\\n<div [class]=\\\"model.cssClasses.placeholder\\\" [visible]=\\\"model.needShowPlaceholder()\\\">\\n  {{ model.placeHolderText }}\\n</div>\\n<div>\\n  <canvas tabindex=\\\"0\\\"></canvas>\\n</div>\\n<div [class]=\\\"model.cssClasses.controls\\\" [visible]=\\\"model.canShowClearButton\\\">\\n  <button\\n    type=\\\"button\\\"\\n    [class]=\\\"model.cssClasses.clearButton\\\"\\n    [title]=\\\"model.clearButtonCaption\\\"\\n    (click)=\\\"model.clearValue()\\\"\\n  >\\n    <span *ngIf=\\\"!model.cssClasses.clearButtonIconId\\\">\\u2716</span>\\n    <svg\\n      *ngIf=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [iconName]=\\\"model.cssClasses.clearButtonIconId\\\"\\n      [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n  </button>\\n</div>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"signaturepad-question\", SignaturePadQuestionComponent);\n\nclass MultipleTextItemComponent extends BaseAngular {\n    getModel() {\n        return this.model.editor;\n    }\n}\nMultipleTextItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MultipleTextItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMultipleTextItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MultipleTextItemComponent, selector: \"'[sv-ng-multipletext-item]'\", inputs: { question: \"question\", model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<label [class]=\\\"question.getItemLabelCss(model)\\\">\\n  <span [class]=\\\"question.getItemTitleCss()\\\">\\n    <span *ngIf=\\\" model.editor.isRequireTextBeforeTitle || model.editor.isRequireTextOnStart\\\"\\n      [class]=\\\"question.cssClasses.requiredText\\\">{{ model.editor.requiredText }}</span>\\n    <sv-ng-string [model]=\\\"model.locTitle\\\"></sv-ng-string>\\n    <span\\n      *ngIf=\\\"model.editor.isRequireTextAfterTitle\\\"\\n      [class]=\\\"question.cssClasses.requiredText\\\"\\n      >{{ model.editor.requiredText }}</span\\n    >\\n  </span>\\n  <div [class]=\\\"question.getItemCss()\\\">\\n    <div *ngIf=\\\"model.editor.showErrorOnTop && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" sv-ng-errors></div>\\n    <sv-ng-text-question [model]=\\\"model.editor\\\"></sv-ng-text-question>\\n    <div *ngIf=\\\"model.editor.showErrorOnBottom && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" sv-ng-errors></div>\\n  </div>\\n  <div *ngIf=\\\"model.editor.isErrorsModeTooltip && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n</label>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: TextQuestionComponent, selector: \"sv-ng-text-question\" }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MultipleTextItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"'[sv-ng-multipletext-item]'\", template: \"<label [class]=\\\"question.getItemLabelCss(model)\\\">\\n  <span [class]=\\\"question.getItemTitleCss()\\\">\\n    <span *ngIf=\\\" model.editor.isRequireTextBeforeTitle || model.editor.isRequireTextOnStart\\\"\\n      [class]=\\\"question.cssClasses.requiredText\\\">{{ model.editor.requiredText }}</span>\\n    <sv-ng-string [model]=\\\"model.locTitle\\\"></sv-ng-string>\\n    <span\\n      *ngIf=\\\"model.editor.isRequireTextAfterTitle\\\"\\n      [class]=\\\"question.cssClasses.requiredText\\\"\\n      >{{ model.editor.requiredText }}</span\\n    >\\n  </span>\\n  <div [class]=\\\"question.getItemCss()\\\">\\n    <div *ngIf=\\\"model.editor.showErrorOnTop && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" sv-ng-errors></div>\\n    <sv-ng-text-question [model]=\\\"model.editor\\\"></sv-ng-text-question>\\n    <div *ngIf=\\\"model.editor.showErrorOnBottom && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" sv-ng-errors></div>\\n  </div>\\n  <div *ngIf=\\\"model.editor.isErrorsModeTooltip && model.editor.hasVisibleErrors\\\" [element]=\\\"model.editor\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n</label>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\n\nclass MultipleTextComponent extends QuestionAngular {\n    constructor() {\n        super(...arguments);\n        this.trackRowBy = (index) => {\n            return this.model.inputId + \"rowkey\" + index;\n        };\n    }\n    trackItemBy(_, item) {\n        return \"item\" + item.editor.id;\n    }\n}\nMultipleTextComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MultipleTextComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMultipleTextComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MultipleTextComponent, selector: \"sv-ng-multipletext-question\", usesInheritance: true, ngImport: i0, template: \"<table [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <tbody>\\n    <tr\\n      *ngFor=\\\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\\\"\\n      [class]=\\\"model.cssClasses.row\\\"\\n    >\\n      <ng-container *ngFor=\\\"let item of row; trackBy: trackItemBy\\\" >\\n        <td [class]=\\\"model.cssClasses.cell\\\" [question]=\\\"model\\\" [model]=\\\"item\\\" sv-ng-multipletext-item></td>\\n      </ng-container>\\n    </tr>\\n  </tbody>\\n</table>\\n\", components: [{ type: MultipleTextItemComponent, selector: \"'[sv-ng-multipletext-item]'\", inputs: [\"question\", \"model\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MultipleTextComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-multipletext-question\", template: \"<table [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <tbody>\\n    <tr\\n      *ngFor=\\\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\\\"\\n      [class]=\\\"model.cssClasses.row\\\"\\n    >\\n      <ng-container *ngFor=\\\"let item of row; trackBy: trackItemBy\\\" >\\n        <td [class]=\\\"model.cssClasses.cell\\\" [question]=\\\"model\\\" [model]=\\\"item\\\" sv-ng-multipletext-item></td>\\n      </ng-container>\\n    </tr>\\n  </tbody>\\n</table>\\n\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"multipletext-question\", MultipleTextComponent);\n\nclass RankingQuestionComponent extends SelectBaseComponent {\n    constructor() {\n        super(...arguments);\n        this.inputType = \"\";\n        this.trackItemBy = (index, item) => {\n            return item.value + \"-\" + index + \"-item\";\n        };\n    }\n    getDefaultComponentName() {\n        return \"sv-ng-ranking-item\";\n    }\n    getItemValueComponentData(item, index) {\n        const res = super.getItemValueComponentData(item);\n        res.componentData.index = index;\n        return res;\n    }\n}\nRankingQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RankingQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRankingQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RankingQuestionComponent, selector: \"sv-ng-ranking-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.rootClass\\\" #contentElement>\\n  <ng-container *ngFor=\\\"let item of model.rankingChoices; index as index; trackBy: trackItemBy\\\">\\n    <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\\\"></ng-template>\\n  </ng-container>\\n</div>\", directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RankingQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-ranking-question\", template: \"<div [class]=\\\"model.rootClass\\\" #contentElement>\\n  <ng-container *ngFor=\\\"let item of model.rankingChoices; index as index; trackBy: trackItemBy\\\">\\n    <ng-template [component]=\\\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\\\"></ng-template>\\n  </ng-container>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"ranking-question\", RankingQuestionComponent);\n\nclass RankingItemComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n}\nRankingItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RankingItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nRankingItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: RankingItemComponent, selector: \"sv-ng-ranking-item\", inputs: { question: \"question\", model: \"model\", index: \"index\" }, usesInheritance: true, ngImport: i0, template: \"\\n\\n\\n<div [attr.tabindex]=\\\"question.getItemTabIndex(model)\\\" [attr.data-sv-drop-target-ranking-item]=\\\"index\\\" \\n    [class]=\\\"question.getItemClass(model)\\\"\\n    (keydown)=\\\"question.handleKeydown($event, model)\\\"\\n    (pointerdown)=\\\"question.handlePointerDown($event, model, $any($event.currentTarget))\\\">\\n  <div tabindex=\\\"-1\\\" style=\\\"outline: none;\\\">\\n    <div [class]=\\\"question.cssClasses.itemGhostNode\\\"></div>\\n    <div [class]=\\\"question.cssClasses.itemContent\\\">\\n      <div [class]=\\\"question.cssClasses.itemIconContainer\\\">\\n        <svg\\n          width=\\\"10\\\"\\n          height=\\\"16\\\"\\n          viewBox=\\\"0 0 10 16\\\"\\n          [class]=\\\"question.getIconHoverCss()\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M6 2C6 0.9 6.9 0 8 0C9.1 0 10 0.9 10 2C10 3.1 9.1 4 8 4C6.9 4 6 3.1 6 2ZM2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0ZM8 6C6.9 6 6 6.9 6 8C6 9.1 6.9 10 8 10C9.1 10 10 9.1 10 8C10 6.9 9.1 6 8 6ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM8 12C6.9 12 6 12.9 6 14C6 15.1 6.9 16 8 16C9.1 16 10 15.1 10 14C10 12.9 9.1 12 8 12ZM2 12C0.9 12 0 12.9 0 14C0 15.1 0.9 16 2 16C3.1 16 4 15.1 4 14C4 12.9 3.1 12 2 12Z\\\" />\\n        </svg>\\n        <svg\\n          width=\\\"10\\\"\\n          height=\\\"24\\\"\\n          viewBox=\\\"0 0 10 24\\\"\\n          [class]=\\\"question.getIconFocusCss()\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path d=\\\"M10 5L5 0L0 5H4V9H6V5H10Z\\\" />\\n          <path d=\\\"M6 19V15H4V19H0L5 24L10 19H6Z\\\" />\\n        </svg>\\n      </div>\\n\\n      <div [class]=\\\"question.cssClasses.itemIndex\\\">{{ question.getNumberByIndex(index) }}</div>\\n      <div [class]=\\\"question.cssClasses.controlLabel\\\">\\n        <sv-ng-string [model]=\\\"model.locText\\\"></sv-ng-string>\\n      </div>\\n    </div>\\n  </div>\\n</div>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: RankingItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-ranking-item\", template: \"\\n\\n\\n<div [attr.tabindex]=\\\"question.getItemTabIndex(model)\\\" [attr.data-sv-drop-target-ranking-item]=\\\"index\\\" \\n    [class]=\\\"question.getItemClass(model)\\\"\\n    (keydown)=\\\"question.handleKeydown($event, model)\\\"\\n    (pointerdown)=\\\"question.handlePointerDown($event, model, $any($event.currentTarget))\\\">\\n  <div tabindex=\\\"-1\\\" style=\\\"outline: none;\\\">\\n    <div [class]=\\\"question.cssClasses.itemGhostNode\\\"></div>\\n    <div [class]=\\\"question.cssClasses.itemContent\\\">\\n      <div [class]=\\\"question.cssClasses.itemIconContainer\\\">\\n        <svg\\n          width=\\\"10\\\"\\n          height=\\\"16\\\"\\n          viewBox=\\\"0 0 10 16\\\"\\n          [class]=\\\"question.getIconHoverCss()\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path\\n            d=\\\"M6 2C6 0.9 6.9 0 8 0C9.1 0 10 0.9 10 2C10 3.1 9.1 4 8 4C6.9 4 6 3.1 6 2ZM2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0ZM8 6C6.9 6 6 6.9 6 8C6 9.1 6.9 10 8 10C9.1 10 10 9.1 10 8C10 6.9 9.1 6 8 6ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM8 12C6.9 12 6 12.9 6 14C6 15.1 6.9 16 8 16C9.1 16 10 15.1 10 14C10 12.9 9.1 12 8 12ZM2 12C0.9 12 0 12.9 0 14C0 15.1 0.9 16 2 16C3.1 16 4 15.1 4 14C4 12.9 3.1 12 2 12Z\\\" />\\n        </svg>\\n        <svg\\n          width=\\\"10\\\"\\n          height=\\\"24\\\"\\n          viewBox=\\\"0 0 10 24\\\"\\n          [class]=\\\"question.getIconFocusCss()\\\"\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <path d=\\\"M10 5L5 0L0 5H4V9H6V5H10Z\\\" />\\n          <path d=\\\"M6 19V15H4V19H0L5 24L10 19H6Z\\\" />\\n        </svg>\\n      </div>\\n\\n      <div [class]=\\\"question.cssClasses.itemIndex\\\">{{ question.getNumberByIndex(index) }}</div>\\n      <div [class]=\\\"question.cssClasses.controlLabel\\\">\\n        <sv-ng-string [model]=\\\"model.locText\\\"></sv-ng-string>\\n      </div>\\n    </div>\\n  </div>\\n</div>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-ranking-item\", RankingItemComponent);\n\nclass StringEditorComponent {\n    constructor() {\n        this.onInput = (event) => {\n            this.model.text = event.target.innerText;\n        };\n        this.onClick = (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n    }\n}\nStringEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: StringEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nStringEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: StringEditorComponent, selector: \"sv-ng-string-editor\", inputs: { model: \"model\" }, ngImport: i0, template: \"<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"model.hasHtml\\\"\\n  [innerHtml]=\\\"model.renderedHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n></span>\\n<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"!model.hasHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n  >{{ model.renderedHtml }}</span\\n>\\n\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: StringEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-string-editor\", template: \"<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"model.hasHtml\\\"\\n  [innerHtml]=\\\"model.renderedHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n></span>\\n<span\\n  class=\\\"sv-string-editor\\\"\\n  contenteditable=\\\"true\\\"\\n  *ngIf=\\\"!model.hasHtml\\\"\\n  (blur)=\\\"onInput($event)\\\"\\n  (click)=\\\"onClick($event)\\\"\\n  >{{ model.renderedHtml }}</span\\n>\\n\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(LocalizableString.editableRenderer, StringEditorComponent);\n\nclass PaneldynamicAction {\n    get question() {\n        return (this.model && this.model.data.question) || this.data.question;\n    }\n}\nPaneldynamicAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PaneldynamicAction, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPaneldynamicAction.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PaneldynamicAction, selector: \"ng-component\", inputs: { data: \"data\", model: \"model\" }, ngImport: i0, template: \"\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PaneldynamicAction, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"\",\n                    template: \"\"\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }] } });\nclass PanelDynamicAddBtn extends PaneldynamicAction {\n    addPanelClick() {\n        this.question.addPanelUI();\n    }\n}\nPanelDynamicAddBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicAddBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicAddBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelDynamicAddBtn, selector: \"sv-ng-paneldynamic-add-btn\", usesInheritance: true, ngImport: i0, template: \"<button type=\\\"button\\\" *ngIf=\\\"question.canAddPanel\\\" [class]=\\\"question.getAddButtonCss()\\\" (click)=\\\"addPanelClick()\\\">\\n<span [class]=\\\"question.cssClasses.buttonAddText\\\">{{question.panelAddText}}</span>\\n</button>\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicAddBtn, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-add-btn\", template: \"<button type=\\\"button\\\" *ngIf=\\\"question.canAddPanel\\\" [class]=\\\"question.getAddButtonCss()\\\" (click)=\\\"addPanelClick()\\\">\\n<span [class]=\\\"question.cssClasses.buttonAddText\\\">{{question.panelAddText}}</span>\\n</button>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-add-btn\", PanelDynamicAddBtn);\n\nclass PanelDynamicNextBtn extends PaneldynamicAction {\n    nextPanelClick() {\n        this.question.goToNextPanel();\n    }\n}\nPanelDynamicNextBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicNextBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicNextBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelDynamicNextBtn, selector: \"sv-ng-paneldynamic-next-btn\", usesInheritance: true, ngImport: i0, template: \"<div [attr.title]=\\\"question.panelNextText\\\" (click)=\\\"nextPanelClick()\\\" [class]=\\\"question.getNextButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicNextBtn, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-next-btn\", template: \"<div [attr.title]=\\\"question.panelNextText\\\" (click)=\\\"nextPanelClick()\\\" [class]=\\\"question.getNextButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-next-btn\", PanelDynamicNextBtn);\n\nclass PanelDynamicPrevBtn extends PaneldynamicAction {\n    prevPanelClick() {\n        this.question.goToPrevPanel();\n    }\n}\nPanelDynamicPrevBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicPrevBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicPrevBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelDynamicPrevBtn, selector: \"sv-ng-paneldynamic-prev-btn\", usesInheritance: true, ngImport: i0, template: \"<div [attr.title]=\\\"question.panelPrevText\\\" (click)=\\\"prevPanelClick()\\\" [class]=\\\"question.getPrevButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\\n\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicPrevBtn, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-prev-btn\", template: \"<div [attr.title]=\\\"question.panelPrevText\\\" (click)=\\\"prevPanelClick()\\\" [class]=\\\"question.getPrevButtonCss()\\\">\\n  <svg [iconName]=\\\"question.cssClasses.progressBtnIcon\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon></svg>\\n</div>\\n\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-prev-btn\", PanelDynamicPrevBtn);\n\nclass PaneldynamicRemoveButtonComponent extends PaneldynamicAction {\n    get panel() {\n        return (this.data ? this.data : this.model.data).panel;\n    }\n}\nPaneldynamicRemoveButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PaneldynamicRemoveButtonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPaneldynamicRemoveButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PaneldynamicRemoveButtonComponent, selector: \"sv-ng-paneldynamic-remove-btn\", usesInheritance: true, ngImport: i0, template: \"<button type=\\\"button\\\" (click)=\\\"question.removePanelUI(panel)\\\" [class]=\\\"question.getPanelRemoveButtonCss()\\\"> \\n  <span [class]=\\\"question.cssClasses.buttonRemoveText\\\">{{question.panelRemoveText}}</span>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PaneldynamicRemoveButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-remove-btn\", template: \"<button type=\\\"button\\\" (click)=\\\"question.removePanelUI(panel)\\\" [class]=\\\"question.getPanelRemoveButtonCss()\\\"> \\n  <span [class]=\\\"question.cssClasses.buttonRemoveText\\\">{{question.panelRemoveText}}</span>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\\n\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-remove-btn\", PaneldynamicRemoveButtonComponent);\n\nclass PanelDynamicProgressText extends PaneldynamicAction {\n}\nPanelDynamicProgressText.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicProgressText, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicProgressText.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelDynamicProgressText, selector: \"sv-ng-paneldynamic-progress-text\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"question.cssClasses.progressText\\\">{{ question.progressText }}</div>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicProgressText, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-progress-text\", template: \"<div [class]=\\\"question.cssClasses.progressText\\\">{{ question.progressText }}</div>\\n\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-progress-text\", PanelDynamicProgressText);\n\nclass PanelDynamicQuestionComponent extends QuestionAngular {\n    get renderedPanels() {\n        if (this.model.isRenderModeList)\n            return this.model.panels;\n        const panels = [];\n        if (this.model.currentPanel) {\n            panels.push(this.model.currentPanel);\n        }\n        return panels;\n    }\n    onModelChanged() {\n        super.onModelChanged();\n        this.model.panelCountChangedCallback = () => {\n            this.detectChanges();\n        };\n        this.model.currentIndexChangedCallback = () => {\n            this.detectChanges();\n        };\n        this.model.renderModeChangedCallback = () => {\n            this.detectChanges();\n        };\n    }\n    get progressCssClass() {\n        return this.model.isProgressTopShowing\n            ? this.model.cssClasses.progressTop\n            : this.model.cssClasses.progressBottom;\n    }\n    ngOnDestroy() {\n        this.model.panelCountChangedCallback = () => { };\n        this.model.currentIndexChangedCallback = () => { };\n        this.model.renderModeChangedCallback = () => { };\n        super.ngOnDestroy();\n    }\n    getPanelComponentName(panel) {\n        const survey = this.surveyModel;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(panel);\n            if (!!name) {\n                return name;\n            }\n        }\n        return \"panel\";\n    }\n    getPanelComponentData(panel) {\n        const survey = this.surveyModel;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(panel);\n        }\n        return {\n            componentName: \"panel\",\n            componentData: {\n                model: panel,\n                data: data\n            }\n        };\n    }\n}\nPanelDynamicQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPanelDynamicQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: PanelDynamicQuestionComponent, selector: \"sv-ng-paneldynamic-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <div *ngIf=\\\"model.getShowNoEntriesPlaceholder()\\\" [class]=\\\"model.cssClasses.noEntriesPlaceholder\\\">\\n    <span [model]=\\\"model.locNoEntriesText\\\" sv-ng-string></span>\\n    <sv-ng-paneldynamic-add-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  </div>\\n  <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\\\">\\n    <div\\n      [class]=\\\"model.cssClasses.progressBar\\\"\\n      [style]=\\\"{ width: model.progress }\\\"\\n      role=\\\"progressbar\\\"\\n    ></div>\\n  </div>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\" *ngIf=\\\"model.showLegacyNavigation && model.isProgressTopShowing\\\"></ng-container>\\n  <!-- add track by [key]=\\\"panel.id\\\" -->\\n  <ng-container *ngFor=\\\"let panel of renderedPanels; index as index\\\"> \\n    <div [class]=\\\"model.getPanelWrapperCss()\\\">\\n      <ng-template [component]=\\\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\\\"></ng-template>\\n      <ng-container *ngIf=\\\"model.panelRemoveButtonLocation ==='right'\\\">\\n        <sv-ng-paneldynamic-remove-btn *ngIf=\\\"model.canRemovePanel && panel.state != 'collapsed' && model.panelRemoveButtonLocation == 'right'\\\" [data]=\\\"{ panel: panel, question: model }\\\"></sv-ng-paneldynamic-remove-btn>\\n      </ng-container>\\n    </div>\\n    <!-- add track by [key]=\\\"'separator' + panel.id\\\" -->\\n    <hr [class]=\\\"model.cssClasses.separator\\\" *ngIf=\\\"model.isRenderModeList && index < model.panelCount - 1\\\"/>\\n  </ng-container>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\" *ngIf=\\\"model.showLegacyNavigation && model.isProgressBottomShowing\\\"></ng-container>\\n  <sv-ng-paneldynamic-add-btn *ngIf=\\\"model.showLegacyNavigation && model.isRenderModeList\\\" [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  <ng-container [ngTemplateOutlet]=\\\"progressV2\\\" *ngIf=\\\"model.panelCount !== 0 && !model.showLegacyNavigation\\\"></ng-container>\\n</div>\\n\\n<ng-template #progressV2>\\n  <div [class]=\\\"model.cssClasses.footer\\\" *ngIf=\\\"!!model.cssClasses.footer\\\">\\n    <hr [class]=\\\"model.cssClasses.separator\\\"/>\\n    <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing && model.isProgressBottomShowing\\\">\\n      <div\\n        [class]=\\\"model.cssClasses.progressBar\\\"\\n        [style]=\\\"{ width: model.progress }\\\"\\n        role=\\\"progressbar\\\"\\n      ></div>\\n    </div>\\n    <div [class]=\\\"model.cssClasses.footerButtonsContainer\\\">\\n      <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #progress>\\n  <div [class]=\\\"this.progressCssClass\\\">\\n    <div style=\\\"clear: both\\\" [class]=\\\"this.progressCssClass\\\">\\n      <div [class]=\\\"model.cssClasses.progressContainer\\\">\\n        <sv-ng-paneldynamic-prev-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-prev-btn>\\n        <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing\\\">\\n          <div\\n            [class]=\\\"model.cssClasses.progressBar\\\"\\n            [style]=\\\"{ width: model.progress }\\\"\\n            role=\\\"progressbar\\\"\\n          ></div>\\n        </div>\\n          <sv-ng-paneldynamic-next-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-next-btn>\\n      </div>\\n      <sv-ng-paneldynamic-add-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n      <sv-ng-paneldynamic-progress-text [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-progress-text>\\n    </div>\\n  </div>\\n</ng-template>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: PanelDynamicAddBtn, selector: \"sv-ng-paneldynamic-add-btn\" }, { type: PaneldynamicRemoveButtonComponent, selector: \"sv-ng-paneldynamic-remove-btn\" }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: PanelDynamicPrevBtn, selector: \"sv-ng-paneldynamic-prev-btn\" }, { type: PanelDynamicNextBtn, selector: \"sv-ng-paneldynamic-next-btn\" }, { type: PanelDynamicProgressText, selector: \"sv-ng-paneldynamic-progress-text\" }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: PanelDynamicQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-paneldynamic-question\", template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <div *ngIf=\\\"model.getShowNoEntriesPlaceholder()\\\" [class]=\\\"model.cssClasses.noEntriesPlaceholder\\\">\\n    <span [model]=\\\"model.locNoEntriesText\\\" sv-ng-string></span>\\n    <sv-ng-paneldynamic-add-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  </div>\\n  <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\\\">\\n    <div\\n      [class]=\\\"model.cssClasses.progressBar\\\"\\n      [style]=\\\"{ width: model.progress }\\\"\\n      role=\\\"progressbar\\\"\\n    ></div>\\n  </div>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\" *ngIf=\\\"model.showLegacyNavigation && model.isProgressTopShowing\\\"></ng-container>\\n  <!-- add track by [key]=\\\"panel.id\\\" -->\\n  <ng-container *ngFor=\\\"let panel of renderedPanels; index as index\\\"> \\n    <div [class]=\\\"model.getPanelWrapperCss()\\\">\\n      <ng-template [component]=\\\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\\\"></ng-template>\\n      <ng-container *ngIf=\\\"model.panelRemoveButtonLocation ==='right'\\\">\\n        <sv-ng-paneldynamic-remove-btn *ngIf=\\\"model.canRemovePanel && panel.state != 'collapsed' && model.panelRemoveButtonLocation == 'right'\\\" [data]=\\\"{ panel: panel, question: model }\\\"></sv-ng-paneldynamic-remove-btn>\\n      </ng-container>\\n    </div>\\n    <!-- add track by [key]=\\\"'separator' + panel.id\\\" -->\\n    <hr [class]=\\\"model.cssClasses.separator\\\" *ngIf=\\\"model.isRenderModeList && index < model.panelCount - 1\\\"/>\\n  </ng-container>\\n  <ng-container [ngTemplateOutlet]=\\\"progress\\\" *ngIf=\\\"model.showLegacyNavigation && model.isProgressBottomShowing\\\"></ng-container>\\n  <sv-ng-paneldynamic-add-btn *ngIf=\\\"model.showLegacyNavigation && model.isRenderModeList\\\" [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n  <ng-container [ngTemplateOutlet]=\\\"progressV2\\\" *ngIf=\\\"model.panelCount !== 0 && !model.showLegacyNavigation\\\"></ng-container>\\n</div>\\n\\n<ng-template #progressV2>\\n  <div [class]=\\\"model.cssClasses.footer\\\" *ngIf=\\\"!!model.cssClasses.footer\\\">\\n    <hr [class]=\\\"model.cssClasses.separator\\\"/>\\n    <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing && model.isProgressBottomShowing\\\">\\n      <div\\n        [class]=\\\"model.cssClasses.progressBar\\\"\\n        [style]=\\\"{ width: model.progress }\\\"\\n        role=\\\"progressbar\\\"\\n      ></div>\\n    </div>\\n    <div [class]=\\\"model.cssClasses.footerButtonsContainer\\\">\\n      <sv-ng-action-bar [model]=\\\"model.footerToolbar\\\"></sv-ng-action-bar>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #progress>\\n  <div [class]=\\\"this.progressCssClass\\\">\\n    <div style=\\\"clear: both\\\" [class]=\\\"this.progressCssClass\\\">\\n      <div [class]=\\\"model.cssClasses.progressContainer\\\">\\n        <sv-ng-paneldynamic-prev-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-prev-btn>\\n        <div [class]=\\\"model.cssClasses.progress\\\" *ngIf=\\\"model.isRangeShowing\\\">\\n          <div\\n            [class]=\\\"model.cssClasses.progressBar\\\"\\n            [style]=\\\"{ width: model.progress }\\\"\\n            role=\\\"progressbar\\\"\\n          ></div>\\n        </div>\\n          <sv-ng-paneldynamic-next-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-next-btn>\\n      </div>\\n      <sv-ng-paneldynamic-add-btn [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-add-btn>\\n      <sv-ng-paneldynamic-progress-text [data]=\\\"{ question: model }\\\"></sv-ng-paneldynamic-progress-text>\\n    </div>\\n  </div>\\n</ng-template>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"paneldynamic-question\", PanelDynamicQuestionComponent);\n\nclass TemplateRendererComponent extends EmbeddedViewContentComponent {\n}\nTemplateRendererComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TemplateRendererComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTemplateRendererComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TemplateRendererComponent, selector: \"sv-template-renderer\", inputs: { componentName: \"componentName\", componentData: \"componentData\", contentTempl: \"contentTempl\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!!componentName\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!componentName && contentTempl\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentTempl\\\"></ng-container>\\n  </ng-container>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TemplateRendererComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-template-renderer\", template: \"<ng-template #template>\\n  <ng-container *ngIf=\\\"!!componentName\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: componentData }\\\"></ng-template>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"!componentName && contentTempl\\\">\\n    <ng-container *ngTemplateOutlet=\\\"contentTempl\\\"></ng-container>\\n  </ng-container>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { componentName: [{\n                type: Input\n            }], componentData: [{\n                type: Input\n            }], contentTempl: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(SurveyModel.TemplateRendererComponentName, TemplateRendererComponent);\n\nclass CustomWidgetComponent {\n    get hasDefaultRender() {\n        return this.model.customWidget.isDefaultRender || this.hasAngularComponent;\n    }\n    get hasHtml() {\n        return this.model.customWidget.htmlTemplate ? true : false;\n    }\n    get customHtml() {\n        return this.model.customWidget.htmlTemplate;\n    }\n    get hasAngularComponent() {\n        return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);\n    }\n    get componentName() {\n        if (this.hasAngularComponent)\n            return this.model.customWidget.name;\n        return this.model.getTemplate() + \"-question\";\n    }\n    ngAfterViewInit() {\n        this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n    }\n    ngOnChanges(simpleChanges) {\n        if (simpleChanges[\"model\"].previousValue !== undefined && simpleChanges[\"model\"].currentValue !== undefined) {\n            this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        this.model.customWidget.willUnmount(this.model, this.container.nativeElement);\n    }\n}\nCustomWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCustomWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CustomWidgetComponent, selector: \"sv-ng-custom-widget\", inputs: { css: \"css\", model: \"model\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"content\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div #content>\\n  <div *ngIf=\\\"hasHtml\\\" [innerHTML]=\\\"customHtml | safeHtml\\\"></div>\\n  <ng-container *ngIf=\\\"hasDefaultRender\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: { model: model, css: css } }\\\"></ng-template>  \\n  </ng-container>\\n</div>\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }], pipes: { \"safeHtml\": SafeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomWidgetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-custom-widget\", template: \"<div #content>\\n  <div *ngIf=\\\"hasHtml\\\" [innerHTML]=\\\"customHtml | safeHtml\\\"></div>\\n  <ng-container *ngIf=\\\"hasDefaultRender\\\">\\n    <ng-template [component]=\\\"{ name: componentName, data: { model: model, css: css } }\\\"></ng-template>  \\n  </ng-container>\\n</div>\" }]\n        }], propDecorators: { css: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], container: [{\n                type: ViewChild,\n                args: [\"content\"]\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"survey-customwidget\", CustomWidgetComponent);\n\nclass MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {\n    get question() {\n        return this.model.data.question;\n    }\n}\nMatrixDynamicDragDropIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicDragDropIconComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicDragDropIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixDynamicDragDropIconComponent, selector: \"sv-ng-matrix-drag-drop-icon\", inputs: { model: \"model\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <svg *ngIf=\\\"question.iconDragElement\\\" [class]=\\\"question.cssClasses.dragElementDecorator\\\">\\n    <use [attr.xlink:href]=\\\"question.iconDragElement\\\"></use>\\n  </svg>\\n  <span *ngIf=\\\"!question.iconDragElement\\\" data-bind=\\\"css: question.cssClasses.iconDrag\\\"></span>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicDragDropIconComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-drag-drop-icon\", template: \"<ng-template #template>\\n  <svg *ngIf=\\\"question.iconDragElement\\\" [class]=\\\"question.cssClasses.dragElementDecorator\\\">\\n    <use [attr.xlink:href]=\\\"question.iconDragElement\\\"></use>\\n  </svg>\\n  <span *ngIf=\\\"!question.iconDragElement\\\" data-bind=\\\"css: question.cssClasses.iconDrag\\\"></span>\\n</ng-template>\", styles: [\":host{display:none}\\n\"] }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-drag-drop-icon\", MatrixDynamicDragDropIconComponent);\n\nclass MatrixCellComponent extends BaseAngular {\n    constructor() {\n        super(...arguments);\n        this.isVisible = false;\n    }\n    getModel() {\n        return this.cell.question;\n    }\n    get row() {\n        return this.cell.row;\n    }\n    get panelComponentName() {\n        const panel = this.cell.panel;\n        const survey = panel.survey;\n        if (!!survey) {\n            const name = survey.getElementWrapperComponentName(panel);\n            if (!!name) {\n                return name;\n            }\n        }\n        return \"panel\";\n    }\n    get panelComponentData() {\n        const panel = this.cell.panel;\n        const survey = panel.survey;\n        let data;\n        if (!!survey) {\n            data = survey.getElementWrapperComponentData(panel);\n        }\n        return {\n            componentName: \"panel\",\n            componentData: {\n                model: panel,\n                data: data\n            }\n        };\n    }\n    getComponentName(element) {\n        if (element.customWidget) {\n            return \"survey-customwidget\";\n        }\n        return element.getType() + \"-question\";\n    }\n    getHeaders() {\n        return this.cell.headers;\n    }\n    getCellStyle() {\n        if (!!this.cell.width || !!this.cell.minWidth)\n            return { width: this.cell.width, minWidth: this.cell.minWidth };\n        return null;\n    }\n    ngAfterViewInit() {\n        if (!this.cell.hasQuestion || !this.question || !this.question.survey)\n            return;\n        var options = {\n            cell: this.cell.cell,\n            cellQuestion: this.cell.question,\n            htmlElement: this.cellContainer.nativeElement,\n            row: this.cell.row,\n            column: this.cell.cell.column,\n        };\n        this.question.survey.matrixAfterCellRender(this.question, options);\n    }\n}\nMatrixCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixCellComponent, selector: \"sv-ng-matrix-cell\", inputs: { question: \"question\", cell: \"cell\" }, viewQueries: [{ propertyName: \"cellContainer\", first: true, predicate: [\"cellContainer\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <td [class]=\\\"cell.className\\\" [attr.data-responsive-title]=\\\"getHeaders()\\\" [title]=\\\"cell.getTitle()\\\" [style]=\\\"getCellStyle()\\\" [attr.colspan]=\\\"cell.colSpans\\\" #cellContainer>\\n    <sv-ng-matrix-drag-drop-icon *ngIf=\\\"cell.isDragHandlerCell\\\" [model]=\\\"$any({ data: { row: row, question: question } })\\\"></sv-ng-matrix-drag-drop-icon>\\n    <sv-action-bar *ngIf=\\\"cell.isActionsCell\\\" [model]=\\\"cell.item.getData()\\\" [handleClick]=\\\"false\\\"></sv-action-bar>\\n    <ng-container *ngIf=\\\"cell.hasPanel\\\">\\n      <ng-template [component]=\\\"{ name: panelComponentName, data: panelComponentData }\\\"></ng-template>\\n    </ng-container>\\n    <div *ngIf=\\\"cell.hasQuestion\\\" [class]=\\\"question.cssClasses.cellQuestionWrapper\\\" [visible]=\\\"cell.question.isVisible\\\">\\n      <div *ngIf=\\\"cell.showErrorOnTop && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'top'\\\" sv-ng-errors></div>\\n      <ng-container *ngIf=\\\"!cell.isChoice && cell.question.isDefaultRendering()\\\">\\n          <ng-template [component]=\\\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\\\">\\n            <ng-template  [component]=\\\"{ name: getComponentName(cell.question), data: { model: cell.question } }\\\"></ng-template>\\n          </ng-template>\\n      </ng-container>\\n      <ng-template *ngIf=\\\"!cell.isChoice && !cell.question.isDefaultRendering()\\\" [component]=\\\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\\\">\\n      </ng-template>\\n      <sv-ng-selebase-item\\n        *ngIf=\\\"cell.isItemChoice\\\"\\n        [showLabel]=\\\"false\\\"\\n        [inputType]=\\\"cell.isCheckbox ? 'checkbox': 'radio'\\\"\\n        [question]=\\\"cell.question\\\"\\n        [model]=\\\"cell.item\\\"\\n      ></sv-ng-selebase-item>\\n      <div *ngIf=\\\"cell.isOtherChoice\\\" class=\\\"form-group\\\" [question]=\\\"cell.question\\\" sv-ng-comment></div>\\n      <div *ngIf=\\\"cell.showErrorOnBottom && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'top'\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"cell.question.isErrorsModeTooltip && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n    </div>\\n    <ng-container *ngIf=\\\"cell.hasTitle\\\">\\n      <ng-template [component]=\\\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\\\">\\n        <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n        <span *ngIf=\\\"!!cell.requiredText\\\" [class]=\\\"question.cssClasses.cellRequiredText\\\">{{ cell.requiredText }}</span>  \\n      </ng-template>\\n    </ng-container>\\n</td>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: MatrixDynamicDragDropIconComponent, selector: \"sv-ng-matrix-drag-drop-icon\", inputs: [\"model\"] }, { type: ActionBarComponent, selector: \"sv-action-bar, sv-ng-action-bar\", inputs: [\"model\", \"handleClick\"] }, { type: ErrorsComponent, selector: \"'[sv-ng-errors]'\", inputs: [\"element\", \"location\"] }, { type: SelectBaseItemComponent, selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\", inputs: [\"question\", \"model\", \"inputType\", \"showLabel\"] }, { type: SurveyCommentComponent, selector: \"sv-ng-comment, '[sv-ng-comment]'\", inputs: [\"question\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }, { type: VisibleDirective, selector: \"[visible]\", inputs: [\"visible\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixCellComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-cell\", styles: [\":host { display: none; }\"], template: \"<ng-template #template>\\n  <td [class]=\\\"cell.className\\\" [attr.data-responsive-title]=\\\"getHeaders()\\\" [title]=\\\"cell.getTitle()\\\" [style]=\\\"getCellStyle()\\\" [attr.colspan]=\\\"cell.colSpans\\\" #cellContainer>\\n    <sv-ng-matrix-drag-drop-icon *ngIf=\\\"cell.isDragHandlerCell\\\" [model]=\\\"$any({ data: { row: row, question: question } })\\\"></sv-ng-matrix-drag-drop-icon>\\n    <sv-action-bar *ngIf=\\\"cell.isActionsCell\\\" [model]=\\\"cell.item.getData()\\\" [handleClick]=\\\"false\\\"></sv-action-bar>\\n    <ng-container *ngIf=\\\"cell.hasPanel\\\">\\n      <ng-template [component]=\\\"{ name: panelComponentName, data: panelComponentData }\\\"></ng-template>\\n    </ng-container>\\n    <div *ngIf=\\\"cell.hasQuestion\\\" [class]=\\\"question.cssClasses.cellQuestionWrapper\\\" [visible]=\\\"cell.question.isVisible\\\">\\n      <div *ngIf=\\\"cell.showErrorOnTop && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'top'\\\" sv-ng-errors></div>\\n      <ng-container *ngIf=\\\"!cell.isChoice && cell.question.isDefaultRendering()\\\">\\n          <ng-template [component]=\\\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\\\">\\n            <ng-template  [component]=\\\"{ name: getComponentName(cell.question), data: { model: cell.question } }\\\"></ng-template>\\n          </ng-template>\\n      </ng-container>\\n      <ng-template *ngIf=\\\"!cell.isChoice && !cell.question.isDefaultRendering()\\\" [component]=\\\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\\\">\\n      </ng-template>\\n      <sv-ng-selebase-item\\n        *ngIf=\\\"cell.isItemChoice\\\"\\n        [showLabel]=\\\"false\\\"\\n        [inputType]=\\\"cell.isCheckbox ? 'checkbox': 'radio'\\\"\\n        [question]=\\\"cell.question\\\"\\n        [model]=\\\"cell.item\\\"\\n      ></sv-ng-selebase-item>\\n      <div *ngIf=\\\"cell.isOtherChoice\\\" class=\\\"form-group\\\" [question]=\\\"cell.question\\\" sv-ng-comment></div>\\n      <div *ngIf=\\\"cell.showErrorOnBottom && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'top'\\\" sv-ng-errors></div>\\n      <div *ngIf=\\\"cell.question.isErrorsModeTooltip && cell.question.hasVisibleErrors\\\" [element]=\\\"cell.question\\\" [location]=\\\"'tooltip'\\\" sv-ng-errors></div>\\n    </div>\\n    <ng-container *ngIf=\\\"cell.hasTitle\\\">\\n      <ng-template [component]=\\\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\\\">\\n        <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n        <span *ngIf=\\\"!!cell.requiredText\\\" [class]=\\\"question.cssClasses.cellRequiredText\\\">{{ cell.requiredText }}</span>  \\n      </ng-template>\\n    </ng-container>\\n</td>\\n</ng-template>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], cell: [{\n                type: Input\n            }], cellContainer: [{\n                type: ViewChild,\n                args: [\"cellContainer\"]\n            }] } });\n\nclass MatrixRequiredHeader extends BaseAngular {\n    getModel() {\n        return this.column;\n    }\n}\nMatrixRequiredHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixRequiredHeader, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixRequiredHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixRequiredHeader, selector: \"sv-ng-matrixheaderrequired\", inputs: { column: \"column\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template><span *ngIf='column.isRenderedRequired' [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-template>\", isInline: true, styles: [\":host{display:none}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixRequiredHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-matrixheaderrequired\",\n                    styles: [\":host { display: none; }\"],\n                    template: \"<ng-template #template><span *ngIf='column.isRenderedRequired' [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-template>\"\n                }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\n\nclass MatrixRowComponent extends BaseAngular {\n    getModel() {\n        return this.model;\n    }\n    get row() {\n        return this.model.row;\n    }\n    trackCellBy(_, cell) {\n        return cell.id;\n    }\n}\nMatrixRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixRowComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixRowComponent, selector: \"sv-ng-matrix-row\", inputs: { model: \"model\", question: \"question\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <tr [class]=\\\"model.className\\\" (pointerdown)=\\\"question.onPointerDown($event, row)\\\" [attr.data-sv-drop-target-matrix-row]=\\\"row && row.id\\\">\\n    <sv-ng-matrix-cell\\n      [cell]=\\\"cell\\\"\\n      [question]=\\\"question\\\"\\n      *ngFor=\\\"let cell of model.cells; trackBy: trackCellBy\\\"\\n    ></sv-ng-matrix-cell>\\n  </tr>\\n</ng-template>\", styles: [\":host{display:none}\\n\"], components: [{ type: MatrixCellComponent, selector: \"sv-ng-matrix-cell\", inputs: [\"question\", \"cell\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixRowComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-row\", styles: [\":host { display: none; }\"], template: \"<ng-template #template>\\n  <tr [class]=\\\"model.className\\\" (pointerdown)=\\\"question.onPointerDown($event, row)\\\" [attr.data-sv-drop-target-matrix-row]=\\\"row && row.id\\\">\\n    <sv-ng-matrix-cell\\n      [cell]=\\\"cell\\\"\\n      [question]=\\\"question\\\"\\n      *ngFor=\\\"let cell of model.cells; trackBy: trackCellBy\\\"\\n    ></sv-ng-matrix-cell>\\n  </tr>\\n</ng-template>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], question: [{\n                type: Input\n            }] } });\n\nclass MatrixTableComponent extends BaseAngular {\n    getModel() {\n        return this.table;\n    }\n    trackCellBy(_, cell) {\n        return cell.id;\n    }\n    trackRowBy(index, row) {\n        return row.id;\n    }\n}\nMatrixTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixTableComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: { question: \"question\", table: \"table\" }, usesInheritance: true, ngImport: i0, template: \"<table [class]=\\\"question.getTableCss()\\\">\\n  <thead *ngIf=\\\"table.showHeader\\\">\\n    <tr>\\n      <ng-container\\n        *ngFor=\\\"let cell of table.headerRow.cells; trackBy: trackCellBy\\\"\\n      >\\n            <th *ngIf=\\\"cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\">\\n              <ng-template [component]=\\\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\\\">\\n                <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n                <sv-ng-matrixheaderrequired *ngIf=\\\"!!cell.column\\\" [column]=\\\"cell.column\\\" [question]=\\\"question\\\">\\n                </sv-ng-matrixheaderrequired>\\n              </ng-template>\\n            </th>\\n            \\n            <td *ngIf=\\\"!cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\"></td>\\n      </ng-container>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <ng-container *ngFor=\\\"let row of table.rows; trackBy: trackRowBy\\\">\\n      <sv-ng-matrix-row [model]=\\\"row\\\" [question]=\\\"question\\\"></sv-ng-matrix-row>\\n    </ng-container>\\n  </tbody>\\n  <tfoot *ngIf=\\\"table.showFooter\\\">\\n    <tr>\\n      <sv-ng-matrix-cell [cell]=\\\"cell\\\" [question]=\\\"question\\\" *ngFor=\\\"let cell of table.footerRow.cells; trackBy: trackCellBy\\\">\\n      </sv-ng-matrix-cell>\\n    </tr>\\n  </tfoot>\\n</table>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }, { type: MatrixRequiredHeader, selector: \"sv-ng-matrixheaderrequired\", inputs: [\"column\", \"question\"] }, { type: MatrixRowComponent, selector: \"sv-ng-matrix-row\", inputs: [\"model\", \"question\"] }, { type: MatrixCellComponent, selector: \"sv-ng-matrix-cell\", inputs: [\"question\", \"cell\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-table\", template: \"<table [class]=\\\"question.getTableCss()\\\">\\n  <thead *ngIf=\\\"table.showHeader\\\">\\n    <tr>\\n      <ng-container\\n        *ngFor=\\\"let cell of table.headerRow.cells; trackBy: trackCellBy\\\"\\n      >\\n            <th *ngIf=\\\"cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\">\\n              <ng-template [component]=\\\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\\\">\\n                <sv-ng-string [model]=\\\"cell.locTitle\\\"></sv-ng-string>\\n                <sv-ng-matrixheaderrequired *ngIf=\\\"!!cell.column\\\" [column]=\\\"cell.column\\\" [question]=\\\"question\\\">\\n                </sv-ng-matrixheaderrequired>\\n              </ng-template>\\n            </th>\\n            \\n            <td *ngIf=\\\"!cell.hasTitle\\\" [class]=\\\"cell.className\\\" [style]=\\\"{ minWidth: cell.minWidth, width: cell.width }\\\"></td>\\n      </ng-container>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <ng-container *ngFor=\\\"let row of table.rows; trackBy: trackRowBy\\\">\\n      <sv-ng-matrix-row [model]=\\\"row\\\" [question]=\\\"question\\\"></sv-ng-matrix-row>\\n    </ng-container>\\n  </tbody>\\n  <tfoot *ngIf=\\\"table.showFooter\\\">\\n    <tr>\\n      <sv-ng-matrix-cell [cell]=\\\"cell\\\" [question]=\\\"question\\\" *ngFor=\\\"let cell of table.footerRow.cells; trackBy: trackCellBy\\\">\\n      </sv-ng-matrix-cell>\\n    </tr>\\n  </tfoot>\\n</table>\" }]\n        }], propDecorators: { question: [{\n                type: Input\n            }], table: [{\n                type: Input\n            }] } });\n\nclass MatrixDropdownComponent extends QuestionAngular {\n}\nMatrixDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixDropdownComponent, selector: \"sv-ng-matrixdropdown-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [style]=\\\"{ overflowX: model.showHorizontalScroll ? 'scroll' : '' }\\\" #contentElement>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n  </div>\\n</ng-template>\", components: [{ type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: [\"question\", \"table\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrixdropdown-question\", template: \"<ng-template #template>\\n  <div [style]=\\\"{ overflowX: model.showHorizontalScroll ? 'scroll' : '' }\\\" #contentElement>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n  </div>\\n</ng-template>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrixdropdown-question\", MatrixDropdownComponent);\n\nclass MatrixDynamicComponent extends QuestionAngular {\n}\nMatrixDynamicComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixDynamicComponent, selector: \"sv-ng-matrixdynamic-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template #template>\\n  <div [style]=\\\"{ overflowX: model.showHorizontalScroll ? 'scroll' : '' }\\\" #contentElement>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnTop\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n    <div *ngIf=\\\"!model.renderedTable.showTable\\\" [class]=\\\"model.cssClasses.emptyRowsSection\\\">\\n      <div [class]=\\\"model.cssClasses.emptyRowsText\\\" [model]=\\\"model.locEmptyRowsText\\\" sv-ng-string></div>\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnBottom\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n  </div>\\n  <ng-template #addRowButton>\\n    <button type=\\\"button\\\" [class]=\\\"model.getAddRowButtonCss(true)\\\" (click)=\\\"model.addRowUI()\\\">\\n        <sv-ng-string [model]=\\\"model.locAddRowText\\\" ></sv-ng-string>\\n        <span [class]=\\\"model.cssClasses.iconAdd\\\"></span>\\n    </button>\\n  </ng-template>\\n</ng-template>\", components: [{ type: MatrixTableComponent, selector: \"sv-ng-matrix-table\", inputs: [\"question\", \"table\"] }, { type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrixdynamic-question\", template: \"<ng-template #template>\\n  <div [style]=\\\"{ overflowX: model.showHorizontalScroll ? 'scroll' : '' }\\\" #contentElement>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnTop\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n    <sv-ng-matrix-table *ngIf=\\\"model.renderedTable?.showTable\\\" [question]=\\\"model\\\" [table]=\\\"model.renderedTable\\\"></sv-ng-matrix-table>\\n    <div *ngIf=\\\"!model.renderedTable.showTable\\\" [class]=\\\"model.cssClasses.emptyRowsSection\\\">\\n      <div [class]=\\\"model.cssClasses.emptyRowsText\\\" [model]=\\\"model.locEmptyRowsText\\\" sv-ng-string></div>\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n    <div *ngIf=\\\"model.renderedTable.showAddRowOnBottom\\\" [class]=\\\"model.cssClasses.footer\\\">\\n      <ng-container *ngTemplateOutlet=\\\"addRowButton\\\"></ng-container>\\n    </div>\\n  </div>\\n  <ng-template #addRowButton>\\n    <button type=\\\"button\\\" [class]=\\\"model.getAddRowButtonCss(true)\\\" (click)=\\\"model.addRowUI()\\\">\\n        <sv-ng-string [model]=\\\"model.locAddRowText\\\" ></sv-ng-string>\\n        <span [class]=\\\"model.cssClasses.iconAdd\\\"></span>\\n    </button>\\n  </ng-template>\\n</ng-template>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"matrixdynamic-question\", MatrixDynamicComponent);\n\nclass MatrixDynamicRemoveButtonComponent {\n    get question() {\n        return this.model.data.question;\n    }\n    get row() {\n        return this.model.data.row;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nMatrixDynamicRemoveButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatrixDynamicRemoveButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixDynamicRemoveButtonComponent, selector: \"sv-ng-matrix-remove-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<button type=\\\"button\\\" [class]=\\\"question.getRemoveRowButtonCss()\\\" [disabled]=\\\"question.isInputReadOnly\\\" (click)=\\\"question.removeRowUI(row)\\\">\\n  <sv-ng-string [model]=\\\"question.locRemoveRowText\\\" ></sv-ng-string>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\", components: [{ type: SurveyStringComponent, selector: \"sv-ng-string, '[sv-ng-string]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-remove-btn\", template: \"<button type=\\\"button\\\" [class]=\\\"question.getRemoveRowButtonCss()\\\" [disabled]=\\\"question.isInputReadOnly\\\" (click)=\\\"question.removeRowUI(row)\\\">\\n  <sv-ng-string [model]=\\\"question.locRemoveRowText\\\" ></sv-ng-string>\\n  <span [class]=\\\"question.cssClasses.iconRemove\\\"></span>\\n</button>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-remove-button\", MatrixDynamicRemoveButtonComponent);\n\nclass MatrixDetailButtonComponent {\n    get question() {\n        return this.model.data.question;\n    }\n    get row() {\n        return this.model.data.row;\n    }\n    getModel() {\n        return this.model;\n    }\n}\nMatrixDetailButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDetailButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatrixDetailButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: MatrixDetailButtonComponent, selector: \"sv-ng-matrix-detail-btn\", inputs: { model: \"model\" }, ngImport: i0, template: \"<button type=\\\"button\\\" [class]=\\\"question.getDetailPanelButtonCss(row)\\\" (click)=\\\"row.showHideDetailPanelClick()\\\"\\n  [attr.aria-expanded]=\\\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\\\"\\n  [attr.aria-controls]=\\\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\\\">\\n  <svg [class]=\\\"this.question.getDetailPanelIconCss(this.row)\\\" \\n    [iconName]=\\\"this.question.getDetailPanelIconId(this.row)\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon>\\n  </svg>\\n</button>\", components: [{ type: SvgIconComponent, selector: \"'[sv-ng-svg-icon]'\", inputs: [\"size\", \"width\", \"height\", \"iconName\", \"partCss\", \"css\", \"title\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: MatrixDetailButtonComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-matrix-detail-btn\", template: \"<button type=\\\"button\\\" [class]=\\\"question.getDetailPanelButtonCss(row)\\\" (click)=\\\"row.showHideDetailPanelClick()\\\"\\n  [attr.aria-expanded]=\\\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\\\"\\n  [attr.aria-controls]=\\\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\\\">\\n  <svg [class]=\\\"this.question.getDetailPanelIconCss(this.row)\\\" \\n    [iconName]=\\\"this.question.getDetailPanelIconId(this.row)\\\" [size]=\\\"'auto'\\\" sv-ng-svg-icon>\\n  </svg>\\n</button>\" }]\n        }], propDecorators: { model: [{\n                type: Input\n            }] } });\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-detail-button\", MatrixDetailButtonComponent);\n\nclass ExpressionComponent extends QuestionAngular {\n}\nExpressionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ExpressionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nExpressionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ExpressionComponent, selector: \"sv-ng-expression\", usesInheritance: true, ngImport: i0, template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\", isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ExpressionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-expression\",\n                    template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"expression-question\", ExpressionComponent);\n\nclass ImageQuestionComponent extends QuestionAngular {\n    ngAfterViewInit() {\n        this.model.locImageLink.onChanged = () => {\n            this.detectChanges();\n        };\n        super.ngAfterViewInit();\n    }\n    ngOnDestroy() {\n        this.model.locImageLink.onChanged = () => { };\n        super.ngOnDestroy();\n    }\n}\nImageQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImageQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nImageQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: ImageQuestionComponent, selector: \"sv-ng-image-question\", usesInheritance: true, ngImport: i0, template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <img\\n    *ngIf=\\\"model.renderedMode === 'image'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.alt]=\\\"model.altText || model.title\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  /><video\\n    controls\\n    *ngIf=\\\"model.renderedMode === 'video'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  ></video>\\n  <iframe\\n    *ngIf=\\\"model.renderedMode === 'youtube'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml | safeResourceUrl\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  ></iframe>\\n</div>\", directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"safeResourceUrl\": SafeResourceUrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ImageQuestionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"sv-ng-image-question\", template: \"<div [class]=\\\"model.cssClasses.root\\\" #contentElement>\\n  <img\\n    *ngIf=\\\"model.renderedMode === 'image'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.alt]=\\\"model.altText || model.title\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  /><video\\n    controls\\n    *ngIf=\\\"model.renderedMode === 'video'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  ></video>\\n  <iframe\\n    *ngIf=\\\"model.renderedMode === 'youtube'\\\"\\n    [class]=\\\"model.getImageCss()\\\"\\n    [attr.src]=\\\"model.locImageLink.renderedHtml | safeResourceUrl\\\"\\n    [attr.width]=\\\"model.renderedWidth\\\"\\n    [attr.height]=\\\"model.renderedHeight\\\"\\n    [style]=\\\"{ objectFit: model.imageFit }\\\"\\n  ></iframe>\\n</div>\" }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"image-question\", ImageQuestionComponent);\n\nclass CustomQuestionComponent extends QuestionAngular {\n    get contentQuestion() {\n        return this.model.contentQuestion;\n    }\n    getComponentName(element) {\n        if (element.customWidget) {\n            return \"survey-customwidget\";\n        }\n        return element.getTemplate() + \"-question\";\n    }\n}\nCustomQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCustomQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CustomQuestionComponent, selector: \"sv-ng-custom-question\", usesInheritance: true, ngImport: i0, template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\", isInline: true, directives: [{ type: DynamicComponentDirective, selector: \"[component]\", inputs: [\"component\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CustomQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-custom-question\",\n                    template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"custom-question\", CustomQuestionComponent);\n\nclass CompositeQuestionComponent extends QuestionAngular {\n    get contentPanel() {\n        return this.model.contentPanel;\n    }\n}\nCompositeQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CompositeQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nCompositeQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: CompositeQuestionComponent, selector: \"sv-ng-composite-question\", usesInheritance: true, ngImport: i0, template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\", isInline: true, components: [{ type: PanelComponent, selector: \"sv-ng-panel, '[sv-ng-panel]'\", inputs: [\"model\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CompositeQuestionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"sv-ng-composite-question\",\n                    template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\"\n                }]\n        }] });\nAngularComponentFactory.Instance.registerComponent(\"composite-question\", CompositeQuestionComponent);\n\nclass SurveyModule {\n}\nSurveyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSurveyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyModule, declarations: [VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n        ListComponent, ListItemComponent,\n        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n        RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent,\n        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent], imports: [CommonModule, FormsModule], exports: [VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n        ListComponent, ListItemComponent,\n        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n        RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent] });\nSurveyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyModule, providers: [PopupService], imports: [[\n            CommonModule, FormsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: SurveyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n                        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n                        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n                        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n                        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n                        ListComponent, ListItemComponent,\n                        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n                        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n                        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n                        RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n                        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n                        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n                        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent,\n                        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent\n                    ],\n                    imports: [\n                        CommonModule, FormsModule\n                    ],\n                    exports: [\n                        VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n                        SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n                        QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n                        DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n                        PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n                        ListComponent, ListItemComponent,\n                        TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n                        ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n                        SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n                        RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n                        SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n                        MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n                        MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n                        CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent\n                    ],\n                    providers: [PopupService],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionBarComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, ActionComponent, AngularComponentFactory, BaseAngular, BooleanCheckboxComponent, BooleanQuestionComponent, BooleanRadioComponent, BooleanRadioItemComponent, BrandInfoComponent, ButtonGroupQuestionComponent, CheckboxComponent, CheckboxItemComponent, CommentQuestionComponent, CompositeQuestionComponent, CustomQuestionComponent, CustomWidgetComponent, DropdownComponent, DropdownOptionItemComponent, DropdownQuestionComponent, DropdownSelectComponent, DynamicComponentDirective, DynamicHeadComponent, ElementComponent, ElementHeaderComponent, ElementTitleComponent, EmbeddedViewContentComponent, ErrorsComponent, ExpressionComponent, FileQuestionComponent, HtmlQuestionComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent, Key2ClickDirective, ListComponent, ListItemComponent, LogoImageComponent, MatrixCellComponent, MatrixDetailButtonComponent, MatrixDropdownComponent, MatrixDynamicComponent, MatrixDynamicDragDropIconComponent, MatrixDynamicRemoveButtonComponent, MatrixQuestionComponent, MatrixRequiredHeader, MatrixTableComponent, ModalComponent, MultipleTextComponent, MultipleTextItemComponent, PageComponent, PanelComponent, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, PanelDynamicQuestionComponent, PaneldynamicAction, PaneldynamicRemoveButtonComponent, PopupBaseContainerComponent, PopupComponent, PopupPointerComponent, PopupService, PopupSurveyComponent, ProgressButtonsComponent, ProgressDefaultComponent, QuestionAngular, QuestionComponent, QuestionSkeletonComponent, RadiogroupComponent, RadiogroupItemComponent, RankingItemComponent, RankingQuestionComponent, RatingDropdownComponent, RatingQuestionComponent, RowComponent, SafeHtmlPipe, SafeResourceUrlPipe, SafeUrlPipe, SelectBaseComponent, SelectBaseItemComponent, SignaturePadQuestionComponent, SkeletonComponent, StringEditorComponent, StringViewerComponent, SurveyCommentComponent, SurveyComponent, SurveyContentComponent, SurveyHeaderComponent, SurveyModule, SurveyNavigationButton, SurveyStringComponent, SvgIconComponent, TagboxComponent, TagboxFilterComponent, TagboxItemComponent, TagboxQuestionComponent, TemplateRendererComponent, TextQuestionComponent, TimerPanelComponent, VisibleDirective };\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    generateNewQuestion,\n    Question,\n    QuestionComponent,\n} from '@placeos/survey-suite';\n\n@Component({\n    selector: 'mod-question-overlay',\n    styles: [],\n    template: `\n        <header class=\"flex items-center justify-between px-2 w-full\">\n            <h2 class=\"px-2\">{{ isEdit ? 'Update' : 'Add' }} Question</h2>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main mat-dialog-content class=\"min-w-[40rem] overflow-x-hidden\">\n            <section>\n                <placeos-question\n                    #questionElement\n                    [value]=\"question\"\n                ></placeos-question>\n            </section>\n        </main>\n        <div\n            class=\"flex flex-row justify-end space-x-2 px-4 py-2\"\n            mat-dialog-actions\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!questionElement.valid\"\n                (click)=\"done()\"\n            >\n                {{ isEdit ? 'Update' : 'Add to bank' }}\n            </button>\n        </div>\n    `,\n})\nexport class ModQuestionOverlayComponent implements OnInit {\n    @ViewChild('questionElement') questionElement: QuestionComponent;\n\n    isEdit: boolean = false;\n    question: Question;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: Question,\n        private _dialog_ref: MatDialogRef<ModQuestionOverlayComponent>\n    ) {\n        this.isEdit = !!(this._data?.id > 0);\n        this.question = this._data || generateNewQuestion();\n    }\n\n    ngOnInit(): void {}\n\n    public done() {\n        this._dialog_ref.close(this.question);\n    }\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    Question,\n    translateToQuestion,\n    translateToSurveyQuestion,\n} from '@placeos/survey-suite';\nimport {\n    addQuestion,\n    queryQuestions,\n    removeQuestion,\n    SurveyQuestion,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, filter, finalize, first, map, tap } from 'rxjs/operators';\nimport { ModQuestionOverlayComponent } from '../overlays/mod-question-overlay.component';\n\nexport interface QuestionFilter {\n    search: string;\n    type: string;\n}\n\n@Injectable()\nexport class QuestionBankService extends AsyncHandler {\n    private readonly _questions = new BehaviorSubject<Question[]>([]);\n    readonly questions$ = this._questions.asObservable();\n    private get questions() {\n        return this._questions.getValue();\n    }\n    private set questions(value: Question[]) {\n        this._questions.next(value);\n    }\n\n    private readonly _withdrawnQuestions = new BehaviorSubject<Question[]>([]);\n    public readonly withdrawnQuestions$ =\n        this._withdrawnQuestions.asObservable();\n    private set withdrawnQuestions(value: Question[]) {\n        this._withdrawnQuestions.next(value);\n    }\n    private get withdrawnQuestions() {\n        return this._withdrawnQuestions.getValue();\n    }\n\n    private readonly _loading = new BehaviorSubject<string>('');\n    readonly loading$ = this._loading.asObservable();\n    private get loading() {\n        return this._loading.getValue();\n    }\n    private set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _filter = new BehaviorSubject<QuestionFilter>({\n        search: '',\n        type: '',\n    });\n    readonly filter$ = this._filter.asObservable();\n\n    public filteredQuestions$ = combineLatest([\n        this.questions$,\n        this.withdrawnQuestions$,\n        this.filter$,\n    ]).pipe(\n        map(([questions, active, filter]) => {\n            if (!questions) return [];\n            const activeIds = active.map((e) => e.id);\n            const { search, type } = filter;\n            return questions\n                .filter((e) => !activeIds.includes(e.id))\n                .filter((e) => (type?.length ? e.type === type : true))\n                .filter((e) => e.title.includes(search));\n        }),\n        tap((q) => (this.filteredQuestion = q))\n    );\n    private filteredQuestion = [];\n\n    constructor(private _dialog: MatDialog) {\n        super();\n        this.loadQuestions();\n    }\n\n    public setFilter(filter: Partial<QuestionFilter>) {\n        this._filter.next({\n            ...this._filter.getValue(),\n            ...filter,\n        });\n    }\n\n    public getQuestion(index: number) {\n        return this.filteredQuestion[index];\n    }\n\n    public withdrawFilteredQuestion(index: number) {\n        const q = this.filteredQuestion[index];\n        this.withdrawnQuestions = [...this.withdrawnQuestions, q];\n        return q;\n    }\n\n    public setWithdrawnQuestions(list: Question[]) {\n        this.withdrawnQuestions = [...list];\n    }\n\n    public depositQuestions(list: Question[]) {\n        let withdrawn = [...this.withdrawnQuestions];\n        list.forEach((q) => {\n            const idx = withdrawn.findIndex((e) => e.id === q.id);\n            if (idx > -1) withdrawn.splice(idx, 1);\n        });\n        this.withdrawnQuestions = withdrawn;\n    }\n\n    public onDrop(event: CdkDragDrop<Question[]>) {\n        const { container, previousContainer, previousIndex, currentIndex } =\n            event;\n        if (container !== previousContainer) {\n            //Dropped from survey\n            const q = previousContainer.data.splice(previousIndex, 1);\n            this.depositQuestions(q);\n        }\n    }\n\n    public async confirmDeleteQuestion(q: Question) {\n        if (!q) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete question',\n                content: `Are you sure you want to delete this question? \\n \n                            <pre>'${q.title}'</pre> \\n\n                            Note: This action is irreversible.`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        this.deleteQuestion(q);\n    }\n\n    public modQuestionOverlay(question?: Question) {\n        const ref = this._dialog.open(ModQuestionOverlayComponent, {\n            data: question,\n        });\n\n        this.subscription(\n            'mod dialog',\n            ref\n                .afterClosed()\n                .pipe(filter((result) => !!result))\n                .subscribe((result) => {\n                    this.saveQuestion(result);\n                })\n        );\n    }\n\n    private async deleteQuestion(question: Question) {\n        this.loading = 'Deleting question from bank...';\n        const res = await removeQuestion(`${question.id}`)\n            .pipe(\n                first(),\n                tap(() => this.removeQuestionFromStore(question)),\n                catchError((err) =>\n                    this.handleError('Error deleting question', null)\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n    }\n\n    private async loadQuestions() {\n        this.loading = 'Loading questions';\n        const q = (await queryQuestions()\n            .pipe(\n                first(),\n                map(\n                    (res: SurveyQuestion[]) =>\n                        res?.map((e) => translateToQuestion(e)) || []\n                ),\n                catchError((err) =>\n                    this.handleError('Error loading questions', [])\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise()) as Question[];\n        this.questions = q;\n    }\n\n    private async saveQuestion(question: Question) {\n        this.loading = 'Saving question to bank...';\n        const res: Question = (await addQuestion(\n            translateToSurveyQuestion(question)\n        )\n            .pipe(\n                first(),\n                map((res) => translateToQuestion(res)),\n                catchError((err) =>\n                    this.handleError('Error adding question', null)\n                ),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise()) as Question;\n        if (res) {\n            notifySuccess('Successfully added question to bank');\n            this.addQuestionToStore(res);\n        }\n    }\n\n    private handleError(msg: string, defaultReturn: any) {\n        notifyError(msg);\n        return defaultReturn;\n    }\n\n    private removeQuestionFromStore(q: Question) {\n        let qs = [...this.questions];\n        let idx = qs.findIndex((e) => e.id === q.id);\n        if (idx > -1) qs.splice(idx, 1);\n        this.questions = qs;\n    }\n\n    private addQuestionToStore(q: Question) {\n        let qs = [...this.questions];\n        qs.push(q);\n        this.questions = qs;\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'search-input',\n    styles: [],\n    template: `\n        <mat-form-field\n            appearance=\"outline\"\n            subscriptSizing=\"dynamic\"\n            class=\"w-full {{ classNames ? classNames : '' }} \"\n        >\n            <mat-icon matPrefix class=\"-ml-3 mr-1\">search</mat-icon>\n            <input\n                matInput\n                #searchInput\n                autocomplete=\"off\"\n                type=\"text\"\n                [placeholder]=\"placeholder\"\n                [(ngModel)]=\"search\"\n            />\n            <button\n                *ngIf=\"searchInput.value?.length\"\n                class=\"sm text-xs\"\n                matSuffix\n                icon\n                matRipple\n                aria-label=\"Clear\"\n                (click)=\"clearSearch()\"\n            >\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-form-field>\n    `,\n})\nexport class SearchInputComponent\n    extends AsyncHandler\n    implements AfterViewInit\n{\n    @Input() placeholder: string = '';\n    @Input() classNames: string = '';\n    @Input() search: string = '';\n    @Output() onSearch: EventEmitter<string> = new EventEmitter<string>();\n    @ViewChild('searchInput', { static: true }) input: ElementRef;\n\n    search$: Observable<string>;\n\n    constructor() {\n        super();\n    }\n\n    clearSearch() {\n        this.input.nativeElement.value = '';\n        this.onSearch.emit('');\n    }\n\n    ngAfterViewInit() {\n        this.search$ = fromEvent<any>(this.input.nativeElement, 'keyup').pipe(\n            map((event) => event.target.value),\n            debounceTime(500),\n            distinctUntilChanged()\n        );\n        this.subscription(\n            'search-input',\n            this.search$.subscribe((value) => this.onSearch.emit(value))\n        );\n    }\n}\n","<div class=\"flex flex-col w-full h-full bg-gray-100 border-l relative\">\n    <div\n        *ngIf=\"(loading$ | async).length\"\n        class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\"\n    >\n        <div class=\"flex flex-col m-auto items-center\">\n            <mat-spinner [diameter]=\"32\"></mat-spinner>\n            <span>{{ loading$ | async }}</span>\n        </div>\n    </div>\n    <header class=\"flex items-center pt-2 px-4 w-full\">\n        <span>Question Bank</span>\n        <div class=\"ml-auto\">\n            <button icon matRipple (click)=\"onAddQuestion()\">\n                <mat-icon>add_circle_outline</mat-icon>\n            </button>\n        </div>\n    </header>\n    <div class=\"flex w-full pb-3 px-4 border-b space-x-2\">\n        <search-input\n            class=\"flex-1\"\n            (onSearch)=\"setFilter({ search: $event })\"\n        ></search-input>\n        <mat-form-field\n            class=\"w-44\"\n            appearance=\"outline\"\n            subscriptSizing=\"dynamic\"\n        >\n            <mat-select\n                [value]=\"(filters$ | async)?.type || ''\"\n                (selectionChange)=\"setFilter({ type: $event.value })\"\n            >\n                <mat-option value=\"\">All types</mat-option>\n                <mat-option\n                    *ngFor=\"let item of typeOptions\"\n                    [value]=\"item.value\"\n                >\n                    {{ item.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div\n        cdkDropList\n        [cdkDropListData]=\"questions$ | async\"\n        (cdkDropListDropped)=\"onDrop($event)\"\n        class=\"flex flex-col min-h-0 h-full w-full space-y-3 p-4 overflow-y-auto\"\n    >\n        <div\n            cdkDrag\n            *ngFor=\"let q of questions$ | async\"\n            class=\"bg-white border flex w-full pr-2 space-x-3\"\n        >\n            <div\n                cdkDragHandle\n                class=\"flex flex-col justify-center h-full hover:cursor-move p-1 bg-gray-200\"\n            >\n                <mat-icon>drag_indicator</mat-icon>\n            </div>\n            <div class=\"flex flex-col w-full py-3\">\n                <span>{{ q.title }}</span>\n                <span class=\"text-sm text-gray-600\">{{ typeMap[q.type] }}</span>\n            </div>\n            <button icon matRipple color=\"warn\" title=\"Delete question\" (click)=\"onDeleteQuestion(q)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n            <button icon matRipple (click)=\"onAddQuestion(q)\" title=\"Duplicate question\">\n                <mat-icon>content_copy</mat-icon>\n            </button>\n        </div>\n        <div *ngIf=\"(questions$ | async)?.length > 0; else noQuestions\"></div>\n    </div>\n</div>\n<ng-template #noQuestions>\n    <div class=\"flex flex-col items-center h-20 m-auto text-gray-600\">\n        <span>No questions found</span>\n        <span>Click <i>Add</i> to add some questions.</span>\n    </div>\n</ng-template>\n","import { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport { Component } from \"@angular/core\";\nimport { Question, QuestionTypeEnumMap, QuestionTypeOptions } from \"@placeos/survey-suite\";\nimport { shareReplay } from \"rxjs/operators\";\nimport { QuestionBankService, QuestionFilter } from \"../../services/question-bank.service\";\n\n@Component({\n    selector: 'question-bank',\n    styles: [`\n        :host{\n            height: 100%;\n        }\n    `],\n    templateUrl: './question-bank.component.html'\n})\nexport class QuestionBankComponent {\n\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n    questions$ = this.service.filteredQuestions$.pipe(shareReplay(1));\n    filters$ = this.service.filter$.pipe(shareReplay(1));\n    onDrop = (event: CdkDragDrop<Question[]>) => this.service.onDrop(event);\n    onAddQuestion = (q?:Question) => this.service.modQuestionOverlay(q ? {...q, id:0} : null);\n    onDeleteQuestion = (q:Question) => this.service.confirmDeleteQuestion(q);\n    setFilter = (filter: Partial<QuestionFilter>) => this.service.setFilter(filter);\n    \n    public typeOptions = QuestionTypeOptions;\n    public typeMap = QuestionTypeEnumMap;\n\n    constructor(\n        private service: QuestionBankService\n    ){\n    }\n\n}","import { CdkDragDrop } from \"@angular/cdk/drag-drop\";\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { openConfirmModal } from \"@placeos/common\";\nimport { Question, UISurveyObj, UISurveyPage } from \"@placeos/survey-suite\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Model } from \"survey-core\";\nimport { QuestionBankService } from \"./question-bank.service\";\n\n\n\n@Injectable()\nexport class SurveyBuilderService{\n\n    public selectedPageIndex: number = 0;\n    protected survey:UISurveyObj;\n    protected surveyModel:Model;\n\n    constructor(\n        private bank: QuestionBankService,\n        private _dialog: MatDialog){\n    }\n\n    public get selectedPage(){\n        return this.survey?.pages[this.selectedPageIndex];\n    }\n\n    public setUISurvey(survey: UISurveyObj){\n        if(!survey) return;\n        this.survey = survey;\n        const { pages } = survey;\n        if(pages?.length > 0){\n            let questions = [];\n            pages.forEach(p => {\n                questions = [...questions, ...(p.elements || [])]\n            });\n            if(questions.length > 0) this.bank.setWithdrawnQuestions(questions);\n        }\n    }\n\n    public getUISurvey(){ return this.survey; }\n\n    public addSurveyPage(){\n        if(!this.survey) return;\n        let pages = this.survey.pages || [];\n        pages.push({\n            title:'',\n            elements:[]\n        });\n        this.survey.pages = pages;\n        this.selectedPageIndex = (pages.length - 1);\n    }\n\n    public async confirmDeletePage(index: number) {\n        if (index < 1) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete page',\n                content: `Are you sure you want to delete this page?`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        this.removeSurveyPage(index);\n    }\n\n    public removeQuestionFromSurvey(index:number){\n        const q = this.selectedPage.elements.splice(index,1);\n        this.bank.depositQuestions(q);\n    }\n\n    public onDropQuestionToSurvey(event: CdkDragDrop<Question[]>, p:UISurveyPage){\n        if(!p) return;\n        const { previousIndex, previousContainer, currentIndex, container } = event;\n        if(container !== previousContainer){\n            //Dropped from question bank\n            const q = this.bank.withdrawFilteredQuestion(previousIndex);\n            p.elements.splice(currentIndex,0,q);\n        }else{\n            //Reorder Question\n            const q = p.elements.splice(previousIndex,1);\n            p.elements.splice(currentIndex,0,q[0]);\n        }\n    }\n\n    public onPreview(){\n        this.surveyModel = new Model(this.survey);\n    }\n\n\n    private removeSurveyPage(index:number){\n        if(index === 0) return;\n        let pages = this.survey.pages || [];\n\n        /** Check if removed page has any questions and deposit them to bank */\n        const target = pages[index];\n        if(target?.elements?.length) this.bank.depositQuestions(target.elements);\n\n        pages.splice(index,1);\n        this.survey.pages = pages;\n        this.selectedPageIndex = 0;\n    }\n}","<div\n    *ngIf=\"survey\"\n    cdkDropListGroup\n    class=\"flex flex-col h-full w-full bg-white dark:bg-neutral-600 overflow-y-auto\"\n>\n    <div class=\"flex flex-row items-center w-full space-x-4 px-4 pt-4 pb-2\">\n        <div class=\"flex flex-col w-1/2\">\n            <label for=\"title\">Title</label>\n            <mat-form-field\n                name=\"title\"\n                appearance=\"outline\"\n                subscriptSizing=\"dynamic\"\n            >\n                <input\n                    class=\"text-xl\"\n                    matInput\n                    required\n                    placeholder=\"Title...\"\n                    [(ngModel)]=\"survey.title\"\n                />\n            </mat-form-field>\n        </div>\n        <div class=\"flex flex-col w-1/2\">\n            <label for=\"desc\">Description</label>\n            <mat-form-field\n                name=\"desc\"\n                appearance=\"outline\"\n                subscriptSizing=\"dynamic\"\n            >\n                <input\n                    matInput\n                    placeholder=\"Description...\"\n                    [(ngModel)]=\"survey.description\"\n                />\n            </mat-form-field>\n        </div>\n    </div>\n\n    <nav class=\"flex bg-gray-200\" mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n        <a\n            mat-tab-link\n            (click)=\"switchView('design')\"\n            [active]=\"view === 'design'\"\n        >\n            Questions\n        </a>\n\n        <a\n            mat-tab-link\n            (click)=\"switchView('preview')\"\n            [active]=\"view === 'preview'\"\n        >\n            Preview\n        </a>\n    </nav>\n    <div\n        mat-tab-nav-panel\n        #tabPanel\n        class=\"flex min-h-0 h-full w-full bg-gray-100\"\n    >\n        <div *ngIf=\"view === 'design'\" class=\"mt-0 flex min-h-0 h-full w-full\">\n            <div\n                class=\"flex flex-col h-full w-4/6 min-w-[43rem] space-y-3 overflow-y-auto\"\n            >\n                <div\n                    class=\"flex flex-row items-center justify-end w-full space-x-2 pr-2\"\n                >\n                    <nav\n                        class=\"max-w-xl\"\n                        mat-tab-nav-bar\n                        [tabPanel]=\"pagePanel\"\n                    >\n                        <a\n                            mat-tab-link\n                            class=\"rounded-b-md border-x\"\n                            *ngFor=\"let p of survey.pages; let k = index\"\n                            (click)=\"selectedPageIndex = k\"\n                            [active]=\"selectedPage === p\"\n                        >\n                            Page {{ k + 1 }}\n                        </a>\n                    </nav>\n                    <button\n                        mat-icon-button\n                        (click)=\"addSurveyPage()\"\n                        title=\"Add new page\"\n                    >\n                        <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col py-2 px-6 pt-0 w-full overflow-x-hidden\"\n                    #pagePanel\n                >\n                    <ng-container *ngIf=\"selectedPage\">\n                        <div\n                            class=\"flex flex-row items-center justify-end space-x-2 w-full mb-4\"\n                        >\n                            <mat-form-field\n                                class=\"flex-1\"\n                                [subscriptSizing]=\"'dynamic'\"\n                                appearance=\"fill\"\n                            >\n                                <input\n                                    matInput\n                                    placeholder=\"Page title...\"\n                                    type=\"text\"\n                                    [(ngModel)]=\"selectedPage.title\"\n                                />\n                            </mat-form-field>\n                            <button\n                                *ngIf=\"selectedPageIndex > 0\"\n                                mat-flat-button\n                                color=\"warn\"\n                                (click)=\"removeSurveyPage(selectedPageIndex)\"\n                            >\n                                Remove page\n                            </button>\n                        </div>\n                        <div\n                            cdkDropList\n                            [cdkDropListData]=\"selectedPage.elements\"\n                            (cdkDropListDropped)=\"onDrop($event, selectedPage)\"\n                            class=\"flex flex-col w-full space-y-3\"\n                        >\n                            <div\n                                cdkDrag\n                                *ngFor=\"\n                                    let q of selectedPage.elements;\n                                    let i = index\n                                \"\n                                class=\"flex flex-row rounded-md items-start w-full bg-gray-200 py-1\"\n                            >\n                                <div class=\"flex flex-col px-2 h-full\">\n                                    <span class=\"text-lg\">{{ i + 1 }}</span>\n                                </div>\n                                <placeos-question\n                                    class=\"flex-1\"\n                                    [preview]=\"true\"\n                                    [value]=\"q\"\n                                >\n                                </placeos-question>\n                                <div\n                                    class=\"flex flex-col items-center h-full py-2\"\n                                >\n                                    <mat-icon\n                                        cdkDragHandle\n                                        class=\"hover:cursor-move\"\n                                        >drag_indicator</mat-icon\n                                    >\n                                    <button\n                                        class=\"mt-auto\"\n                                        mat-icon-button\n                                        (click)=\"onRemove(i)\"\n                                    >\n                                        <mat-icon>delete</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div\n                                *ngIf=\"\n                                    selectedPage?.elements?.length > 0;\n                                    else noQuestion\n                                \"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"flex flex-col w-2/6\">\n                <question-bank class=\"w-full\"></question-bank>\n            </div>\n        </div>\n\n        <div\n            *ngIf=\"view === 'preview'\"\n            class=\"flex flex-col h-full w-full px-6 overflow-y-auto\"\n        >\n            <survey\n                *ngIf=\"service.surveyModel\"\n                [model]=\"service.surveyModel\"\n            ></survey>\n        </div>\n    </div>\n</div>\n\n<ng-template #noQuestion>\n    <div\n        class=\"flex flex-col m-auto h-52 justify-center space-y-2 text-gray-600\"\n    >\n        <img\n            src=\"assets/icons/dragdrop.svg\"\n            class=\"h-12\"\n            alt=\"Icon of drag and drop\"\n        />\n        <span>Drag and drop questions from the question bank here</span>\n    </div>\n</ng-template>\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { generateNewSurvey, Question, UISurveyObj, UISurveyPage } from '@placeos/survey-suite';\nimport { SurveyBuilderService } from '../../services/survey-builder.service';\n\n@Component({\n    selector: 'survey-builder',\n    templateUrl: './survey-builder.component.html',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                min-height: 0;\n            }\n        `,\n    ]\n})\nexport class SurveyBuilderComponent implements OnInit {\n\n    view: 'design' | 'preview' = 'design';\n    onDrop = (event: CdkDragDrop<Question[]>, p: UISurveyPage) =>\n        this.service.onDropQuestionToSurvey(event,p);\n    onRemove = (index: number) => this.service.removeQuestionFromSurvey(index);\n    addSurveyPage = () => this.service.addSurveyPage();\n    removeSurveyPage = (index:number) => this.service.confirmDeletePage(index);\n\n    constructor(public service: SurveyBuilderService) {}\n\n    ngOnInit(): void {\n        this.service.setUISurvey(generateNewSurvey());\n    }\n\n    get selectedPageIndex(){\n        return this.service.selectedPageIndex;\n    }\n\n    set selectedPageIndex(value:number){\n        this.service.selectedPageIndex = value;\n    }\n\n    get selectedPage(){\n        return this.service.selectedPage;\n    }\n    get survey(){\n        return this.service.getUISurvey(); \n    }\n\n    switchView(view: 'design' | 'preview'){\n        this.view = view;\n        if(view === 'preview'){\n            this.service.onPreview();\n        }\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        if (event.index === 1) {\n            this.service.onPreview();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport {\n    generateNewSurvey,\n    Question,\n    translateToQuestion,\n    translateToSurveyPage,\n    translateToUISurveyObj,\n    TriggerEnum,\n    UISurveyObj,\n} from '@placeos/survey-suite';\nimport {\n    queryQuestions,\n    showSurvey,\n    Survey,\n    addSurvey,\n    updateSurvey,\n    removeSurvey\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, finalize, first, map } from 'rxjs/operators';\nimport { SurveyBuilderService } from './survey-builder.service';\n\nexport interface SurveyOptions {\n    zone_id: string;\n    building_id: string;\n    trigger?: TriggerEnum;\n}\n\n@Injectable()\nexport class SurveyService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    public get loading() {\n        return this._loading.getValue();\n    }\n    public set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _options = new BehaviorSubject<SurveyOptions>({\n        zone_id: '',\n        building_id: '',\n        trigger: TriggerEnum.None,\n    });\n    public readonly _options$ = this._options.asObservable();\n\n    constructor(\n        private router: Router,\n        private builder: SurveyBuilderService,\n        private dialog: MatDialog\n    ) {}\n\n    public async loadSurvey(survey_id: string) {\n        if (!survey_id?.length) {\n            this.builder.setUISurvey(generateNewSurvey());\n            return;\n        }\n        const uiSurvey = await this.getSurveyDetails(survey_id);\n        if(!uiSurvey) return;\n        \n        this.builder.setUISurvey(uiSurvey);\n        this.setOptions({\n            zone_id: uiSurvey.zone_id,\n            building_id: uiSurvey.building_id,\n            trigger: uiSurvey.trigger,\n        });\n    }\n\n    public async getSurveyDetails(survey_id: string){\n        this.loading = 'Loading survey...';\n        const results = await Promise.all([\n            this.getSurvey(survey_id),\n            this.getSurveyQuestions(survey_id),\n        ]);\n        this.loading = '';\n        const [survey, questions] = results;\n        if (!survey) return null;\n        return translateToUISurveyObj(survey, questions);\n    }\n\n    public async confirmDeleteSurvey(id:number){\n        const details = await openConfirmModal(\n            {\n                title: 'Confirm delete question',\n                content: `Are you sure you want to delete this survey? \\n\n                            Note: This action is irreversible.`,\n                icon: { class: 'material-icons', content: 'delete' },\n            },\n            this.dialog\n        );\n        if (details.reason !== 'done') return;\n        details.close();\n        await this.deleteSurvey(id);\n    }\n\n    public saveSurvey() {\n        const survey = this.builder.getUISurvey();\n        if (!this.validateSurvey(survey)) return false;\n        const { id, title, description, pages } = survey;\n        const { zone_id, building_id, trigger } = this._options.getValue();\n        let toSave: Survey = {\n            id,\n            title,\n            description,\n            trigger,\n            zone_id: zone_id?.length ? zone_id : building_id,\n            building_id,\n            pages: translateToSurveyPage(pages),\n        };\n\n        if (id > 0) {\n            this.updateSurvey(toSave);\n        } else {\n            this.createSurvey(toSave);\n        }\n    }\n\n    public setOptions(options: Partial<SurveyOptions>) {\n        if (!options) return;\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public back() {\n        const building_id = this._options.getValue()?.building_id || '';\n        if (building_id?.length) {\n            this.router.navigate(['surveys', 'survey-list', building_id]);\n        } else {\n            this.router.navigate(['surveys']);\n        }\n    }\n\n    private getSurvey(id: string): Promise<Survey> {\n        return showSurvey(id)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Error loading survey');\n                    return null;\n                })\n            )\n            .toPromise() as Promise<Survey>;\n    }\n\n    private getSurveyQuestions(survey_id: String) {\n        return queryQuestions()\n            .pipe(\n                first(),\n                map((questions) =>\n                    questions.map((e) => translateToQuestion(e))\n                ),\n                catchError((err) => {\n                    notifyError('Error loading survey questions');\n                    return [];\n                })\n            )\n            .toPromise() as Promise<Question[]>;\n    }\n\n    private validateSurvey(survey:UISurveyObj) {\n        const options = this._options.getValue();\n\n        if(!survey){\n            notifyError('Survey is not valid');\n            return false;\n        }\n\n        if (!survey.title?.length) {\n            notifyError('Please enter a valid title for the survey');\n            return false;\n        }\n\n        if (!options.building_id?.length) {\n            notifyError('Please select a valid building for this survey');\n            return false;\n        }\n        let allQuestions = [];\n        survey.pages.forEach(\n            (p) => (allQuestions = [...allQuestions, ...p.elements])\n        );\n        if (allQuestions.length === 0) {\n            notifyError('Please add at least 1 question to any page');\n            return false;\n        }\n\n        return true;\n    }\n\n    private async deleteSurvey(id:number){\n        this.loading = 'Deleting survey...';\n        const res = await removeSurvey(`${id}`).pipe(\n            first(),\n            finalize(() => this.loading = '')\n        ).toPromise();\n        if(res){\n            notifySuccess('Successfully deleted survey');\n        }\n    }\n\n    private async createSurvey(survey: Survey) {\n        this.loading = 'Adding survey...';\n        const res = await addSurvey(survey)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to create survey');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) {\n            notifySuccess('Survey created successfully');\n            this.back();\n        }\n    }\n\n    private async updateSurvey(survey: Survey) {\n        this.loading = 'Updating survey...';\n        const res = await updateSurvey(`${survey.id}`, survey)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to update survey');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) {\n            notifySuccess('Survey updated successfully');\n            this.back();\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { TriggerOptions } from '@placeos/survey-suite';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { SurveyOptions, SurveyService } from '../services/survey.service';\n\n@Component({\n    selector: 'survey-creator-topbar',\n    styles: [],\n    template: `\n        <div\n            class=\"flex flex-row items-center bg-white dark:bg-neutral-700 h-20 px-4 w-full dark:border-neutral-500\"\n        >\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col pt-2\">\n                    <label>Building</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        [subscriptSizing]=\"'dynamic'\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).building_id\"\n                            (valueChange)=\"onBuildingChange($event)\"\n                        >\n                            <mat-option\n                                *ngFor=\"let b of buildings$ | async\"\n                                [value]=\"b.id\"\n                                >{{ b.display_name || b.name }}</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"flex flex-col pt-2\">\n                    <label>Level</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        [subscriptSizing]=\"'dynamic'\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).zone_id\"\n                            (valueChange)=\"updateOptions({ zone_id: $event })\"\n                        >\n                            <mat-option\n                                [value]=\"(options$ | async).building_id\"\n                            >\n                                All Levels\n                            </mat-option>\n                            <mat-option\n                                *ngFor=\"let level of levels$ | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"flex flex-col pt-2\">\n                    <label>Trigger</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        [subscriptSizing]=\"'dynamic'\"\n                    >\n                        <mat-select\n                            [value]=\"(options$ | async).trigger\"\n                            (valueChange)=\"updateOptions({ trigger: $event })\"\n                        >\n                            <mat-option\n                                *ngFor=\"let op of triggerOptions\"\n                                [value]=\"op.value\"\n                            >\n                                {{ op.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"flex items-center ml-auto space-x-4\">\n                <button btn matRipple class=\"clear\" (click)=\"onCancel()\">\n                    Cancel\n                </button>\n                <button btn matRipple (click)=\"onSave()\">Save</button>\n            </div>\n        </div>\n    `,\n})\nexport class SurveyCreatorTopbarComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    public selected_building = null;\n    public levels = [];\n    public readonly options$ = this._survey._options$.pipe(shareReplay(1));\n    public readonly buildings$ = this._org.building_list;\n    public readonly levels$ = combineLatest([\n        this.options$,\n        this._org.level_list,\n    ]).pipe(\n        map(([options, levels]) => {\n            const { building_id } = options;\n            if (!building_id?.length) return [];\n            return levels.filter((l) => l.parent_id === building_id);\n        })\n    );\n    public readonly triggerOptions = TriggerOptions;\n\n    updateOptions = (op: Partial<SurveyOptions>) => this._survey.setOptions(op);\n    onSave = () => this._survey.saveSurvey();\n    onCancel = () => this._survey.back();\n\n    constructor(\n        private _org: OrganisationService,\n        private _actRoute: ActivatedRoute,\n        private _survey: SurveyService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.subscription(\n            'query_params',\n            this._actRoute.queryParams.subscribe((qparams) => {\n                const id = qparams['building_id'];\n                if (id?.length) this.updateOptions({ building_id: id });\n            })\n        );\n    }\n\n    onBuildingChange(building_id: string) {\n        if (!building_id?.length) return;\n        this.doBuildingChange(building_id);\n    }\n\n    private doBuildingChange(building_id: string) {\n        if (!building_id?.length) return;\n        this.updateOptions({ zone_id: building_id, building_id });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { shareReplay } from 'rxjs/operators';\nimport { SurveyService } from '../services/survey.service';\n\n@Component({\n    selector: 'mod-survey',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n    template: `\n        <sidebar></sidebar>\n\n        <main\n            class=\"flex flex-col h-full w-full bg-white dark:bg-neutral-600 relative\"\n        >\n            <div\n                *ngIf=\"(loading$ | async).length\"\n                class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\"\n            >\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n            <survey-creator-topbar\n                class=\"flex flex-1 items-center\"\n            ></survey-creator-topbar>\n            <survey-builder></survey-builder>\n        </main>\n    `,\n})\nexport class ModSurveyComponent extends AsyncHandler implements OnInit {\n    loading$ = this._survey.loading$.pipe(shareReplay(1));\n\n    constructor(\n        private _survey: SurveyService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'route_param',\n            this._route.queryParams.subscribe((params) => {\n                const id = params?.survey_id || '';\n                this._survey.loadSurvey(id);\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { UISurveyObj } from '@placeos/survey-suite';\nimport { addAnswer, SurveyAnswer } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, finalize, first } from 'rxjs/operators';\nimport { Model } from 'survey-core';\nimport { SurveyService } from './survey.service';\n\n@Injectable()\nexport class RunSurveyService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    public get loading() {\n        return this._loading.getValue();\n    }\n    public set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    surveyModel: Model;\n    uiSurvey: UISurveyObj;\n    constructor(private _survey: SurveyService) {}\n\n    public async loadSurvey(survey_id: string) {\n        this.loading = 'Loading survey...';\n        const uiSurvey = await this._survey.getSurveyDetails(survey_id);\n        this.loading = '';\n        if (!uiSurvey) return;\n        this.uiSurvey = uiSurvey;\n        this.surveyModel = new Model(uiSurvey);\n        this.surveyModel.onComplete.add((sender: Model) => {\n            this.processSurveyAnswer(sender);\n        });\n    }\n\n    private async processSurveyAnswer(survey: Model) {\n        const { id, pages } = this.uiSurvey;\n        const answersMap = survey.data;\n        let answers = [];\n        let questions = [];\n        pages.forEach(\n            (p) => (questions = [...questions, ...(p.elements || [])])\n        );\n        questions.forEach((q) => {\n            if (answersMap[q.id]) {\n                answers.push({\n                    question_id: q.id,\n                    type: q.type,\n                    survey_id: id,\n                    answer_json: answersMap[q.id],\n                });\n            }\n        });\n        this.saveSurveyAnswer(answers);\n    }\n\n    private async saveSurveyAnswer(answers: Partial<SurveyAnswer>[]) {\n        this.loading = 'Saving survey answers...';\n        const res = await addAnswer(answers as any)\n            .pipe(\n                first(),\n                catchError((err) => {\n                    notifyError('Failed to save survey answers');\n                    return of(null);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        if (res) notifySuccess('Survey answers have been recorded');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { RunSurveyService } from '../services/run-survey.service';\n\n@Component({\n    selector: 'run-survey',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n    template: `\n        <main\n            class=\"flex flex-col min-h-0 h-full w-full bg-white relative items-center pb-6 overflow-y-auto\"\n        >\n            <div\n                *ngIf=\"(loading$ | async).length\"\n                class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\"\n            >\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col max-w-[60rem]\">\n                <survey [model]=\"service.surveyModel\"></survey>\n            </div>\n        </main>\n    `,\n    providers: [RunSurveyService],\n})\nexport class RunSurveyComponent extends AsyncHandler implements OnInit {\n    loading$ = this.service.loading$;\n    constructor(\n        private route: ActivatedRoute,\n        public service: RunSurveyService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'route-param',\n            this.route.params.subscribe((params) => {\n                const id = params?.id || '';\n                if (id?.length) {\n                    this.service.loadSurvey(id);\n                }\n            })\n        );\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { notifyError } from \"@placeos/common\";\nimport { Building, OrganisationService } from \"@placeos/organisation\";\nimport { querySurveys, Survey } from \"@placeos/ts-client\";\nimport { BehaviorSubject, combineLatest } from \"rxjs\";\nimport { catchError, finalize, first, map, take, tap } from \"rxjs/operators\";\nimport { SurveyService } from \"./survey.service\";\n\n@Injectable()\nexport class SurveyListingsService{\n\n    building:Building;\n\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    private set loading(value:string){ this._loading.next(value); }\n\n    private readonly _trigger = new BehaviorSubject<number>(0);\n\n    private readonly _surveys = new BehaviorSubject<Survey[]>([]);\n    public readonly surveys$ = this._surveys.asObservable();\n    private set surveys(value:Survey[]){ this._surveys.next(value); }\n\n    private readonly _building_id = new BehaviorSubject<string>('');\n    public readonly building$ = combineLatest([\n        this.org.building_list,\n        this._building_id\n    ]).pipe(\n        map(([buildings, id]) => buildings.find(e => e.id === id))\n    );\n\n    public levelNameMap$ = combineLatest([\n        this.building$,\n        this.org.level_list\n    ]).pipe( \n        map( ([building, level_list]) => {\n            let map = {};\n            if(!building) return map;\n            map[building.id] = \"All Levels\";\n            const levels = level_list.filter((lvl) => lvl.parent_id === building?.id);\n            levels.forEach(e => (map[e.id] = e.display_name || e.name));\n            return map;\n        })\n    )\n\n    constructor(\n        private router: Router,\n        private org: OrganisationService,\n        private survey: SurveyService\n    ){}\n\n    public initBuilding(building_id: string){\n        if(!building_id?.length) return;\n        this._building_id.next(building_id);\n        this.loadBuildingSurveys(building_id);\n    }\n\n    public reloadBuilding(){\n        const id = this._building_id.getValue();\n        this.loadBuildingSurveys(id);\n    }\n\n    public async deleteSurvey(id: number){\n        await this.survey.confirmDeleteSurvey(id);\n        this.reloadBuilding();\n    }\n\n    public editSurvey(id: number){\n        this.router.navigate(['surveys', 'builder'], {\n            queryParams: {survey_id: id}\n        })\n    }\n\n    public async newSurvey() {\n        const building = await this.building$.pipe(take(1)).toPromise();\n        this.router.navigate(['surveys', 'builder'], {\n            queryParams: { building_id: building?.id || '' },\n        });\n    }\n\n    public back(){\n        this.router.navigate(['surveys']);\n    }\n\n    private async loadBuildingSurveys(building_id:string){\n        if(!building_id?.length) return;\n        this.loading = 'Loading surveys...'\n        const res = await querySurveys({building_id}).pipe(\n            first(),\n            catchError(err => {\n                notifyError(`Error loading surveys`);\n                return [];\n            }),\n            finalize(() => this.loading = '')\n        ).toPromise();\n        this.surveys = res;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { TriggerEnumMap } from '@placeos/survey-suite';\nimport { shareReplay } from 'rxjs/operators';\nimport { SurveyListingsService } from '../services/survey-listings.service';\n\n@Component({\n    selector: 'survey-listings',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            .mat-column-actions {\n                width: 4rem;\n            }\n\n            .mat-column-trigger {\n                width: 12rem;\n            }\n        `,\n    ],\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-full h-full bg-white dark:bg-neutral-600 overflow-y-auto\"\n        >\n            <div\n                *ngIf=\"(loading$ | async).length\"\n                class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\"\n            >\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col bg-white w-full max-w-[70rem] m-auto \">\n                <header\n                    class=\"flex items-center justify-between pt-8 mb-4 w-full\"\n                >\n                    <div class=\"flex items-start\">\n                        <button icon matRipple (click)=\"back()\">\n                            <app-icon class=\"flex mr-2\">arrow_back</app-icon>\n                        </button>\n                        <ng-container\n                            *ngIf=\"\n                                building$ | async as building;\n                                else unknownBuilding\n                            \"\n                        >\n                            <div class=\"flex flex-col\">\n                                <span class=\"text-2xl\">Survey Listing </span>\n                                <span class=\"text-4xl\">{{\n                                    building.display_name || building.name\n                                }}</span>\n                            </div>\n                        </ng-container>\n                        <ng-template #unknownBuilding>\n                            <span class=\"text-2xl\">Survey Listing</span>\n                        </ng-template>\n                    </div>\n\n                    <div class=\"flex items-center\">\n                        <button btn matRipple (click)=\"newSurvey()\">\n                            <span> Add New Survey</span>\n                            <mat-icon>add</mat-icon>\n                        </button>\n                    </div>\n                </header>\n\n                <div class=\"flex flex-col w-full pl-6\">\n                    <table mat-table [dataSource]=\"surveys$ | async\">\n                        <ng-container matColumnDef=\"title\">\n                            <th\n                                mat-header-cell\n                                *matHeaderCellDef\n                                class=\"text-lg\"\n                            >\n                                Title\n                            </th>\n                            <td\n                                mat-cell\n                                *matCellDef=\"let element\"\n                                class=\"text-base\"\n                            >\n                                {{ element.title }}\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"level\">\n                            <th\n                                mat-header-cell\n                                *matHeaderCellDef\n                                class=\"text-lg\"\n                            >\n                                Level\n                            </th>\n                            <td\n                                mat-cell\n                                *matCellDef=\"let element\"\n                                class=\"text-base\"\n                            >\n                                {{\n                                    levelMap[element.zone_id] || element.zone_id\n                                }}\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"trigger\">\n                            <th\n                                mat-header-cell\n                                *matHeaderCellDef\n                                class=\"text-lg\"\n                            >\n                                Trigger\n                            </th>\n                            <td\n                                mat-cell\n                                *matCellDef=\"let element\"\n                                class=\"text-base\"\n                            >\n                                {{ triggerMap[element.trigger] }}\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"link\">\n                            <th\n                                mat-header-cell\n                                *matHeaderCellDef\n                                class=\"text-lg\"\n                            >\n                                Link\n                            </th>\n                            <td\n                                mat-cell\n                                *matCellDef=\"let element\"\n                                class=\"text-base\"\n                            >\n                                {{ element.id }}\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"actions\">\n                            <th mat-header-cell *matHeaderCellDef></th>\n                            <td mat-cell *matCellDef=\"let element\">\n                                <button\n                                    icon\n                                    matRipple\n                                    [matMenuTriggerFor]=\"actionsMenu\"\n                                >\n                                    <mat-icon>more_vert</mat-icon>\n                                </button>\n                                <mat-menu #actionsMenu=\"matMenu\">\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"onViewStats(element.id)\"\n                                    >\n                                        <mat-icon>analytics</mat-icon>\n                                        <span>Responses</span>\n                                    </button>\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"onEdit(element.id)\"\n                                    >\n                                        <mat-icon>edit</mat-icon>\n                                        <span>Edit</span>\n                                    </button>\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"onDelete(element.id)\"\n                                    >\n                                        <mat-icon>delete</mat-icon>\n                                        <span>Delete</span>\n                                    </button>\n                                </mat-menu>\n                            </td>\n                        </ng-container>\n                        <tr\n                            mat-header-row\n                            *matHeaderRowDef=\"displayedColumns\"\n                        ></tr>\n                        <tr\n                            mat-row\n                            *matRowDef=\"let row; columns: displayedColumns\"\n                        ></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                            <td\n                                class=\"mat-cell\"\n                                [attr.colspan]=\"displayedColumns.length\"\n                            >\n                                <div\n                                    class=\"flex w-full h-20 items-center justify-center\"\n                                >\n                                    <span class=\"text-base\">\n                                        No surveys found. Click on\n                                        <i>Add survey</i> to create new surveys\n                                        for this building.\n                                    </span>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </main>\n    `,\n    providers: [SurveyListingsService],\n})\nexport class SurveyListingsComponent extends AsyncHandler implements OnInit {\n    levelMap = {};\n    loading$ = this._service.loading$.pipe(shareReplay(1));\n    building$ = this._service.building$.pipe(shareReplay(1));\n    surveys$ = this._service.surveys$;\n    triggerMap = TriggerEnumMap;\n    onEdit = (id: number) => this._service.editSurvey(id);\n    onDelete = (id: number) => this._service.deleteSurvey(id);\n    newSurvey = () => this._service.newSurvey();\n    back = () => this._service.back();\n    onViewStats = (id: number) =>\n        this._router.navigate(['surveys', 'responses', id]);\n\n    displayedColumns: string[] = ['title', 'level', 'trigger', 'actions'];\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: SurveyListingsService\n    ) {\n        super();\n    }\n\n    public get building_name() {\n        return (\n            this._service.building?.display_name ||\n            this._service.building?.name ||\n            ''\n        );\n    }\n\n    async ngOnInit() {\n        this.subscription(\n            'route-param',\n            this._route.params.subscribe((params) => {\n                const id = params.id || '';\n                this._service.initBuilding(id);\n            })\n        );\n\n        this.subscription(\n            'level_map',\n            this._service.levelNameMap$.subscribe(\n                (map) => (this.levelMap = map)\n            )\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport {\n    Question,\n    translateToQuestion,\n    UISurveyAnswer,\n    UISurveyResponse,\n} from '@placeos/survey-suite';\nimport {\n    queryAnswers,\n    queryQuestions,\n    showSurvey,\n    Survey,\n    SurveyQuestion,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, forkJoin, of, combineLatest } from 'rxjs';\nimport { catchError, filter, finalize, first, map, tap } from 'rxjs/operators';\n\ninterface SurveyStats {\n    question_count: number;\n    answer_count: number;\n}\n\ninterface PagedSurveyResponse {\n    title: string;\n    responses: UISurveyResponse[];\n}\n\n@Injectable()\nexport class SurveyResponsesService {\n    private readonly _loading = new BehaviorSubject<string>('');\n    public readonly loading$ = this._loading.asObservable();\n    private set loading(value: string) {\n        this._loading.next(value);\n    }\n\n    private readonly _responses = new BehaviorSubject<UISurveyResponse[]>([]);\n    public readonly responses$ = this._responses.asObservable();\n    private set responses(value: UISurveyResponse[]) {\n        this._responses.next(value);\n    }\n\n    private readonly _survey = new BehaviorSubject<Survey>(null);\n    public readonly survey$ = this._survey.asObservable();\n    private set survey(value: Survey) {\n        this._survey.next(value);\n    }\n\n    private readonly _stats = new BehaviorSubject<SurveyStats>({\n        question_count: 0,\n        answer_count: 0,\n    });\n    public readonly stats$ = this._stats.asObservable();\n    private set stats(value: SurveyStats) {\n        this._stats.next(value);\n    }\n\n    paged_responses$ = combineLatest([this.responses$, this.survey$]).pipe(\n        filter(([responses, survey]) => responses?.length && !!survey),\n        map(([responses, survey]) => {\n            let resMap = {};\n            responses.forEach((e) => (resMap[e.question.id] = e));\n            let paged: PagedSurveyResponse[] = [];\n            survey.pages.forEach((p) => {\n                let t = { title: p.title, responses: [] };\n                p.question_order.forEach((q) => t.responses.push(resMap[q]));\n                paged.push(t);\n            });\n            return paged;\n        })\n    );\n\n    constructor() {}\n\n    async getSurveyResponses(survey_id: string) {\n        this.loading = 'Loading survey responses';\n        const res = await forkJoin([\n            queryQuestions({ survey_id }).pipe(\n                map(\n                    (res: SurveyQuestion[]) =>\n                        res?.map((e) => translateToQuestion(e)) || []\n                ),\n                catchError((err) =>\n                    this.handleError('Error loading survey questions')\n                )\n            ),\n            queryAnswers({ survey_id }).pipe(\n                catchError((err) =>\n                    this.handleError('Error loading survey answers')\n                )\n            ),\n            showSurvey(survey_id).pipe(\n                catchError((err) =>\n                    this.handleError('Error loading survey details')\n                )\n            ),\n        ])\n            .pipe(\n                first(),\n                tap(([questions, answers, survey]) => {\n                    this.survey = survey;\n                    this.stats = {\n                        question_count: questions.length,\n                        answer_count: answers.length,\n                    };\n                }),\n                map(([questions, answers]) => {\n                    if (!questions?.length || !answers?.length) return [];\n                    return this.sortQuestionsAnswers(questions, answers);\n                }),\n                finalize(() => (this.loading = ''))\n            )\n            .toPromise();\n        this.responses = res;\n    }\n\n    public sortQuestionsAnswers(\n        questions: Question[],\n        answers: UISurveyAnswer[]\n    ): UISurveyResponse[] {\n        let qhash = questions.reduce(\n            (map, obj) => ((map[obj.id] = { question: obj, answers: [] }), map),\n            {}\n        );\n        answers.forEach((e) => {\n            if (qhash[e.question_id]) {\n                qhash[e.question_id].answers.push(e);\n            }\n        });\n        return Object.values(qhash);\n    }\n\n    private handleError(msg: string, def_res: any = null) {\n        notifyError(msg);\n        return of(def_res);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Question, UISurveyAnswer } from '../types';\nimport { AsyncHandler } from '@placeos/common';\nimport { makeHTMLId } from '../helper';\n\n@Component({\n    selector: 'base-widget',\n    styles: [],\n    template: ``,\n})\nexport class BaseWidget extends AsyncHandler {\n    private readonly _data = new BehaviorSubject<UISurveyAnswer[]>([]);\n    public readonly data$ = this._data.asObservable();\n    private set data(value: UISurveyAnswer[]) {\n        this._data.next(value);\n    }\n\n    protected hasData: boolean = false;\n    protected widget_id: string;\n\n    @Input() question: Question;\n    @Input() set value(value: UISurveyAnswer[]) {\n        if (value) {\n            this.data = value;\n        }\n        this.hasData = !!value;\n    }\n\n    constructor() {\n        super();\n        this.widget_id = 'e-' + makeHTMLId(7);\n    }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\nimport { parseSelectionAnswers } from './survey-helper';\n\n@Component({\n    selector: 'selection-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                padding-bottom: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex flex-col min-h-0 max-h-[22rem] h-full w-full overflow-y-auto relative p-2\"\n        >\n            <div class=\"flex flex-1 justify-end mx-4\">\n                <span>{{ (data$ | async)?.length || 0 }} answers</span>\n            </div>\n            <ng-container *ngIf=\"chart_data$ | async as data\">\n                <div\n                    *ngFor=\"let d of data\"\n                    class=\"flex flex-1 mx-4 pt-2 pb-3 space-x-4\"\n                >\n                    <div class=\"flex flex-1 flex-col space-y-1\">\n                        <span>{{ d.name }}</span>\n                        <div class=\"progress-bar bg-gray-200 h-1\">\n                            <span\n                                class=\"progress-bar-fill h-1 rounded-lg\"\n                                [ngClass]=\"{\n                                    'bg-red-500': d.percentage <= 25,\n                                    'bg-yellow-400':\n                                        d.percentage > 25 && d.percentage <= 50,\n                                    'bg-blue-400': d.percentage > 50 && d.percentage <= 75,\n                                    'bg-green-500': d.percentage > 75\n                                }\"\n                                [ngStyle]=\"{ width: d.percentage + '%' }\"\n                            ></span>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center w-12\">\n                        <span class=\"text-2xl font-thin\">{{\n                            d.percentage / 100 | percent\n                        }}</span>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n})\nexport class SelectionWidgetComponent extends BaseWidget {\n    chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) =>\n            parseSelectionAnswers(\n                data,\n                this.question?.choices?.map((_) => _.text) || []\n            )\n        )\n    );\n\n    constructor() {\n        super();\n    }\n}\n","import { Data } from 'chartist';\nimport { QuestionType, UISurveyAnswer } from '../types';\n\nexport interface SelectionStats {\n    name: string;\n    count: number;\n    percentage: number;\n}\n\nexport function parseSelectionAnswers(\n    data: UISurveyAnswer[],\n    choices?: string[]\n): SelectionStats[] {\n    if (!data?.length) return [];\n    const type = data[0].type;\n    const total = data.length;\n    let map = {};\n    let list =\n        type === QuestionType.Check_Box\n            ? data.reduce((acc, curr) => acc.concat(curr.answer_json), [])\n            : data.reduce((acc, curr) => (acc.push(curr.answer_json), acc), []);\n\n    list.forEach((e) => {\n        if (!map[e]) {\n            map[e] = 1;\n            return;\n        }\n        map[e] += 1;\n    });\n    if (choices?.length) {\n        choices.forEach((e) => {\n            if (!map[e]) map[e] = 0;\n        });\n    }\n    const stats = Object.keys(map)\n        .map((key) => ({\n            name: key,\n            count: map[key],\n            percentage: Math.round((map[key] / total) * 1000) / 10,\n        }))\n        .sort((a, b) =>\n            a.percentage < b.percentage\n                ? 1\n                : a.percentage > b.percentage\n                ? -1\n                : 0\n        );\n    return stats;\n}\n\nexport function calcSelectionAnswers() {}\n\nexport function parseRatingAnswers(data: UISurveyAnswer[], rateMax: number) {\n    const list = data.reduce(\n        (acc, curr) => (acc.push(curr.answer_json), acc),\n        []\n    );\n    let arr = Array.from({ length: rateMax }, (_, i) => 0);\n    list.forEach((e) => {\n        arr[e-1] += 1;\n    });\n    const total = list.length;\n    arr.forEach((e, i) => (arr[i] = Math.round((e / total) * 1000) / 10));\n    return arr;\n}\n\nexport function parseRatingStats(data: UISurveyAnswer[], rateMax: number) {\n    const list = data.reduce(\n        (acc, curr) => (acc.push(curr.answer_json), acc),\n        []\n    );\n    const sum = list.reduce((acc, curr) => acc + curr);\n    const average = Math.round((sum / list.length) * 10) / 10;\n    const percentage = Math.round((average / rateMax) * 1000) / 10;\n    return { average, percentage, total: list.length };\n}\n","import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\nimport { parseRatingAnswers, parseRatingStats } from './survey-helper';\n\n@Component({\n    selector: 'ratings-widget',\n    styles: [`\n        :host{\n            padding-bottom: 0.5rem;\n        }\n    `],\n    template: `\n        <ng-container *ngIf=\"chart_data$ | async as data\">\n            <div class=\"flex flex-row space-x-4 p-4\">\n                <div\n                    class=\"flex flex-col w-1/3 relative justify-center items-center space-y-4\"\n                >\n                    <ng-container *ngIf=\"stats$ | async as stats\">\n                        <div class=\"flex flex-row items-end\">\n                            <span class=\"text-6xl\"\n                                >{{ stats.average || 0 | number: '1.1' }}\n                            </span>\n                            <span class=\"font-thin\"\n                                >/ {{ maxRate | number: '1.1' }}</span\n                            >\n                        </div>\n\n                        <div class=\"progress-bar bg-gray-200 h-5\">\n                            <span\n                                class=\"progress-bar-fill bg-yellow-500 h-5 rounded-lg\"\n                                [ngStyle]=\"{ width: stats.percentage + '%' }\"\n                            ></span>\n                        </div>\n                        <span>{{ stats.total }} ratings</span>\n                    </ng-container>\n                </div>\n                <div class=\"flex w-2/3 flex-col-reverse\">\n                    <div\n                        *ngFor=\"let d of data; let i = index\"\n                        class=\"flex flex-row w-full items-center space-x-4\"\n                    >\n                        <div class=\"w-3 flex justify-end\">\n                            <span> {{ i + 1 }}</span>\n                        </div>\n                        <div class=\"progress-bar bg-gray-200 h-3\">\n                            <span\n                                class=\"progress-bar-fill bg-yellow-500 h-3\"\n                                [ngStyle]=\"{ width: d + '%' }\"\n                            ></span>\n                        </div>\n                        <div class=\"min-w-[1.5rem] flex justify-end\">\n                            <span> {{ d / 100 | percent }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    `,\n})\nexport class RatingsWidgetComponent extends BaseWidget {\n    public chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) => parseRatingAnswers(data, this.maxRate)),\n        shareReplay(1)\n    );\n\n    public stats$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) => parseRatingStats(data, this.maxRate)),\n        shareReplay(1)\n    );\n\n    get maxRate() {\n        return this.question?.rateMax || 10;\n    }\n\n    constructor() {\n        super();\n    }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UISurveyAnswer } from '../types';\nimport { BaseWidget } from './base-widget.component';\n\n@Component({\n    selector: 'table-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                padding-bottom: 0.5rem;\n            }\n\n            blockquote:after, blockquote:before {\n                font-size: 1.3rem;  \n            } \n\n            blockquote:after {                                                       \n                content: close-quote;\n                vertical-align: bottom;\n                margin-left: 0.25rem;\n            }\n\n            blockquote:before {                                     \n                content: open-quote;\n                vertical-align: top;\n                margin-right: 0.25rem;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex flex-col min-h-0 max-h-[22rem] h-full w-full overflow-y-auto relative\"\n        >\n            <ng-container *ngIf=\"chart_data$ | async as data\">\n                <div *ngFor=\"let d of data\" class=\"flex flex-1 p-2 border-b mx-4\">\n                    <blockquote>\n                        <span class=\"text-gray-700\">{{d}}</span>\n                    </blockquote>\n                </div>\n            </ng-container>\n        </div>\n    `,\n})\nexport class TableWidgetComponent extends BaseWidget {\n    public chart_data$ = this.data$.pipe(\n        map((data: UISurveyAnswer[]) =>\n            data.reduce((acc, curr) => (acc.push(curr.answer_json), acc), [])\n        )\n    );\n\n    constructor() {\n        super();\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { QuestionType, UISurveyResponse } from '../types';\n\n@Component({\n    selector: 'survey-widget',\n    styles: [\n        `\n            :host {\n                display: flex;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"flex flex-col flex-1 p-2 w-full\">\n            <div\n                class=\"flex flex-col h-full w-full bg-white dark:bg-neutral-700 rounded shadow border border-gray-300 dark:border-neutral-500\"\n            >\n                <div class=\"p-4 pb-2 text-xl\">\n                    {{ response?.question?.title || '' }}\n                </div>\n                <div class=\"flex flex-col w-full\">\n                    <ng-container\n                        *ngIf=\"\n                            [\n                                QuestionType.Comment_Box,\n                                QuestionType.Single_Line_Text\n                            ].includes(type)\n                        \"\n                    >\n                        <table-widget [value]=\"response.answers\"></table-widget>\n                    </ng-container>\n                    <ng-container\n                        *ngIf=\"\n                            [\n                                QuestionType.Drop_Down,\n                                QuestionType.Radio_Group,\n                                QuestionType.Check_Box\n                            ].includes(type)\n                        \"\n                    >\n                        <selection-widget\n                            [value]=\"response.answers\"\n                            [question]=\"response.question\"\n                        ></selection-widget>\n                    </ng-container>\n                    <ng-container *ngIf=\"QuestionType.Rating === type\">\n                        <ratings-widget\n                            [value]=\"response.answers\"\n                            [question]=\"response.question\"\n                        ></ratings-widget>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class SurveyWidgetComponent implements OnInit {\n    @Input() response: UISurveyResponse;\n    public QuestionType = QuestionType;\n    constructor() {}\n\n    get type() {\n        return this.response?.question?.type || 'empty';\n    }\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { TriggerEnumMap } from '@placeos/survey-suite';\nimport { map, shareReplay, take } from 'rxjs/operators';\nimport { SurveyResponsesService } from '../services/survey-responses.service';\n\n@Component({\n    selector: 'survey-responses',\n    styles: [\n        `\n            :host {\n                display: flex;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-full h-full bg-white dark:bg-neutral-600 overflow-y-auto p-4\"\n        >\n            <div\n                *ngIf=\"(loading$ | async).length\"\n                class=\"flex absolute inset-0 opacity-60 bg-white dark:bg-black z-10\"\n            >\n                <div class=\"flex flex-col m-auto items-center\">\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <span>{{ loading$ | async }}</span>\n                </div>\n            </div>\n            <ng-container *ngIf=\"surveyId$ | async; else noId\">\n                <header class=\"flex items-center w-full\">\n                    <button icon matRipple (click)=\"back()\">\n                        <app-icon class=\"flex mr-2\">arrow_back</app-icon>\n                    </button>\n                    <div class=\"flex flex-row items-center\">\n                        <span class=\"text-2xl\"\n                            >Survey Responses -\n                            {{ (survey$ | async)?.title || '' }}</span\n                        >\n                    </div>\n                </header>\n                <div class=\"flex p-4 border-b justify-end space-x-2\">\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Questions</h3>\n                        <p class=\"text-4xl\">\n                            {{ (stats$ | async)?.question_count || 0 }}\n                        </p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Responses</h3>\n                        <p class=\"text-4xl\">\n                            {{ (stats$ | async)?.answer_count || 0 }}\n                        </p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Triggers On</h3>\n                        <p class=\"text-2xl\">\n                            {{ triggerMap[(survey$ | async)?.trigger] }}\n                        </p>\n                    </div>\n                </div>\n\n                <ng-container *ngIf=\"pagedResponses$ | async as pagedResponses\">\n                    <ng-container\n                        *ngIf=\"pagedResponses?.length > 0; else noRecords\"\n                    >\n                        <ng-container\n                            *ngFor=\"let p of pagedResponses; let i = index\"\n                        >\n                            <div\n                                class=\"flex w-full px-3 pt-2 space-x-2\"\n                                *ngIf=\"pagedResponses.length > 1\"\n                            >\n                                <span class=\"font-thin text-xl\"\n                                    >Page {{ i + 1 }}\n                                    {{\n                                        p.title?.length ? '- ' + p.title : ''\n                                    }}</span\n                                >\n                            </div>\n                            <div class=\"flex flex-wrap w-full pt-2\">\n                                <survey-widget\n                                    class=\"w-full lg:w-1/2 2xl:w-1/3\"\n                                    *ngFor=\"let r of p.responses\"\n                                    [response]=\"r\"\n                                ></survey-widget>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </main>\n\n        <ng-template #noId>\n            <div\n                class=\"flex flex-col w-full h-full items-center justify-center\"\n            >\n                <span class=\"text-lg text-gray-700\"\n                    >Invalid survey identity</span\n                >\n            </div>\n        </ng-template>\n        <ng-template #noRecords>\n            <div\n                class=\"flex flex-col w-full h-full items-center justify-center\"\n            >\n                <span class=\"text-lg text-gray-700\"\n                    >No responses found for survey</span\n                >\n            </div>\n        </ng-template>\n    `,\n    providers: [SurveyResponsesService],\n})\nexport class SurveyResponsesComponent extends AsyncHandler implements OnInit {\n    surveyId$ = this.route.params.pipe(map((params) => params.id || ''));\n    survey$ = this.service.survey$;\n    pagedResponses$ = this.service.paged_responses$;\n    stats$ = this.service.stats$.pipe(shareReplay(1));\n    loading$ = this.service.loading$.pipe(shareReplay(1));\n\n    triggerMap = TriggerEnumMap;\n\n    constructor(\n        private service: SurveyResponsesService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'params',\n            this.surveyId$.subscribe((surveyId) => {\n                if (surveyId?.length) {\n                    this.service.getSurveyResponses(surveyId);\n                }\n            })\n        );\n    }\n\n    public async back() {\n        const survey = await this.survey$.pipe(take(1)).toPromise();\n        this.router.navigate([\n            'surveys',\n            'survey-list',\n            survey.building_id || '',\n        ]);\n    }\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { ComponentsModule } from '@placeos/components';\nimport { UIModule } from '../ui/ui.module';\n\nimport { BuildingListComponent } from './pages/building-list.component';\nimport { NotFoundComponent } from './pages/not-found.component';\n\nimport { BuildingListItemComponent } from './components/building-list-item.component';\n\nimport { SurveySuiteModule } from '@placeos/survey-suite';\nimport { SurveyModule } from 'survey-angular-ui';\nimport { QuestionBankComponent } from './components/question-bank/question-bank.component';\nimport { SearchInputComponent } from './components/search-input.component';\nimport { SurveyBuilderComponent } from './components/survey-builder/survey-builder.component';\nimport { SurveyCreatorTopbarComponent } from './components/survey-creator-topbar.component';\nimport { ModQuestionOverlayComponent } from './overlays/mod-question-overlay.component';\nimport { ModSurveyComponent } from './pages/mod-survey.component';\nimport { RunSurveyComponent } from './pages/run-survey.component';\nimport { SurveyListingsComponent } from './pages/survey-listings.component';\nimport { SurveyResponsesComponent } from './pages/survey-responses.component';\nimport { QuestionBankService } from './services/question-bank.service';\nimport { SurveyBuilderService } from './services/survey-builder.service';\nimport { SurveyService } from './services/survey.service';\n\nconst routes: Route[] = [\n    { path: '', component: BuildingListComponent },\n    { path: 'survey-list/:id', component: SurveyListingsComponent },\n    { path: 'builder', component: ModSurveyComponent },\n    { path: 'run/:id', component: RunSurveyComponent },\n    { path: 'responses/:id', component: SurveyResponsesComponent },\n    { path: '404', component: NotFoundComponent },\n    { path: '**', pathMatch: 'full', component: NotFoundComponent },\n];\n\nconst COMPONENTS = [\n    BuildingListComponent,\n    BuildingListItemComponent,\n    NotFoundComponent,\n    ModQuestionOverlayComponent,\n    QuestionBankComponent,\n    SurveyBuilderComponent,\n    SurveyCreatorTopbarComponent,\n    ModSurveyComponent,\n    SearchInputComponent,\n    SurveyListingsComponent,\n    RunSurveyComponent,\n    SurveyResponsesComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatDialogModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatTabsModule,\n        DragDropModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        ComponentsModule,\n        RouterModule,\n        MatTableModule,\n        MatMenuModule,\n        MatListModule,\n        MatFormFieldModule,\n        UIModule,\n        SurveySuiteModule,\n        SurveyModule,\n    ],\n    providers: [SurveyBuilderService, QuestionBankService, SurveyService],\n})\nexport class SurveysModule {}\n"],"x_google_ignoreList":[0,1,2,3,4,18]}