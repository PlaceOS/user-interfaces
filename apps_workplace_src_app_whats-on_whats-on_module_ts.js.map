{"version":3,"file":"apps_workplace_src_app_whats-on_whats-on_module_ts.js","mappings":"4QAuBO,IAAMA,EAAb,MAAM,MAAOA,EACEC,WACP,OAAOC,UAGAC,UACP,OAAOC,OAAOC,KAAKC,MAAO,MAEnBC,YACP,OAAOH,OAAOC,KAAKC,MAAO,OAGnBE,WACP,OAAOJ,OAAOC,KAAKC,MAAO,QAGnBG,WACP,OAAOL,OAAOC,KAAKC,MAAO,wDAjBrBN,8BAAsBU,iZAhB3BC,iBAA2D,UAClCA,SAAuBA,QAC5CA,iBAA0D,WAChBA,SAASA,QAC/CA,iBAAmB,WAEXA,SACJA,QACAA,iBAAqCA,UAAUA,UAEnDA,kBAA4CA,UAAUA,mBATrCA,2DAEqBA,sBAG9BA,gCAEiCA,uBAEGA,2BAM/CX,GAAb,oFCAgBW,kBAeIA,kBACAA,kBAEC,YAEOA,yBACJA,QACAA,kBACIA,SACJA,QACAA,kBACIA,2BAIJA,QACAA,sBAAkC,YAAlCA,CAAkC,UAErBA,sBAASA,QACdA,qBAAUA,0BAAaA,+DA9BnCA,qDAAyD,8CAAzDA,CAAyD,4CAAzDA,CAAyD,wEAgBjDA,qEAGAA,6DAGAA,8HAaZA,qBAGIA,2FAGAA,oBAAUA,wBAAYA,mDAE1BA,qBAGIA,2FAGAA,oBAAUA,yBAAaA,oCAtD/BA,SACIA,yBAuCAA,0BAQAA,0BAQJA,8BApD0BA,mCAsCjBA,iCAQAA,iFASTA,kBAGIA,SACJA,8BADIA,2CAYT,IAAMC,EAAb,MAAM,MAAOA,EArFbC,cAuFoBC,WAAQ,WAERA,YAA0B,CACtC,IAAIC,KAAc,CACdC,MAAO,gBACPC,KACI,qEAER,IAAIF,KAAc,CACdC,MAAO,kBACPC,KAAM,8CAEV,IAAIF,KAAc,CACdC,MAAO,uBACPC,KAAM,2CAEV,IAAIF,KAAc,CACdC,MAAO,wBACPC,KAAM,eAEV,IAAIF,KAAc,CACdC,MAAO,iBACPC,KACI,mGAILH,WAAQ,EAKuBI,WAClCJ,KAAKK,MAAQ,EAGNC,YACP,OAAOC,KAAKC,MAAMR,KAAKS,IAAIC,cAAcC,YA9H9B,MA8H2D,gDAvCjEb,8BAAyBF,8LAAzBgB,eAAU,0+CAlFff,iBAA8C,UACVA,SAAWA,QAC3CA,iBACJA,QACAA,mBAIIA,gCAyDJA,QACAA,iEAjEoCA,wBAOjBA,2DAAsB,8NA0EpCC,GAAb,4BCpDO,IAAMe,EAAb,MAAM,MAAOA,8EAAgBjB,sYAvCrBC,kBACAA,iBAAwE,UAAxEA,CAAwE,YAO5DA,2BAAmC,0BAAnCA,CAAmC,2BAGvCA,YAGRA,uVAyBKgB,GAAb,iBClCA,MAAMC,EAAkB,CAAC,CAAEC,KAAM,GAAIC,UAAWH,IAezC,IAAMI,EAAb,MAAM,MAAOA,4GANLC,KACAC,KACAC,IACAC,cAAsBP,MAGjBG,GAAb","names":["WhatsOnHeaderComponent","user","currentUser","day","format","Date","now","month","year","time","selectors","i0","WhatsOnEventListComponent","constructor","this","CalendarEvent","title","body","onResize","index","cards","Math","floor","_el","nativeElement","clientWidth","ctx","WhatsOnComponent","ROUTES","path","component","WhatsOnModule","CommonModule","FormsModule","SharedComponentModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/whats-on/whats-on-header.component.ts","./apps/workplace/src/app/whats-on/whats-on-event-list.component.ts","./apps/workplace/src/app/whats-on/whats-on.component.ts","./apps/workplace/src/app/whats-on/whats-on.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { format } from 'date-fns';\n\n@Component({\n    selector: 'whats-on-header',\n    template: `\n        <div class=\"flex items-center justify-between my-8 w-full\">\n            <h1 class=\"text-4xl\">Hello, {{ user?.name }}</h1>\n            <div time class=\"flex items-center space-x-2 font-medium\">\n                <div day class=\"text-4xl font-normal\">{{ day }}</div>\n                <div date class=\"\">\n                    <div class=\"text-primary uppercase leading-none\">\n                        {{ month }}\n                    </div>\n                    <div class=\"text-base leading-none \">{{ year }}</div>\n                </div>\n                <div time class=\"text-4xl font-normal pl-4\">{{ time }}</div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class WhatsOnHeaderComponent {\n    public get user() {\n        return currentUser();\n    }\n\n    public get day() {\n        return format(Date.now(), 'dd');\n    }\n    public get month() {\n        return format(Date.now(), 'MMM');\n    }\n\n    public get year() {\n        return format(Date.now(), 'yyyy');\n    }\n\n    public get time() {\n        return format(Date.now(), 'h:mm a');\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\n\nconst CARD_WIDTH = 60 * 4;\n\n@Component({\n    selector: 'whats-on-event-list',\n    template: `\n        <div class=\"flex items-center space-x-4 mb-2\">\n            <h3 class=\"text-xl font-medium\">{{ title }}</h3>\n            <div class=\"flex-1 h-0.5 w-px bg-primary\"></div>\n        </div>\n        <div\n            #container\n            class=\"relative flex items-center w-full space-x-2 py-2\"\n        >\n            <ng-container *ngIf=\"events?.length; else empty_state\">\n                <div\n                    class=\"flex flex-col items-center justify-center bg-white shadow h-[24rem]\"\n                    card\n                    *ngFor=\"let event of events; let i = index\"\n                    [style.min-width]=\"'calc(' + 100 / cards + '% - .45rem)'\"\n                    [style.max-width]=\"'calc(' + 100 / cards + '% - .45rem)'\"\n                    [style.opacity]=\"i >= index && i < index + cards ? 1 : 0\"\n                    [style.transform]=\"\n                        'translateX(calc(-' +\n                        index * 100 +\n                        '% - ' +\n                        index * 0.45 +\n                        'rem))'\n                    \"\n                >\n                    <div class=\"w-full h-40 bg-gray-400\"></div>\n                    <div\n                        class=\"flex flex-col items-center p-2 flex-1 h-1/2 w-full space-y-2\"\n                    >\n                        <div date class=\"w-full uppercase text-primary\">\n                            {{ event?.date | date: 'mediumDate' }}\n                        </div>\n                        <div title class=\"w-full font-medium\">\n                            {{ event?.title || '&lt;No title&gt;' }}\n                        </div>\n                        <div desc class=\"flex-1 h-1/2 w-full text-sm\">\n                            {{\n                                event?.body || '&lt;No description&gt;'\n                                    | slice: 0:320\n                            }}\n                        </div>\n                        <button mat-button class=\"w-full\">\n                            <div class=\"flex items-center\">\n                                <div>Read more</div>\n                                <app-icon>arrow_forward</app-icon>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    *ngIf=\"index > 0\"\n                    (click)=\"index = index - cards\"\n                    class=\"absolute left-0 top-1/2 transform -translate-x-1/2 -translate-y-16 bg-white shadow\"\n                >\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    *ngIf=\"index + cards < events.length\"\n                    (click)=\"index = index + cards\"\n                    class=\"absolute right-0 top-1/2 transform translate-x-1/2 -translate-y-16 bg-white shadow\"\n                >\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"p-12 flex items-center justify-center w-full opacity-40\"\n            >\n                No {{ title }} events\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [card] {\n                transition: transform 200ms, opacity 200ms;\n            }\n        `,\n    ],\n})\nexport class WhatsOnEventListComponent {\n    /** Title to display for the event list */\n    @Input() public title = 'Upcoming';\n    /** List of events to display on the event list */\n    @Input() public events: CalendarEvent[] = [\n        new CalendarEvent({\n            title: 'Welcome Event',\n            body:\n                'Today we welcome our new employees joining our extensive family.',\n        }),\n        new CalendarEvent({\n            title: 'Christmas Party',\n            body: 'Come together for our pre-Christmas party',\n        }),\n        new CalendarEvent({\n            title: '100 Year Celebration',\n            body: 'Celebrating our 100th year in business',\n        }),\n        new CalendarEvent({\n            title: 'Chocolate Sharing Day',\n            body: 'Chocolate!',\n        }),\n        new CalendarEvent({\n            title: 'Shoe Shine Day',\n            body:\n                'Good shoes deserve good care. Join us to have your shoe polished and shined by professionals.',\n        }),\n    ] as any;\n\n    public index = 0;\n\n    @ViewChild('container', { static: true })\n    private _el: ElementRef<HTMLDivElement>;\n\n    @HostListener('window:resize') public onResize() {\n        this.index = 0;\n    }\n\n    public get cards() {\n        return Math.floor(this._el.nativeElement.clientWidth / CARD_WIDTH) || 1;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[dashboard]',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2 bg-gray-200\">\n            <div\n                class=\"relative z-0 flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <main\n                    class=\"flex flex-col flex-1 px-0 sm:px-8 overflow-y-auto overflow-x-hidden h-px sm:h-auto\"\n                >\n                    <whats-on-header></whats-on-header>\n                    <whats-on-event-list class=\"mb-4\"></whats-on-event-list>\n                    <whats-on-event-list title=\"Ongoing\"></whats-on-event-list>\n                </main>\n            </div>\n        </div>\n        <footer-menu></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n\n            .top {\n                background-color: #007ac8;\n            }\n        `,\n    ],\n})\nexport class WhatsOnComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WhatsOnComponent } from './whats-on.component';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { WhatsOnHeaderComponent } from './whats-on-header.component';\nimport { WhatsOnEventListComponent } from './whats-on-event-list.component';\n\nconst ROUTES: Route[] = [{ path: '', component: WhatsOnComponent }];\n\n@NgModule({\n    declarations: [\n        WhatsOnComponent,\n        WhatsOnHeaderComponent,\n        WhatsOnEventListComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class WhatsOnModule {}\n"]}