{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmC;AACY;AACiC;AACtC;AACL;AACJ;AACI;AACF;AACH;;;;;;;;;;;;;;;;ACPO;AAEjC,MAAOC,WAAW;EAsBpBC,YAAYC,KAAA,GAAiB,EAAE;IAC3B,IAAI,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,IAAID,KAAK,CAACE,QAAQ,IAAI,OAAO;IACnD,IAAI,CAACC,QAAQ,GAAGH,KAAK,CAACG,QAAQ,IAC1BH,KAAK,CAACI,MAAM,IAAIJ,KAAK,CAACK,QAAQ,IAAI;MAC9BC,CAAC,EAAEN,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO,SAAS,IAAI,CAAC;MACjCC,CAAC,EAAER,KAAK,CAACQ,CAAC,GAAGR,KAAK,CAACS,UAAU,IAAI;KACpC;IACL,IAAI,CAACC,QAAQ,GAAGV,KAAK,CAACU,QAAQ,IAAI,CAAC;IACnC,IAAI,CAACC,SAAS,GAAGX,KAAK,CAACW,SAAS,IAAId,qDAAW,CAAC,IAAIe,IAAI,EAAE,CAAC;IAC3D,IAAI,CAACC,KAAK,GAAGb,KAAK,CAACa,KAAK;IACxB,IAAI,CAACC,QAAQ,GAAGd,KAAK,CAACc,QAAQ;IAC9B,IAAI,CAACC,WAAW,GAAG,CAAC,CAACf,KAAK,CAACe,WAAW;IACtC,IAAI,CAACC,gBAAgB,GAAGhB,KAAK,CAACgB,gBAAgB,IAAI,UAAU;EAChE","sources":["./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["getUnixTime","MapLocation","constructor","_data","type","location","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","Date","level","building","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}