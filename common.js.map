{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.interfaces.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export * from './lib/bookings';\n","\nimport { BaseDataClass, HashMap } from '@user-interfaces/common'\n\nimport * as dayjs from 'dayjs';\n\n/** General purpose booking class */\nexport class Booking extends BaseDataClass {\n    /** User Id */\n    public readonly user_id: string;\n    /** User email */\n    public readonly user_email: string;\n    /** User name */\n    public readonly user_name: string;\n    /** Desk asset id */\n    public readonly asset_id: string;\n    /** Zones */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: 'desk' | null;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Metadata */\n    public readonly extension_data: HashMap<any>;\n    /** Default type */\n    public readonly type: string;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        super(data);\n        this.asset_id = data.asset_id;\n        this.zones = data.zones;\n        this.booking_type = data.booking_type;\n        this.type = data.type || 'booking';\n        const time = (data as any).booking_start * 1000 || data.date;\n        const start = time\n            ? dayjs(time).valueOf()\n            : dayjs()\n                  .minute(Math.ceil(dayjs().minute() / 5) * 5)\n                  .startOf('m')\n                  .valueOf();\n        this.date = start;\n        this.duration = data.duration || dayjs((data as any).booking_end * 1000).diff(start, 'm') || 60;\n        this.timezone = data.timezone;\n        this.user_email = data.user_email;\n        this.user_id = data.user_id;\n        this.user_name = data.user_name;\n        this.title = data.title || 'Desk booking';\n        this.description = data.description;\n        this.checked_in = data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id;\n        this.approver_email = data.approver_email;\n        this.approver_name = data.approver_name;\n        this.extension_data = data.extension_data;\n        this.all_day = data.all_day || true;\n        this.status = this.rejected ? 'declined' : this.approved ? 'approved' : 'tentative';\n    }\n\n    public toJSON(this: Booking): HashMap<any> {\n        const data = super.toJSON();\n        data.booking_start = dayjs(this.date).unix();\n        if (this.all_day) {\n            data.booking_end = dayjs(this.date).endOf('d').unix();\n        } else {\n            data.booking_end = dayjs(this.date).add(this.duration, 'm').unix();\n        }\n        if (!data.timezone) {\n            data.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        if (!this.id) {\n            delete data.id;\n        }\n        delete data.date;\n        delete data.duration;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = dayjs(this.date);\n        const end = this.all_day ? dayjs(this.date).endOf('d') : start.add(this.duration, 'm');\n        return start.isAfter(end, 'm');\n    }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    providers: [],\n    exports: []\n})\nexport class SharedBookingsModule {}\n","import { HashMap } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { User } from '@user-interfaces/users';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\nexport interface BookingNote {\n    /** Type of note */\n    type: 'equipment' | 'catering' | 'description' | 'private' | 'other';\n    /** Name of the note's author */\n    author: string;\n    /** Contents of the note */\n    message: string;\n    /** Time the note was added to the booking */\n    date: number;\n    /** Display value for the time */\n    time?: string;\n    /** ID of the space associated with the note */\n    space?: string;\n}\n\nexport const BOOKING_MUTABLE_FIELDS = [\n    'name',\n    'email',\n    'title',\n    'date',\n    'duration',\n    'organiser',\n    'body',\n    'type',\n    'has_catering',\n    'recurrence',\n    'space_list',\n    'attendees',\n    'configuration',\n] as const;\ntype BookingMutableTuple = typeof BOOKING_MUTABLE_FIELDS;\nexport type BookingMutableFields = BookingMutableTuple[number];\n\n/** Details about recurrence associated with the booking */\nexport interface BookingRecurrenceDetails {\n    /** CRON tab of the recurrence of the event */\n    readonly pattern: string;\n    /** Interval */\n    readonly interval: number;\n    /** Unix epoch in ms of the recurrence end date */\n    readonly end: number;\n    /** Calendar UID of the initial event */\n    readonly icaluid: string;\n}\n\nexport interface SpaceRules {\n    auto_approve: boolean;\n    hide: boolean;\n    room_type?: string;\n    max_length?: number;\n    min_length?: number;\n}\n\nexport interface BookingRule {\n    conditions: HashMap<string>;\n    rules: {\n        room_type?: string;\n        book_ahead?: string;\n        book_length?: string;\n        auto_approve?: boolean;\n    };\n}\n\nexport interface SpaceRuleOptions {\n    user: User;\n    space: Space;\n    time?: number;\n    duration?: number;\n    visitor_type?: string;\n    rules?: HashMap<readonly BookingRule[]>;\n}\n\nexport interface SpaceCheckOptions {\n    user: User;\n    space: Space;\n    time?: number;\n    visitor_type?: string;\n    duration?: number;\n    rules: HashMap<readonly string[] | string>;\n}\n","export * from './booking.class';\nexport * from './booking.interfaces';\nexport * from './booking.utilities';\nexport * from './bookings.module';\nexport * from './bookings.service';\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService, HashMap } from '@user-interfaces/common';\n\nimport { Booking } from './booking.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n    }\n\n\n    public checkIn(booking: Booking, state: boolean = true) {\n        return this.task(booking.id, 'check_in', {}, 'post', { state });\n    }\n\n    public approve(id: string, fields?: HashMap) {\n        return this.task(id, 'approve', fields);\n    }\n\n    public reject(id: string, fields?: HashMap) {\n        return this.task(id, 'reject', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n"],"sourceRoot":"webpack:///"}