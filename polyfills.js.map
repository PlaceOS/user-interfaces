{"version":3,"file":"polyfills.js","mappings":"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","names":["require","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","define","global","globalThis","__symbol__","name","__Zone_symbol_prefix","ObjectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","ObjectDefineProperty","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","create","ArraySlice","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","window","internalWindow","undefined","_global","REMOVE_ATTRIBUTE","bindArguments","args","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","self","isNode","process","toString","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","event","eventNameSymbol","type","result","target","listener","message","filename","lineno","colno","error","preventDefault","returnValue","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","value","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","patchOnProperties","properties","onProperties","push","j","originalInstanceKey","patchClass","className","OriginalClass","a","Error","attachOriginToPatched","instance","fn","patchMethod","patchFn","proto","delegateName","delegate","patchDelegate_1","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","task","cbIdx","invoke","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","navigator","userAgent","indexOf","isFunction","isNumber","passiveSupported","options","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","err","once","globalCallback","context","isCapture","tasks","errors","copyTasks","_loop_2","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","splice","removeAbortListener","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","copyEventListenerOptions","newOptions","signal","buildEventListenerOptions","aborted","zone","constructorName","constructor","targetSource","scheduleEventTask","onAbort_1","cancelTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handleId","handle","isRefreshable","refresh","clearTask","_a","options_1","isPeriodic","delay","callback_1","handle_1","handleId_1","task_1","_b","originalRefresh_1","state","_state","_updateTaskCount","id","cancelFn","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","internalWindow_1","ignoreErrorProperties","isIE","patchPromise","__load_patch","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","symbolPromise","symbolThen","creationTrace","onUnhandledError","e","showUncaughtError","rejection","console","stack","microtaskDrainDone","_loop_3","uncaughtPromiseError","shift","runGuarded","throwOriginal","handleUnhandledRejection","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","queue","trace","currentTask","scheduleResolveOrReject","readableObjectToString","JSON","stringify","scheduleMicroTask","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","noop","AggregateError","executor","resolve","withResolvers","res","rej","any","values","Symbol","iterator","Promise","promises","count","_i","values_1","finished","race","onResolve","onReject","values_2","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","_loop_4","this_1","curValueIndex","thenErr","values_3","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","_this","zoneify","resultPromise","ctor","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","_redefineProperty","Zone$1","loadZone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","parent","zoneSpec","_parent","_name","_properties","_zoneDelegate","_ZoneDelegate","assertZonePatched","patches","_currentZoneFrame","_currentTask","ignoreDuplicate","perfName","_api","key","getZoneWith","fork","_callback","intercept","applyThis","applyArgs","handleError","runTask","NO_ZONE","zoneTask","_c","_d","_e","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","scheduling","zoneDelegates","_zoneDelegates","newZone","_zone","ZoneTask","microTask","canceling","runCount","nativeMicroTaskQueuePromise","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","next","change","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","_microTaskQueue","_isDrainingMicrotaskQueue","func","nativeThen","currentZoneFrame","getGlobalObjects","patchCommon","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTarget_1","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","findPendingTask","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke_1","geolocation","patchPrototype","fnNames","_loop_1","name_1","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask","exports","__webpack_require__","module","BLOCK_MARKER$1","$localize$1","messageParts","_len","expressions","_key","translate","translation","stripBlock","raw","BLOCK_MARKER","messagePart","rawMessagePart","charAt","findEndOfBlock","cooked","cookedIndex","rawIndex","$localize","ɵ$localize","_classCallCheck","_defineProperties","r","o","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","A","_createClass","toPropertyKey","toPrimitive","esm_typeof","String","Number","_typeof"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/polyfills.ts","./node_modules/zone.js/bundles/zone.umd.js","./node_modules/@angular/localize/fesm2022/localize.mjs","./node_modules/@angular/localize/fesm2022/init.mjs","./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","./node_modules/@babel/runtime/helpers/esm/createClass.js","./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","'use strict';\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n})((function () {\n    'use strict';\n    var global = globalThis;\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    function __symbol__(name) {\n        var symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        return symbolPrefix + name;\n    }\n    function initZone() {\n        var _a;\n        var performance = global['performance'];\n        function mark(name) {\n            performance && performance['mark'] && performance['mark'](name);\n        }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        var ZoneImpl = /** @class */ (function () {\n            function ZoneImpl(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = (zoneSpec && zoneSpec.properties) || {};\n                this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            ZoneImpl.assertZonePatched = function () {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            };\n            Object.defineProperty(ZoneImpl, \"root\", {\n                get: function () {\n                    var zone = _a.current;\n                    while (zone.parent) {\n                        zone = zone.parent;\n                    }\n                    return zone;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(ZoneImpl, \"current\", {\n                get: function () {\n                    return _currentZoneFrame.zone;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(ZoneImpl, \"currentTask\", {\n                get: function () {\n                    return _currentTask;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            // tslint:disable-next-line:require-internal-with-underscore\n            ZoneImpl.__load_patch = function (name, fn, ignoreDuplicate) {\n                if (ignoreDuplicate === void 0) { ignoreDuplicate = false; }\n                if (patches.hasOwnProperty(name)) {\n                    // `checkDuplicate` option is defined from global variable\n                    // so it works for all modules.\n                    // `ignoreDuplicate` can work for the specified module\n                    var checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                    if (!ignoreDuplicate && checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    var perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, _a, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            };\n            Object.defineProperty(ZoneImpl.prototype, \"parent\", {\n                get: function () {\n                    return this._parent;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(ZoneImpl.prototype, \"name\", {\n                get: function () {\n                    return this._name;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            ZoneImpl.prototype.get = function (key) {\n                var zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            };\n            ZoneImpl.prototype.getZoneWith = function (key) {\n                var current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            };\n            ZoneImpl.prototype.fork = function (zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            };\n            ZoneImpl.prototype.wrap = function (callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                var _callback = this._zoneDelegate.intercept(this, callback, source);\n                var zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            };\n            ZoneImpl.prototype.run = function (callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            };\n            ZoneImpl.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n                if (applyThis === void 0) { applyThis = null; }\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            };\n            ZoneImpl.prototype.runTask = function (task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name +\n                        '; Execution: ' +\n                        this.name +\n                        ')');\n                }\n                var zoneTask = task;\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                var type = task.type, _b = task.data, _c = _b === void 0 ? {} : _b, _d = _c.isPeriodic, isPeriodic = _d === void 0 ? false : _d, _e = _c.isRefreshable, isRefreshable = _e === void 0 ? false : _e;\n                if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                    return;\n                }\n                var reEntryGuard = task.state != running;\n                reEntryGuard && zoneTask._transitionTo(running, scheduled);\n                var previousTask = _currentTask;\n                _currentTask = zoneTask;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    var state = task.state;\n                    if (state !== notScheduled && state !== unknown) {\n                        if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                            reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                        }\n                        else {\n                            var zoneDelegates = zoneTask._zoneDelegates;\n                            this._updateTaskCount(zoneTask, -1);\n                            reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                            if (isRefreshable) {\n                                zoneTask._zoneDelegates = zoneDelegates;\n                            }\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            };\n            ZoneImpl.prototype.scheduleTask = function (task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    var newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(\"can not reschedule task to \".concat(this.name, \" which is descendants of the original zone \").concat(task.zone.name));\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                var zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            };\n            ZoneImpl.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            };\n            ZoneImpl.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            };\n            ZoneImpl.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            };\n            ZoneImpl.prototype.cancelTask = function (task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name +\n                        '; Execution: ' +\n                        this.name +\n                        ')');\n                if (task.state !== scheduled && task.state !== running) {\n                    return;\n                }\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = -1;\n                return task;\n            };\n            ZoneImpl.prototype._updateTaskCount = function (task, count) {\n                var zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (var i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            };\n            return ZoneImpl;\n        }());\n        _a = ZoneImpl;\n        // tslint:disable-next-line:require-internal-with-underscore\n        (function () {\n            _a.__symbol__ = __symbol__;\n        })();\n        var DELEGATE_ZS = {\n            name: '',\n            onHasTask: function (delegate, _, target, hasTaskState) { return delegate.hasTask(target, hasTaskState); },\n            onScheduleTask: function (delegate, _, target, task) { return delegate.scheduleTask(target, task); },\n            onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) { return delegate.invokeTask(target, task, applyThis, applyArgs); },\n            onCancelTask: function (delegate, _, target, task) { return delegate.cancelTask(target, task); },\n        };\n        var _ZoneDelegate = /** @class */ (function () {\n            function _ZoneDelegate(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = {\n                    'microTask': 0,\n                    'macroTask': 0,\n                    'eventTask': 0,\n                };\n                this._zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt =\n                    zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt =\n                    zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone =\n                    zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = this._zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this._zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this._zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this._zone;\n                    }\n                }\n            }\n            Object.defineProperty(_ZoneDelegate.prototype, \"zone\", {\n                get: function () {\n                    return this._zone;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            _ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n                return this._forkZS\n                    ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                    : new ZoneImpl(targetZone, zoneSpec);\n            };\n            _ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n                return this._interceptZS\n                    ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                    : callback;\n            };\n            _ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS\n                    ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                    : callback.apply(applyThis, applyArgs);\n            };\n            _ZoneDelegate.prototype.handleError = function (targetZone, error) {\n                return this._handleErrorZS\n                    ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                    : true;\n            };\n            _ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n                var returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            };\n            _ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS\n                    ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                    : task.callback.apply(applyThis, applyArgs);\n            };\n            _ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n                var value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            };\n            _ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            };\n            // tslint:disable-next-line:require-internal-with-underscore\n            _ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n                var counts = this._taskCounts;\n                var prev = counts[type];\n                var next = (counts[type] = prev + count);\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    var isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type,\n                    };\n                    this.hasTask(this._zone, isEmpty);\n                }\n            };\n            return _ZoneDelegate;\n        }());\n        var ZoneTask = /** @class */ (function () {\n            function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                var self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            ZoneTask.invokeTask = function (task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            };\n            Object.defineProperty(ZoneTask.prototype, \"zone\", {\n                get: function () {\n                    return this._zone;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(ZoneTask.prototype, \"state\", {\n                get: function () {\n                    return this._state;\n                },\n                enumerable: false,\n                configurable: true\n            });\n            ZoneTask.prototype.cancelScheduleRequest = function () {\n                this._transitionTo(notScheduled, scheduling);\n            };\n            // tslint:disable-next-line:require-internal-with-underscore\n            ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(\"\".concat(this.type, \" '\").concat(this.source, \"': can not transition to '\").concat(toState, \"', expecting state '\").concat(fromState1, \"'\").concat(fromState2 ? \" or '\" + fromState2 + \"'\" : '', \", was '\").concat(this._state, \"'.\"));\n                }\n            };\n            ZoneTask.prototype.toString = function () {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            };\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            ZoneTask.prototype.toJSON = function () {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount,\n                };\n            };\n            return ZoneTask;\n        }());\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        var symbolSetTimeout = __symbol__('setTimeout');\n        var symbolPromise = __symbol__('Promise');\n        var symbolThen = __symbol__('then');\n        var _microTaskQueue = [];\n        var _isDrainingMicrotaskQueue = false;\n        var nativeMicroTaskQueuePromise;\n        function nativeScheduleMicroTask(func) {\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                var nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, func);\n            }\n            else {\n                global[symbolSetTimeout](func, 0);\n            }\n        }\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                nativeScheduleMicroTask(drainMicroTaskQueue);\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    var queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (var i = 0; i < queue.length; i++) {\n                        var task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        var NO_ZONE = { name: 'NO ZONE' };\n        var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        var patches = {};\n        var _api = {\n            symbol: __symbol__,\n            currentZoneFrame: function () { return _currentZoneFrame; },\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: function () { return !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')]; },\n            patchEventTarget: function () { return []; },\n            patchOnProperties: noop,\n            patchMethod: function () { return noop; },\n            bindArguments: function () { return []; },\n            patchThen: function () { return noop; },\n            patchMacroTask: function () { return noop; },\n            patchEventPrototype: function () { return noop; },\n            isIEOrEdge: function () { return false; },\n            getGlobalObjects: function () { return undefined; },\n            ObjectDefineProperty: function () { return noop; },\n            ObjectGetOwnPropertyDescriptor: function () { return undefined; },\n            ObjectCreate: function () { return undefined; },\n            ArraySlice: function () { return []; },\n            patchClass: function () { return noop; },\n            wrapWithCurrentZone: function () { return noop; },\n            filterProperties: function () { return []; },\n            attachOriginToPatched: function () { return noop; },\n            _redefineProperty: function () { return noop; },\n            patchCallbacks: function () { return noop; },\n            nativeScheduleMicroTask: nativeScheduleMicroTask,\n        };\n        var _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n        var _currentTask = null;\n        var _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return ZoneImpl;\n    }\n    function loadZone() {\n        var _a;\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        var global = globalThis;\n        var checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n            throw new Error('Zone already loaded.');\n        }\n        // Initialize global `Zone` constant.\n        (_a = global['Zone']) !== null && _a !== void 0 ? _a : (global['Zone'] = initZone());\n        return global['Zone'];\n    }\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    var ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    var ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    var ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    var ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    var ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    var REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    var ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    var ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    var TRUE_STR = 'true';\n    /** false string const */\n    var FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    var ZONE_SYMBOL_PREFIX = __symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    var zoneSymbol = __symbol__;\n    var isWindowExists = typeof window !== 'undefined';\n    var internalWindow = isWindowExists ? window : undefined;\n    var _global = (isWindowExists && internalWindow) || globalThis;\n    var REMOVE_ATTRIBUTE = 'removeAttribute';\n    function bindArguments(args, source) {\n        for (var i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        var source = prototype.constructor['name'];\n        var _loop_1 = function (i) {\n            var name_1 = fnNames[i];\n            var delegate = prototype[name_1];\n            if (delegate) {\n                var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    return \"continue\";\n                }\n                prototype[name_1] = (function (delegate) {\n                    var patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        };\n        for (var i = 0; i < fnNames.length; i++) {\n            _loop_1(i);\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    var isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    var isNode = !('nw' in _global) &&\n        typeof _global.process !== 'undefined' &&\n        _global.process.toString() === '[object process]';\n    var isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    var isMix = typeof _global.process !== 'undefined' &&\n        _global.process.toString() === '[object process]' &&\n        !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    var zoneSymbolEventNames$1 = {};\n    var enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\n    var wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        var eventNameSymbol = zoneSymbolEventNames$1[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        var target = this || event.target || _global;\n        var listener = target[eventNameSymbol];\n        var result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signature\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            var errorEvent = event;\n            result =\n                listener &&\n                    listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (\n            // https://github.com/angular/angular/issues/47579\n            // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n            // This is the only specific case we should check for. The spec defines that the\n            // `returnValue` attribute represents the message to show the user. When the event\n            // is created, this attribute must be set to the empty string.\n            event.type === 'beforeunload' &&\n                // To prevent any breaking changes resulting from this change, given that\n                // it was already causing a significant number of failures in G3, we have hidden\n                // that behavior behind a global configuration flag. Consumers can enable this\n                // flag explicitly if they want the `beforeunload` event to be handled as defined\n                // in the specification.\n                _global[enableBeforeunloadSymbol] &&\n                // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n                // `typeof result` is a string.\n                typeof result === 'string') {\n                event.returnValue = result;\n            }\n            else if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        var desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        var onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        var originalDescGet = desc.get;\n        var originalDescSet = desc.set;\n        // slice(2) cuz 'onclick' -> 'click', etc\n        var eventName = prop.slice(2);\n        var eventNameSymbol = zoneSymbolEventNames$1[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            var target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            var previousValue = target[eventNameSymbol];\n            if (typeof previousValue === 'function') {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            originalDescSet && originalDescSet.call(target, null);\n            target[eventNameSymbol] = newValue;\n            if (typeof newValue === 'function') {\n                target.addEventListener(eventName, wrapFn, false);\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            var target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            var listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                var value = originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (var i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            var onProperties = [];\n            for (var prop in obj) {\n                if (prop.slice(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (var j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    var originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        var OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            var a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        var instance = new OriginalClass(function () { });\n        var prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () {\n                            return this[originalInstanceKey][prop];\n                        },\n                    });\n                }\n            })(prop);\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function patchMethod(target, name, patchFn) {\n        var proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        var delegateName = zoneSymbol(name);\n        var delegate = null;\n        if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                var patchDelegate_1 = patchFn(delegate, delegateName, name);\n                proto[name] = function () {\n                    return patchDelegate_1(this, arguments);\n                };\n                attachOriginToPatched(proto[name], delegate);\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        var setNative = null;\n        function scheduleTask(task) {\n            var data = task.data;\n            data.args[data.cbIdx] = function () {\n                task.invoke.apply(this, arguments);\n            };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n            var meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        }; });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    var isDetectedIEOrEdge = false;\n    var ieOrEdge = false;\n    function isIE() {\n        try {\n            var ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) { }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            var ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) { }\n        return ieOrEdge;\n    }\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    function isNumber(value) {\n        return typeof value === 'number';\n    }\n    /**\n     * @fileoverview\n     * @suppress {missingRequire}\n     */\n    // Note that passive event listeners are now supported by most modern browsers,\n    // including Chrome, Firefox, Safari, and Edge. There's a pending change that\n    // would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n    // from the codebase will reduce the final code size for existing apps that still use zone.js.\n    var passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            var options = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    passiveSupported = true;\n                },\n            });\n            // Note: We pass the `options` object as the event handler too. This is not compatible with the\n            // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n            // without an actual handler.\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    var OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true,\n    };\n    var zoneSymbolEventNames = {};\n    var globalSources = {};\n    var EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    var IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        var falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        var trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, api, apis, patchOptions) {\n        var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        var PREPEND_EVENT_LISTENER = 'prependListener';\n        var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        var invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            var delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = function (event) { return delegate.handleEvent(event); };\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            // need to try/catch error here, otherwise, the error in one event listener\n            // will break the executions of the other event listeners. Also error will\n            // not remove the event listener when `once` options is true.\n            var error;\n            try {\n                task.invoke(task, target, [event]);\n            }\n            catch (err) {\n                error = err;\n            }\n            var options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);\n            }\n            return error;\n        };\n        function globalCallback(context, event, isCapture) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            var target = context || event.target || _global;\n            var tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n            if (tasks) {\n                var errors = [];\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    var err = invokeTask(tasks[0], target, event);\n                    err && errors.push(err);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    var copyTasks = tasks.slice();\n                    for (var i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        var err = invokeTask(copyTasks[i], target, event);\n                        err && errors.push(err);\n                    }\n                }\n                // Since there is only one error, we don't need to schedule microTask\n                // to throw the error.\n                if (errors.length === 1) {\n                    throw errors[0];\n                }\n                else {\n                    var _loop_2 = function (i) {\n                        var err = errors[i];\n                        api.nativeScheduleMicroTask(function () {\n                            throw err;\n                        });\n                    };\n                    for (var i = 0; i < errors.length; i++) {\n                        _loop_2(i);\n                    }\n                }\n            }\n        }\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        var globalZoneAwareCallback = function (event) {\n            return globalCallback(this, event, false);\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        var globalZoneAwareCaptureCallback = function (event) {\n            return globalCallback(this, event, true);\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            var useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            var validateHandler = patchOptions && patchOptions.vh;\n            var checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            var returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            var proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            var eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n            // eliminating the need to create a new object solely for passing data.\n            // WARNING: This object has a static lifetime, meaning it is not created\n            // each time `addEventListener` is called. It is instantiated only once\n            // and captured by reference inside the `addEventListener` and\n            // `removeEventListener` functions. Do not add any new properties to this\n            // object, as doing so would necessitate maintaining the information\n            // between `addEventListener` calls.\n            var taskData = {};\n            var nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n            var nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER]);\n            var nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER]);\n            var nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n            var nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return __assign(__assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            var customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            /**\n             * In the context of events and listeners, this function will be\n             * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n             * Cancelling a task is primarily used to remove event listeners from\n             * the task target.\n             */\n            var customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    var symbolEventNames = zoneSymbolEventNames[task.eventName];\n                    var symbolEventName = void 0;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    var existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (var i = 0; i < existingTasks.length; i++) {\n                            var existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (task.removeAbortListener) {\n                                    task.removeAbortListener();\n                                    task.removeAbortListener = null;\n                                }\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            var customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            var customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            var customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            var compareTaskCallbackVsDelegate = function (task, delegate) {\n                var typeOfDelegate = typeof delegate;\n                return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n            };\n            var compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            var unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n            var passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            function copyEventListenerOptions(options) {\n                if (typeof options === 'object' && options !== null) {\n                    // We need to destructure the target `options` object since it may\n                    // be frozen or sealed (possibly provided implicitly by a third-party\n                    // library), or its properties may be readonly.\n                    var newOptions = __assign({}, options);\n                    // The `signal` option was recently introduced, which caused regressions in\n                    // third-party scenarios where `AbortController` was directly provided to\n                    // `addEventListener` as options. For instance, in cases like\n                    // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                    // which is valid because `AbortController` includes a `signal` getter, spreading\n                    // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                    // isn't feasible since `AbortController` is a built-in object type, and attempting\n                    // to create a new object directly with it as the prototype might result in\n                    // unexpected behavior.\n                    if (options.signal) {\n                        newOptions.signal = options.signal;\n                    }\n                    return newOptions;\n                }\n                return options;\n            }\n            var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {\n                if (returnTarget === void 0) { returnTarget = false; }\n                if (prepend === void 0) { prepend = false; }\n                return function () {\n                    var target = this || _global;\n                    var eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    var delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    var isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    var passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    var options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                    var signal = options === null || options === void 0 ? void 0 : options.signal;\n                    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n                        // the signal is an aborted one, just return without attaching the event listener.\n                        return;\n                    }\n                    if (unpatchedEvents) {\n                        // check unpatched list\n                        for (var i = 0; i < unpatchedEvents.length; i++) {\n                            if (eventName === unpatchedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    var capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    var once = options && typeof options === 'object' ? options.once : false;\n                    var zone = Zone.current;\n                    var symbolEventNames = zoneSymbolEventNames[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames[eventName];\n                    }\n                    var symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    var existingTasks = target[symbolEventName];\n                    var isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (var i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    var source;\n                    var constructorName = target.constructor['name'];\n                    var targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source =\n                            constructorName +\n                                addSource +\n                                (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // In the code below, `options` should no longer be reassigned; instead, it\n                    // should only be mutated. This is because we pass that object to the native\n                    // `addEventListener`.\n                    // It's generally recommended to use the same object reference for options.\n                    // This ensures consistency and avoids potential issues.\n                    taskData.options = options;\n                    if (once) {\n                        // When using `addEventListener` with the `once` option, we don't pass\n                        // the `once` option directly to the native `addEventListener` method.\n                        // Instead, we keep the `once` setting and handle it ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    if (signal) {\n                        // When using `addEventListener` with the `signal` option, we don't pass\n                        // the `signal` option directly to the native `addEventListener` method.\n                        // Instead, we keep the `signal` setting and handle it ourselves.\n                        taskData.options.signal = undefined;\n                    }\n                    // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                    // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                    // is updated before scheduling the task, as `customScheduleGlobal` uses\n                    // `taskData.options` to pass it to the native `addEventListener`.\n                    var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    if (signal) {\n                        // after task is scheduled, we need to store the signal back to task.options\n                        taskData.options.signal = signal;\n                        // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                        // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                        // as it's an event listener, so its closure retains a strong reference to the `task`.\n                        var onAbort_1 = function () { return task.zone.cancelTask(task); };\n                        nativeListener.call(signal, 'abort', onAbort_1, { once: true });\n                        // We need to remove the `abort` listener when the event listener is going to be removed,\n                        // as it creates a closure that captures `task`. This closure retains a reference to the\n                        // `task` object even after it goes out of scope, preventing `task` from being garbage\n                        // collected.\n                        task.removeAbortListener = function () { return signal.removeEventListener('abort', onAbort_1); };\n                    }\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        taskData.options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                var target = this || _global;\n                var eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                var options = arguments[2];\n                var capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                var delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                var symbolEventNames = zoneSymbolEventNames[eventName];\n                var symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = symbolEventName && target[symbolEventName];\n                // `existingTasks` may not exist if the `addEventListener` was called before\n                // it was patched by zone.js. Please refer to the attached issue for\n                // clarification, particularly after the `if` condition, before calling\n                // the native `removeEventListener`.\n                if (existingTasks) {\n                    for (var i = 0; i < existingTasks.length; i++) {\n                        var existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates with capture=false were removed\n                                // https:// github.com/angular/angular/issues/31643\n                                // https://github.com/angular/angular/issues/54581\n                                if (!capture && typeof eventName === 'string') {\n                                    var onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            // In all other conditions, when `addEventListener` is called after being\n                            // patched by zone.js, we would always find an event task on the `EventTarget`.\n                            // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                            // which ultimately removes an event listener and cleans up the abort listener\n                            // (if an `AbortSignal` was provided when scheduling a task).\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // https://github.com/angular/zone.js/issues/930\n                // We may encounter a situation where the `addEventListener` was\n                // called on the event target before zone.js is loaded, resulting\n                // in no task being stored on the event target due to its invocation\n                // of the native implementation. In this scenario, we simply need to\n                // invoke the native `removeEventListener`.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                var target = this || _global;\n                var eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                var listeners = [];\n                var tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (var i = 0; i < tasks.length; i++) {\n                    var task = tasks[i];\n                    var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                var target = this || _global;\n                var eventName = arguments[0];\n                if (!eventName) {\n                    var keys = Object.keys(target);\n                    for (var i = 0; i < keys.length; i++) {\n                        var prop = keys[i];\n                        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        var evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    var symbolEventNames = zoneSymbolEventNames[eventName];\n                    if (symbolEventNames) {\n                        var symbolEventName = symbolEventNames[FALSE_STR];\n                        var symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        var tasks = target[symbolEventName];\n                        var captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            var removeTasks = tasks.slice();\n                            for (var i = 0; i < removeTasks.length; i++) {\n                                var task = removeTasks[i];\n                                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            var removeTasks = captureTasks.slice();\n                            for (var i = 0; i < removeTasks.length; i++) {\n                                var task = removeTasks[i];\n                                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        var results = [];\n        for (var i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            var foundTasks = [];\n            for (var prop in target) {\n                var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                var evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    var tasks = target[prop];\n                    if (tasks) {\n                        for (var i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        var symbolEventName = zoneSymbolEventNames[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames[eventName];\n        }\n        var captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        var captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks\n                ? captureFalseTasks.concat(captureTrueTasks)\n                : captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        var Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            }; });\n        }\n    }\n    /**\n     * @fileoverview\n     * @suppress {missingRequire}\n     */\n    function patchQueueMicrotask(global, api) {\n        api.patchMethod(global, 'queueMicrotask', function (delegate) {\n            return function (self, args) {\n                Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n            };\n        });\n    }\n    /**\n     * @fileoverview\n     * @suppress {missingRequire}\n     */\n    var taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        var setNative = null;\n        var clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        var tasksByHandleId = {};\n        function scheduleTask(task) {\n            var data = task.data;\n            data.args[0] = function () {\n                return task.invoke.apply(this, arguments);\n            };\n            var handleOrId = setNative.apply(window, data.args);\n            // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n            // to this so that we do not cause potentally leaks when using `setTimeout`\n            // since this can be periodic when using `.refresh`.\n            if (isNumber(handleOrId)) {\n                data.handleId = handleOrId;\n            }\n            else {\n                data.handle = handleOrId;\n                // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n                data.isRefreshable = isFunction(handleOrId.refresh);\n            }\n            return task;\n        }\n        function clearTask(task) {\n            var _a = task.data, handle = _a.handle, handleId = _a.handleId;\n            return clearNative.call(window, handle !== null && handle !== void 0 ? handle : handleId);\n        }\n        setNative = patchMethod(window, setName, function (delegate) { return function (self, args) {\n            var _a;\n            if (isFunction(args[0])) {\n                var options_1 = {\n                    isRefreshable: false,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                    args: args,\n                };\n                var callback_1 = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback_1.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        var handle_1 = options_1.handle, handleId_1 = options_1.handleId, isPeriodic_1 = options_1.isPeriodic, isRefreshable_1 = options_1.isRefreshable;\n                        if (!isPeriodic_1 && !isRefreshable_1) {\n                            if (handleId_1) {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[handleId_1];\n                            }\n                            else if (handle_1) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                handle_1[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                var task_1 = scheduleMacroTaskWithCurrentZone(setName, args[0], options_1, scheduleTask, clearTask);\n                if (!task_1) {\n                    return task_1;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var _b = task_1.data, handleId = _b.handleId, handle = _b.handle, isRefreshable = _b.isRefreshable, isPeriodic = _b.isPeriodic;\n                if (handleId) {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handleId] = task_1;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task_1;\n                    if (isRefreshable && !isPeriodic) {\n                        var originalRefresh_1 = handle.refresh;\n                        handle.refresh = function () {\n                            var zone = task_1.zone, state = task_1.state;\n                            if (state === 'notScheduled') {\n                                task_1._state = 'scheduled';\n                                zone._updateTaskCount(task_1, 1);\n                            }\n                            else if (state === 'running') {\n                                task_1._state = 'scheduling';\n                            }\n                            return originalRefresh_1.call(this);\n                        };\n                    }\n                }\n                return (_a = handle !== null && handle !== void 0 ? handle : handleId) !== null && _a !== void 0 ? _a : task_1;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n        clearNative = patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var id = args[0];\n            var task;\n            if (isNumber(id)) {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n                delete tasksByHandleId[id];\n            }\n            else {\n                // nodejs env ?? other environments.\n                task = id === null || id === void 0 ? void 0 : id[taskSymbol];\n                if (task) {\n                    id[taskSymbol] = null;\n                }\n                else {\n                    task = id;\n                }\n            }\n            if (task === null || task === void 0 ? void 0 : task.type) {\n                if (task.cancelFn) {\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n    }\n    function patchCustomElements(_global, api) {\n        var _a = api.getGlobalObjects(), isBrowser = _a.isBrowser, isMix = _a.isMix;\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n        var callbacks = [\n            'connectedCallback',\n            'disconnectedCallback',\n            'adoptedCallback',\n            'attributeChangedCallback',\n            'formAssociatedCallback',\n            'formDisabledCallback',\n            'formResetCallback',\n            'formStateRestoreCallback',\n        ];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        var _a = api.getGlobalObjects(), eventNames = _a.eventNames, zoneSymbolEventNames = _a.zoneSymbolEventNames, TRUE_STR = _a.TRUE_STR, FALSE_STR = _a.FALSE_STR, ZONE_SYMBOL_PREFIX = _a.ZONE_SYMBOL_PREFIX;\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (var i = 0; i < eventNames.length; i++) {\n            var eventName = eventNames[i];\n            var falseEventName = eventName + FALSE_STR;\n            var trueEventName = eventName + TRUE_STR;\n            var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        var EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n    /**\n     * @fileoverview\n     * @suppress {globalThis}\n     */\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        var targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        var filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    /**\n     * Get all event name properties which the event name startsWith `on`\n     * from the target object itself, inherited properties are not considered.\n     */\n    function getOnEventNames(target) {\n        return Object.getOwnPropertyNames(target)\n            .filter(function (name) { return name.startsWith('on') && name.length > 2; })\n            .map(function (name) { return name.substring(2); });\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        var ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        var patchTargets = [];\n        if (isBrowser) {\n            var internalWindow_1 = window;\n            patchTargets = patchTargets.concat([\n                'Document',\n                'SVGElement',\n                'Element',\n                'HTMLElement',\n                'HTMLBodyElement',\n                'HTMLMediaElement',\n                'HTMLFrameSetElement',\n                'HTMLFrameElement',\n                'HTMLIFrameElement',\n                'HTMLMarqueeElement',\n                'Worker',\n            ]);\n            var ignoreErrorProperties = isIE()\n                ? [{ target: internalWindow_1, ignoreProperties: ['error'] }]\n                : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow_1, getOnEventNames(internalWindow_1), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow_1));\n        }\n        patchTargets = patchTargets.concat([\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'IDBIndex',\n            'IDBRequest',\n            'IDBOpenDBRequest',\n            'IDBDatabase',\n            'IDBTransaction',\n            'IDBCursor',\n            'WebSocket',\n        ]);\n        for (var i = 0; i < patchTargets.length; i++) {\n            var target = _global[patchTargets[i]];\n            target &&\n                target.prototype &&\n                patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n        }\n    }\n    /**\n     * @fileoverview\n     * @suppress {missingRequire}\n     */\n    function patchBrowser(Zone) {\n        Zone.__load_patch('legacy', function (global) {\n            var legacyPatch = global[Zone.__symbol__('legacyPatch')];\n            if (legacyPatch) {\n                legacyPatch();\n            }\n        });\n        Zone.__load_patch('timers', function (global) {\n            var set = 'set';\n            var clear = 'clear';\n            patchTimer(global, set, clear, 'Timeout');\n            patchTimer(global, set, clear, 'Interval');\n            patchTimer(global, set, clear, 'Immediate');\n        });\n        Zone.__load_patch('requestAnimationFrame', function (global) {\n            patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n            patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n            patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n        });\n        Zone.__load_patch('blocking', function (global, Zone) {\n            var blockingMethods = ['alert', 'prompt', 'confirm'];\n            for (var i = 0; i < blockingMethods.length; i++) {\n                var name_2 = blockingMethods[i];\n                patchMethod(global, name_2, function (delegate, symbol, name) {\n                    return function (s, args) {\n                        return Zone.current.run(delegate, global, args, name);\n                    };\n                });\n            }\n        });\n        Zone.__load_patch('EventTarget', function (global, Zone, api) {\n            patchEvent(global, api);\n            eventTargetPatch(global, api);\n            // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n            var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n                api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n            }\n        });\n        Zone.__load_patch('MutationObserver', function (global, Zone, api) {\n            patchClass('MutationObserver');\n            patchClass('WebKitMutationObserver');\n        });\n        Zone.__load_patch('IntersectionObserver', function (global, Zone, api) {\n            patchClass('IntersectionObserver');\n        });\n        Zone.__load_patch('FileReader', function (global, Zone, api) {\n            patchClass('FileReader');\n        });\n        Zone.__load_patch('on_property', function (global, Zone, api) {\n            propertyDescriptorPatch(api, global);\n        });\n        Zone.__load_patch('customElements', function (global, Zone, api) {\n            patchCustomElements(global, api);\n        });\n        Zone.__load_patch('XHR', function (global, Zone) {\n            // Treat XMLHttpRequest as a macrotask.\n            patchXHR(global);\n            var XHR_TASK = zoneSymbol('xhrTask');\n            var XHR_SYNC = zoneSymbol('xhrSync');\n            var XHR_LISTENER = zoneSymbol('xhrListener');\n            var XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n            var XHR_URL = zoneSymbol('xhrURL');\n            var XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n            function patchXHR(window) {\n                var XMLHttpRequest = window['XMLHttpRequest'];\n                if (!XMLHttpRequest) {\n                    // XMLHttpRequest is not available in service worker\n                    return;\n                }\n                var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n                function findPendingTask(target) {\n                    return target[XHR_TASK];\n                }\n                var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                if (!oriAddListener) {\n                    var XMLHttpRequestEventTarget_1 = window['XMLHttpRequestEventTarget'];\n                    if (XMLHttpRequestEventTarget_1) {\n                        var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget_1.prototype;\n                        oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                        oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                    }\n                }\n                var READY_STATE_CHANGE = 'readystatechange';\n                var SCHEDULED = 'scheduled';\n                function scheduleTask(task) {\n                    var data = task.data;\n                    var target = data.target;\n                    target[XHR_SCHEDULED] = false;\n                    target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                    // remove existing event listener\n                    var listener = target[XHR_LISTENER];\n                    if (!oriAddListener) {\n                        oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                        oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                    }\n                    if (listener) {\n                        oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                    }\n                    var newListener = (target[XHR_LISTENER] = function () {\n                        if (target.readyState === target.DONE) {\n                            // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                            // readyState=4 multiple times, so we need to check task state here\n                            if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                                // check whether the xhr has registered onload listener\n                                // if that is the case, the task should invoke after all\n                                // onload listeners finish.\n                                // Also if the request failed without response (status = 0), the load event handler\n                                // will not be triggered, in that case, we should also invoke the placeholder callback\n                                // to close the XMLHttpRequest::send macroTask.\n                                // https://github.com/angular/angular/issues/38795\n                                var loadTasks = target[Zone.__symbol__('loadfalse')];\n                                if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                    var oriInvoke_1 = task.invoke;\n                                    task.invoke = function () {\n                                        // need to load the tasks again, because in other\n                                        // load listener, they may remove themselves\n                                        var loadTasks = target[Zone.__symbol__('loadfalse')];\n                                        for (var i = 0; i < loadTasks.length; i++) {\n                                            if (loadTasks[i] === task) {\n                                                loadTasks.splice(i, 1);\n                                            }\n                                        }\n                                        if (!data.aborted && task.state === SCHEDULED) {\n                                            oriInvoke_1.call(task);\n                                        }\n                                    };\n                                    loadTasks.push(task);\n                                }\n                                else {\n                                    task.invoke();\n                                }\n                            }\n                            else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                                // error occurs when xhr.send()\n                                target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                            }\n                        }\n                    });\n                    oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                    var storedTask = target[XHR_TASK];\n                    if (!storedTask) {\n                        target[XHR_TASK] = task;\n                    }\n                    sendNative.apply(target, data.args);\n                    target[XHR_SCHEDULED] = true;\n                    return task;\n                }\n                function placeholderCallback() { }\n                function clearTask(task) {\n                    var data = task.data;\n                    // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                    // to prevent it from firing. So instead, we store info for the event listener.\n                    data.aborted = true;\n                    return abortNative.apply(data.target, data.args);\n                }\n                var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {\n                    self[XHR_SYNC] = args[2] == false;\n                    self[XHR_URL] = args[1];\n                    return openNative.apply(self, args);\n                }; });\n                var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n                var fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n                var fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n                var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {\n                    if (Zone.current[fetchTaskScheduling] === true) {\n                        // a fetch is scheduling, so we are using xhr to polyfill fetch\n                        // and because we already schedule macroTask for fetch, we should\n                        // not schedule a macroTask for xhr again\n                        return sendNative.apply(self, args);\n                    }\n                    if (self[XHR_SYNC]) {\n                        // if the XHR is sync there is no task to schedule, just execute the code.\n                        return sendNative.apply(self, args);\n                    }\n                    else {\n                        var options = {\n                            target: self,\n                            url: self[XHR_URL],\n                            isPeriodic: false,\n                            args: args,\n                            aborted: false,\n                        };\n                        var task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                        if (self &&\n                            self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                            !options.aborted &&\n                            task.state === SCHEDULED) {\n                            // xhr request throw error when send\n                            // we should invoke task instead of leaving a scheduled\n                            // pending macroTask\n                            task.invoke();\n                        }\n                    }\n                }; });\n                var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self, args) {\n                    var task = findPendingTask(self);\n                    if (task && typeof task.type == 'string') {\n                        // If the XHR has already completed, do nothing.\n                        // If the XHR has already been aborted, do nothing.\n                        // Fix #569, call abort multiple times before done will cause\n                        // macroTask task count be negative number\n                        if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                            return;\n                        }\n                        task.zone.cancelTask(task);\n                    }\n                    else if (Zone.current[fetchTaskAborting] === true) {\n                        // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                        return abortNative.apply(self, args);\n                    }\n                    // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                    // task\n                    // to cancel. Do nothing.\n                }; });\n            }\n        });\n        Zone.__load_patch('geolocation', function (global) {\n            /// GEO_LOCATION\n            if (global['navigator'] && global['navigator'].geolocation) {\n                patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n            }\n        });\n        Zone.__load_patch('PromiseRejectionEvent', function (global, Zone) {\n            // handle unhandled promise rejection\n            function findPromiseRejectionHandler(evtName) {\n                return function (e) {\n                    var eventTasks = findEventTasks(global, evtName);\n                    eventTasks.forEach(function (eventTask) {\n                        // windows has added unhandledrejection event listener\n                        // trigger the event listener\n                        var PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                        if (PromiseRejectionEvent) {\n                            var evt = new PromiseRejectionEvent(evtName, {\n                                promise: e.promise,\n                                reason: e.rejection,\n                            });\n                            eventTask.invoke(evt);\n                        }\n                    });\n                };\n            }\n            if (global['PromiseRejectionEvent']) {\n                Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                    findPromiseRejectionHandler('unhandledrejection');\n                Zone[zoneSymbol('rejectionHandledHandler')] =\n                    findPromiseRejectionHandler('rejectionhandled');\n            }\n        });\n        Zone.__load_patch('queueMicrotask', function (global, Zone, api) {\n            patchQueueMicrotask(global, api);\n        });\n    }\n    function patchPromise(Zone) {\n        Zone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {\n            var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n            var ObjectDefineProperty = Object.defineProperty;\n            function readableObjectToString(obj) {\n                if (obj && obj.toString === Object.prototype.toString) {\n                    var className = obj.constructor && obj.constructor.name;\n                    return (className ? className : '') + ': ' + JSON.stringify(obj);\n                }\n                return obj ? obj.toString() : Object.prototype.toString.call(obj);\n            }\n            var __symbol__ = api.symbol;\n            var _uncaughtPromiseErrors = [];\n            var isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n            var symbolPromise = __symbol__('Promise');\n            var symbolThen = __symbol__('then');\n            var creationTrace = '__creationTrace__';\n            api.onUnhandledError = function (e) {\n                if (api.showUncaughtError()) {\n                    var rejection = e && e.rejection;\n                    if (rejection) {\n                        console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                    }\n                    else {\n                        console.error(e);\n                    }\n                }\n            };\n            api.microtaskDrainDone = function () {\n                var _loop_3 = function () {\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(function () {\n                            if (uncaughtPromiseError.throwOriginal) {\n                                throw uncaughtPromiseError.rejection;\n                            }\n                            throw uncaughtPromiseError;\n                        });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                };\n                while (_uncaughtPromiseErrors.length) {\n                    _loop_3();\n                }\n            };\n            var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n            function handleUnhandledRejection(e) {\n                api.onUnhandledError(e);\n                try {\n                    var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                    if (typeof handler === 'function') {\n                        handler.call(this, e);\n                    }\n                }\n                catch (err) { }\n            }\n            function isThenable(value) {\n                return value && value.then;\n            }\n            function forwardResolution(value) {\n                return value;\n            }\n            function forwardRejection(rejection) {\n                return ZoneAwarePromise.reject(rejection);\n            }\n            var symbolState = __symbol__('state');\n            var symbolValue = __symbol__('value');\n            var symbolFinally = __symbol__('finally');\n            var symbolParentPromiseValue = __symbol__('parentPromiseValue');\n            var symbolParentPromiseState = __symbol__('parentPromiseState');\n            var source = 'Promise.then';\n            var UNRESOLVED = null;\n            var RESOLVED = true;\n            var REJECTED = false;\n            var REJECTED_NO_CATCH = 0;\n            function makeResolver(promise, state) {\n                return function (v) {\n                    try {\n                        resolvePromise(promise, state, v);\n                    }\n                    catch (err) {\n                        resolvePromise(promise, false, err);\n                    }\n                    // Do not return value or you will break the Promise spec.\n                };\n            }\n            var once = function () {\n                var wasCalled = false;\n                return function wrapper(wrappedFunction) {\n                    return function () {\n                        if (wasCalled) {\n                            return;\n                        }\n                        wasCalled = true;\n                        wrappedFunction.apply(null, arguments);\n                    };\n                };\n            };\n            var TYPE_ERROR = 'Promise resolved with itself';\n            var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n            // Promise Resolution\n            function resolvePromise(promise, state, value) {\n                var onceWrapper = once();\n                if (promise === value) {\n                    throw new TypeError(TYPE_ERROR);\n                }\n                if (promise[symbolState] === UNRESOLVED) {\n                    // should only get value.then once based on promise spec.\n                    var then = null;\n                    try {\n                        if (typeof value === 'object' || typeof value === 'function') {\n                            then = value && value.then;\n                        }\n                    }\n                    catch (err) {\n                        onceWrapper(function () {\n                            resolvePromise(promise, false, err);\n                        })();\n                        return promise;\n                    }\n                    // if (value instanceof ZoneAwarePromise) {\n                    if (state !== REJECTED &&\n                        value instanceof ZoneAwarePromise &&\n                        value.hasOwnProperty(symbolState) &&\n                        value.hasOwnProperty(symbolValue) &&\n                        value[symbolState] !== UNRESOLVED) {\n                        clearRejectedNoCatch(value);\n                        resolvePromise(promise, value[symbolState], value[symbolValue]);\n                    }\n                    else if (state !== REJECTED && typeof then === 'function') {\n                        try {\n                            then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                        }\n                        catch (err) {\n                            onceWrapper(function () {\n                                resolvePromise(promise, false, err);\n                            })();\n                        }\n                    }\n                    else {\n                        promise[symbolState] = state;\n                        var queue = promise[symbolValue];\n                        promise[symbolValue] = value;\n                        if (promise[symbolFinally] === symbolFinally) {\n                            // the promise is generated by Promise.prototype.finally\n                            if (state === RESOLVED) {\n                                // the state is resolved, should ignore the value\n                                // and use parent promise value\n                                promise[symbolState] = promise[symbolParentPromiseState];\n                                promise[symbolValue] = promise[symbolParentPromiseValue];\n                            }\n                        }\n                        // record task information in value when error occurs, so we can\n                        // do some additional work such as render longStackTrace\n                        if (state === REJECTED && value instanceof Error) {\n                            // check if longStackTraceZone is here\n                            var trace = Zone.currentTask &&\n                                Zone.currentTask.data &&\n                                Zone.currentTask.data[creationTrace];\n                            if (trace) {\n                                // only keep the long stack trace into error when in longStackTraceZone\n                                ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                    configurable: true,\n                                    enumerable: false,\n                                    writable: true,\n                                    value: trace,\n                                });\n                            }\n                        }\n                        for (var i = 0; i < queue.length;) {\n                            scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                        }\n                        if (queue.length == 0 && state == REJECTED) {\n                            promise[symbolState] = REJECTED_NO_CATCH;\n                            var uncaughtPromiseError = value;\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' +\n                                    readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                            if (isDisableWrappingUncaughtPromiseRejection) {\n                                // If disable wrapping uncaught promise reject\n                                // use the value instead of wrapping it.\n                                uncaughtPromiseError.throwOriginal = true;\n                            }\n                            uncaughtPromiseError.rejection = value;\n                            uncaughtPromiseError.promise = promise;\n                            uncaughtPromiseError.zone = Zone.current;\n                            uncaughtPromiseError.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n                // Resolving an already resolved promise is a noop.\n                return promise;\n            }\n            var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n            function clearRejectedNoCatch(promise) {\n                if (promise[symbolState] === REJECTED_NO_CATCH) {\n                    // if the promise is rejected no catch status\n                    // and queue.length > 0, means there is a error handler\n                    // here to handle the rejected promise, we should trigger\n                    // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                    // eventHandler\n                    try {\n                        var handler = Zone[REJECTION_HANDLED_HANDLER];\n                        if (handler && typeof handler === 'function') {\n                            handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                        }\n                    }\n                    catch (err) { }\n                    promise[symbolState] = REJECTED;\n                    for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                        if (promise === _uncaughtPromiseErrors[i].promise) {\n                            _uncaughtPromiseErrors.splice(i, 1);\n                        }\n                    }\n                }\n            }\n            function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n                clearRejectedNoCatch(promise);\n                var promiseState = promise[symbolState];\n                var delegate = promiseState\n                    ? typeof onFulfilled === 'function'\n                        ? onFulfilled\n                        : forwardResolution\n                    : typeof onRejected === 'function'\n                        ? onRejected\n                        : forwardRejection;\n                zone.scheduleMicroTask(source, function () {\n                    try {\n                        var parentPromiseValue = promise[symbolValue];\n                        var isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                        if (isFinallyPromise) {\n                            // if the promise is generated from finally call, keep parent promise's state and value\n                            chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                            chainPromise[symbolParentPromiseState] = promiseState;\n                        }\n                        // should not pass value to finally callback\n                        var value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                            ? []\n                            : [parentPromiseValue]);\n                        resolvePromise(chainPromise, true, value);\n                    }\n                    catch (error) {\n                        // if error occurs, should always return this error\n                        resolvePromise(chainPromise, false, error);\n                    }\n                }, chainPromise);\n            }\n            var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n            var noop = function () { };\n            var AggregateError = global.AggregateError;\n            var ZoneAwarePromise = /** @class */ (function () {\n                function ZoneAwarePromise(executor) {\n                    var promise = this;\n                    if (!(promise instanceof ZoneAwarePromise)) {\n                        throw new Error('Must be an instanceof Promise.');\n                    }\n                    promise[symbolState] = UNRESOLVED;\n                    promise[symbolValue] = []; // queue;\n                    try {\n                        var onceWrapper = once();\n                        executor &&\n                            executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                    }\n                    catch (error) {\n                        resolvePromise(promise, false, error);\n                    }\n                }\n                ZoneAwarePromise.toString = function () {\n                    return ZONE_AWARE_PROMISE_TO_STRING;\n                };\n                ZoneAwarePromise.resolve = function (value) {\n                    if (value instanceof ZoneAwarePromise) {\n                        return value;\n                    }\n                    return resolvePromise(new this(null), RESOLVED, value);\n                };\n                ZoneAwarePromise.reject = function (error) {\n                    return resolvePromise(new this(null), REJECTED, error);\n                };\n                ZoneAwarePromise.withResolvers = function () {\n                    var result = {};\n                    result.promise = new ZoneAwarePromise(function (res, rej) {\n                        result.resolve = res;\n                        result.reject = rej;\n                    });\n                    return result;\n                };\n                ZoneAwarePromise.any = function (values) {\n                    if (!values || typeof values[Symbol.iterator] !== 'function') {\n                        return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                    }\n                    var promises = [];\n                    var count = 0;\n                    try {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var v = values_1[_i];\n                            count++;\n                            promises.push(ZoneAwarePromise.resolve(v));\n                        }\n                    }\n                    catch (err) {\n                        return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                    }\n                    if (count === 0) {\n                        return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                    }\n                    var finished = false;\n                    var errors = [];\n                    return new ZoneAwarePromise(function (resolve, reject) {\n                        for (var i = 0; i < promises.length; i++) {\n                            promises[i].then(function (v) {\n                                if (finished) {\n                                    return;\n                                }\n                                finished = true;\n                                resolve(v);\n                            }, function (err) {\n                                errors.push(err);\n                                count--;\n                                if (count === 0) {\n                                    finished = true;\n                                    reject(new AggregateError(errors, 'All promises were rejected'));\n                                }\n                            });\n                        }\n                    });\n                };\n                ZoneAwarePromise.race = function (values) {\n                    var resolve;\n                    var reject;\n                    var promise = new this(function (res, rej) {\n                        resolve = res;\n                        reject = rej;\n                    });\n                    function onResolve(value) {\n                        resolve(value);\n                    }\n                    function onReject(error) {\n                        reject(error);\n                    }\n                    for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                        var value = values_2[_i];\n                        if (!isThenable(value)) {\n                            value = this.resolve(value);\n                        }\n                        value.then(onResolve, onReject);\n                    }\n                    return promise;\n                };\n                ZoneAwarePromise.all = function (values) {\n                    return ZoneAwarePromise.allWithCallback(values);\n                };\n                ZoneAwarePromise.allSettled = function (values) {\n                    var P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                    return P.allWithCallback(values, {\n                        thenCallback: function (value) { return ({ status: 'fulfilled', value: value }); },\n                        errorCallback: function (err) { return ({ status: 'rejected', reason: err }); },\n                    });\n                };\n                ZoneAwarePromise.allWithCallback = function (values, callback) {\n                    var resolve;\n                    var reject;\n                    var promise = new this(function (res, rej) {\n                        resolve = res;\n                        reject = rej;\n                    });\n                    // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                    var unresolvedCount = 2;\n                    var valueIndex = 0;\n                    var resolvedValues = [];\n                    var _loop_4 = function (value) {\n                        if (!isThenable(value)) {\n                            value = this_1.resolve(value);\n                        }\n                        var curValueIndex = valueIndex;\n                        try {\n                            value.then(function (value) {\n                                resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }, function (err) {\n                                if (!callback) {\n                                    reject(err);\n                                }\n                                else {\n                                    resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                    unresolvedCount--;\n                                    if (unresolvedCount === 0) {\n                                        resolve(resolvedValues);\n                                    }\n                                }\n                            });\n                        }\n                        catch (thenErr) {\n                            reject(thenErr);\n                        }\n                        unresolvedCount++;\n                        valueIndex++;\n                    };\n                    var this_1 = this;\n                    for (var _i = 0, values_3 = values; _i < values_3.length; _i++) {\n                        var value = values_3[_i];\n                        _loop_4(value);\n                    }\n                    // Make the unresolvedCount zero-based again.\n                    unresolvedCount -= 2;\n                    if (unresolvedCount === 0) {\n                        resolve(resolvedValues);\n                    }\n                    return promise;\n                };\n                Object.defineProperty(ZoneAwarePromise.prototype, Symbol.toStringTag, {\n                    get: function () {\n                        return 'Promise';\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(ZoneAwarePromise.prototype, Symbol.species, {\n                    get: function () {\n                        return ZoneAwarePromise;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n                    var _a;\n                    // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                    // may be an object without a prototype (created through `Object.create(null)`); thus\n                    // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                    // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                    // object and copies promise properties into that object (within the `getOrCreateLoad`\n                    // function). The zone.js then checks if the resolved value has the `then` method and\n                    // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                    // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                    var C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n                    if (!C || typeof C !== 'function') {\n                        C = this.constructor || ZoneAwarePromise;\n                    }\n                    var chainPromise = new C(noop);\n                    var zone = Zone.current;\n                    if (this[symbolState] == UNRESOLVED) {\n                        this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                    }\n                    else {\n                        scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                    }\n                    return chainPromise;\n                };\n                ZoneAwarePromise.prototype.catch = function (onRejected) {\n                    return this.then(null, onRejected);\n                };\n                ZoneAwarePromise.prototype.finally = function (onFinally) {\n                    var _a;\n                    // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                    var C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n                    if (!C || typeof C !== 'function') {\n                        C = ZoneAwarePromise;\n                    }\n                    var chainPromise = new C(noop);\n                    chainPromise[symbolFinally] = symbolFinally;\n                    var zone = Zone.current;\n                    if (this[symbolState] == UNRESOLVED) {\n                        this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                    }\n                    else {\n                        scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                    }\n                    return chainPromise;\n                };\n                return ZoneAwarePromise;\n            }());\n            // Protect against aggressive optimizers dropping seemingly unused properties.\n            // E.g. Closure Compiler in advanced mode.\n            ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n            ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n            ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n            ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n            var NativePromise = (global[symbolPromise] = global['Promise']);\n            global['Promise'] = ZoneAwarePromise;\n            var symbolThenPatched = __symbol__('thenPatched');\n            function patchThen(Ctor) {\n                var proto = Ctor.prototype;\n                var prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n                if (prop && (prop.writable === false || !prop.configurable)) {\n                    // check Ctor.prototype.then propertyDescriptor is writable or not\n                    // in meteor env, writable is false, we should ignore such case\n                    return;\n                }\n                var originalThen = proto.then;\n                // Keep a reference to the original method.\n                proto[symbolThen] = originalThen;\n                Ctor.prototype.then = function (onResolve, onReject) {\n                    var _this = this;\n                    var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                        originalThen.call(_this, resolve, reject);\n                    });\n                    return wrapped.then(onResolve, onReject);\n                };\n                Ctor[symbolThenPatched] = true;\n            }\n            api.patchThen = patchThen;\n            function zoneify(fn) {\n                return function (self, args) {\n                    var resultPromise = fn.apply(self, args);\n                    if (resultPromise instanceof ZoneAwarePromise) {\n                        return resultPromise;\n                    }\n                    var ctor = resultPromise.constructor;\n                    if (!ctor[symbolThenPatched]) {\n                        patchThen(ctor);\n                    }\n                    return resultPromise;\n                };\n            }\n            if (NativePromise) {\n                patchThen(NativePromise);\n                patchMethod(global, 'fetch', function (delegate) { return zoneify(delegate); });\n            }\n            // This is not part of public API, but it is useful for tests, so we expose it.\n            Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n            return ZoneAwarePromise;\n        });\n    }\n    function patchToString(Zone) {\n        // override Function.prototype.toString to make zone.js patched function\n        // look like native function\n        Zone.__load_patch('toString', function (global) {\n            // patch Func.prototype.toString to let them look like native\n            var originalFunctionToString = Function.prototype.toString;\n            var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n            var PROMISE_SYMBOL = zoneSymbol('Promise');\n            var ERROR_SYMBOL = zoneSymbol('Error');\n            var newFunctionToString = function toString() {\n                if (typeof this === 'function') {\n                    var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                    if (originalDelegate) {\n                        if (typeof originalDelegate === 'function') {\n                            return originalFunctionToString.call(originalDelegate);\n                        }\n                        else {\n                            return Object.prototype.toString.call(originalDelegate);\n                        }\n                    }\n                    if (this === Promise) {\n                        var nativePromise = global[PROMISE_SYMBOL];\n                        if (nativePromise) {\n                            return originalFunctionToString.call(nativePromise);\n                        }\n                    }\n                    if (this === Error) {\n                        var nativeError = global[ERROR_SYMBOL];\n                        if (nativeError) {\n                            return originalFunctionToString.call(nativeError);\n                        }\n                    }\n                }\n                return originalFunctionToString.call(this);\n            };\n            newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n            Function.prototype.toString = newFunctionToString;\n            // patch Object.prototype.toString to let them look like native\n            var originalObjectToString = Object.prototype.toString;\n            var PROMISE_OBJECT_TO_STRING = '[object Promise]';\n            Object.prototype.toString = function () {\n                if (typeof Promise === 'function' && this instanceof Promise) {\n                    return PROMISE_OBJECT_TO_STRING;\n                }\n                return originalObjectToString.call(this);\n            };\n        });\n    }\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        var symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        var nativeDelegate = (target[symbol] = target[method]);\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    var source = \"\".concat(targetName, \".\").concat(method, \"::\") + callback;\n                    var prototype = opts.prototype;\n                    // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                    // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                    // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                    // make those properties non-writable. This means that patching callback will throw an error\n                    // `cannot assign to read-only property`. See this code as an example:\n                    // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                    // We don't want to stop the application rendering if we couldn't patch some\n                    // callback, e.g. `attributeChangedCallback`.\n                    try {\n                        if (prototype.hasOwnProperty(callback)) {\n                            var descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                            if (descriptor && descriptor.value) {\n                                descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                                api._redefineProperty(opts.prototype, callback, descriptor);\n                            }\n                            else if (prototype[callback]) {\n                                prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                            }\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    catch (_a) {\n                        // Note: we leave the catch block empty since there's no way to handle the error related\n                        // to non-writable property.\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n    function patchUtil(Zone) {\n        Zone.__load_patch('util', function (global, Zone, api) {\n            // Collect native event names by looking at properties\n            // on the global namespace, e.g. 'onclick'.\n            var eventNames = getOnEventNames(global);\n            api.patchOnProperties = patchOnProperties;\n            api.patchMethod = patchMethod;\n            api.bindArguments = bindArguments;\n            api.patchMacroTask = patchMacroTask;\n            // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n            // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n            // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n            // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n            // supported for backwards compatibility.\n            var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n            var SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n            if (global[SYMBOL_UNPATCHED_EVENTS]) {\n                global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n            }\n            if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n                Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                    global[SYMBOL_BLACK_LISTED_EVENTS];\n            }\n            api.patchEventPrototype = patchEventPrototype;\n            api.patchEventTarget = patchEventTarget;\n            api.isIEOrEdge = isIEOrEdge;\n            api.ObjectDefineProperty = ObjectDefineProperty;\n            api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n            api.ObjectCreate = ObjectCreate;\n            api.ArraySlice = ArraySlice;\n            api.patchClass = patchClass;\n            api.wrapWithCurrentZone = wrapWithCurrentZone;\n            api.filterProperties = filterProperties;\n            api.attachOriginToPatched = attachOriginToPatched;\n            api._redefineProperty = Object.defineProperty;\n            api.patchCallbacks = patchCallbacks;\n            api.getGlobalObjects = function () { return ({\n                globalSources: globalSources,\n                zoneSymbolEventNames: zoneSymbolEventNames,\n                eventNames: eventNames,\n                isBrowser: isBrowser,\n                isMix: isMix,\n                isNode: isNode,\n                TRUE_STR: TRUE_STR,\n                FALSE_STR: FALSE_STR,\n                ZONE_SYMBOL_PREFIX: ZONE_SYMBOL_PREFIX,\n                ADD_EVENT_LISTENER_STR: ADD_EVENT_LISTENER_STR,\n                REMOVE_EVENT_LISTENER_STR: REMOVE_EVENT_LISTENER_STR,\n            }); };\n        });\n    }\n    function patchCommon(Zone) {\n        patchPromise(Zone);\n        patchToString(Zone);\n        patchUtil(Zone);\n    }\n    var Zone$1 = loadZone();\n    patchCommon(Zone$1);\n    patchBrowser(Zone$1);\n}));\n","/**\n * @license Angular v18.2.3\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Return the message id or compute it using the XLIFF1 digest.\n */\nfunction digest(message) {\n    return message.id || computeDigest(message);\n}\n/**\n * Compute the message id using the XLIFF1 digest.\n */\nfunction computeDigest(message) {\n    return sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * Return the message id or compute it using the XLIFF2/XMB/$localize digest.\n */\nfunction decimalDigest(message, preservePlaceholders) {\n    return message.id || computeDecimalDigest(message, preservePlaceholders);\n}\n/**\n * Compute the message id using the XLIFF2/XMB/$localize digest.\n */\nfunction computeDecimalDigest(message, preservePlaceholders) {\n    const visitor = new _SerializerIgnoreExpVisitor(preservePlaceholders);\n    const parts = message.nodes.map((a) => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor {\n    visitText(text, context) {\n        return text.value;\n    }\n    visitContainer(container, context) {\n        return `[${container.children.map((child) => child.visit(this)).join(', ')}]`;\n    }\n    visitIcu(icu, context) {\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid\n            ? `<ph tag name=\"${ph.startName}\"/>`\n            : `<ph tag name=\"${ph.startName}\">${ph.children\n                .map((child) => child.visit(this))\n                .join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n    visitBlockPlaceholder(ph, context) {\n        return `<ph block name=\"${ph.startName}\">${ph.children\n            .map((child) => child.visit(this))\n            .join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n}\nconst serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map((a) => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreExpVisitor extends _SerializerVisitor {\n    constructor(preservePlaceholders) {\n        super();\n        this.preservePlaceholders = preservePlaceholders;\n    }\n    visitPlaceholder(ph, context) {\n        // Do not take the expression into account when `preservePlaceholders` is disabled.\n        return this.preservePlaceholders\n            ? super.visitPlaceholder(ph, context)\n            : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcu(icu) {\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    textEncoder ??= new TextEncoder();\n    const utf8 = [...textEncoder.encode(str)];\n    const words32 = bytesToWords32(utf8, Endian.Big);\n    const len = utf8.length * 8;\n    const w = new Uint32Array(80);\n    let a = 0x67452301, b = 0xefcdab89, c = 0x98badcfe, d = 0x10325476, e = 0xc3d2e1f0;\n    words32[len >> 5] |= 0x80 << (24 - (len % 32));\n    words32[(((len + 64) >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const h0 = a, h1 = b, h2 = c, h3 = d, h4 = e;\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const fkVal = fk(j, b, c, d);\n            const f = fkVal[0];\n            const k = fkVal[1];\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            e = d;\n            d = c;\n            c = rol32(b, 30);\n            b = a;\n            a = temp;\n        }\n        a = add32(a, h0);\n        b = add32(b, h1);\n        c = add32(c, h2);\n        d = add32(d, h3);\n        e = add32(e, h4);\n    }\n    // Convert the output parts to a 160-bit hexadecimal string\n    return toHexU32(a) + toHexU32(b) + toHexU32(c) + toHexU32(d) + toHexU32(e);\n}\n/**\n * Convert and format a number as a string representing a 32-bit unsigned hexadecimal number.\n * @param value The value to format as a string.\n * @returns A hexadecimal string representing the value.\n */\nfunction toHexU32(value) {\n    // unsigned right shift of zero ensures an unsigned 32-bit number\n    return (value >>> 0).toString(16).padStart(8, '0');\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    textEncoder ??= new TextEncoder();\n    const utf8 = textEncoder.encode(str);\n    const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n    let hi = hash32(view, utf8.length, 0);\n    let lo = hash32(view, utf8.length, 102072);\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return (BigInt.asUintN(32, BigInt(hi)) << BigInt(32)) | BigInt.asUintN(32, BigInt(lo));\n}\nfunction computeMsgId(msg, meaning = '') {\n    let msgFingerprint = fingerprint(msg);\n    if (meaning) {\n        // Rotate the 64-bit message fingerprint one bit to the left and then add the meaning\n        // fingerprint.\n        msgFingerprint =\n            BigInt.asUintN(64, msgFingerprint << BigInt(1)) |\n                ((msgFingerprint >> BigInt(63)) & BigInt(1));\n        msgFingerprint += fingerprint(meaning);\n    }\n    return BigInt.asUintN(63, msgFingerprint).toString();\n}\nfunction hash32(view, length, c) {\n    let a = 0x9e3779b9, b = 0x9e3779b9;\n    let index = 0;\n    const end = length - 12;\n    for (; index <= end; index += 12) {\n        a += view.getUint32(index, true);\n        b += view.getUint32(index + 4, true);\n        c += view.getUint32(index + 8, true);\n        const res = mix(a, b, c);\n        (a = res[0]), (b = res[1]), (c = res[2]);\n    }\n    const remainder = length - index;\n    // the first byte of c is reserved for the length\n    c += length;\n    if (remainder >= 4) {\n        a += view.getUint32(index, true);\n        index += 4;\n        if (remainder >= 8) {\n            b += view.getUint32(index, true);\n            index += 4;\n            // Partial 32-bit word for c\n            if (remainder >= 9) {\n                c += view.getUint8(index++) << 8;\n            }\n            if (remainder >= 10) {\n                c += view.getUint8(index++) << 16;\n            }\n            if (remainder === 11) {\n                c += view.getUint8(index++) << 24;\n            }\n        }\n        else {\n            // Partial 32-bit word for b\n            if (remainder >= 5) {\n                b += view.getUint8(index++);\n            }\n            if (remainder >= 6) {\n                b += view.getUint8(index++) << 8;\n            }\n            if (remainder === 7) {\n                b += view.getUint8(index++) << 16;\n            }\n        }\n    }\n    else {\n        // Partial 32-bit word for a\n        if (remainder >= 1) {\n            a += view.getUint8(index++);\n        }\n        if (remainder >= 2) {\n            a += view.getUint8(index++) << 8;\n        }\n        if (remainder === 3) {\n            a += view.getUint8(index++) << 16;\n        }\n    }\n    return mix(a, b, c)[2];\n}\nfunction mix(a, b, c) {\n    a -= b;\n    a -= c;\n    a ^= c >>> 13;\n    b -= c;\n    b -= a;\n    b ^= a << 8;\n    c -= a;\n    c -= b;\n    c ^= b >>> 13;\n    a -= b;\n    a -= c;\n    a ^= c >>> 12;\n    b -= c;\n    b -= a;\n    b ^= a << 16;\n    c -= a;\n    c -= b;\n    c ^= b >>> 5;\n    a -= b;\n    a -= c;\n    a ^= c >>> 3;\n    b -= c;\n    b -= a;\n    b ^= a << 10;\n    c -= a;\n    c -= b;\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    const low = (a & 0xffff) + (b & 0xffff);\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\nfunction bytesToWords32(bytes, endian) {\n    const size = (bytes.length + 3) >>> 2;\n    const words32 = [];\n    for (let i = 0; i < size; i++) {\n        words32[i] = wordAt(bytes, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(bytes, index) {\n    return index >= bytes.length ? 0 : bytes[index];\n}\nfunction wordAt(bytes, index, endian) {\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (8 * i);\n        }\n    }\n    return word;\n}\n\n// This module specifier is intentionally a relative path to allow bundling the code directly\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId, } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter((id) => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts,\n        translation.placeholderNames.map((placeholder) => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        }),\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map((part) => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0\n        ? ` [${message.legacyIds.map((l) => `\"${l}\"`).join(', ')}]`\n        : '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see {@link clearTranslations} for removing translations loaded using this function.\n * @see {@link $localize} for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach((key) => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see {@link loadTranslations} for loading translations at runtime.\n * @see {@link $localize} for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n/prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER\n        ? messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1)\n        : messagePart;\n}\n\n// This file exports all the `utils` as private exports so that other parts of `@angular/localize`\n\n// This file contains the public API of the `@angular/localize` entry-point\n\n// DO NOT ADD public exports to this file.\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, computeMsgId as ɵcomputeMsgId, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v18.2.3\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n// Attach $localize to the global context, as a side-effect of this module.\nglobalThis.$localize = ɵ$localize;\n","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"x_google_ignoreList":[1,2,3,4,5,6,7,8]}