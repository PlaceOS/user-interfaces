{"version":3,"file":"polyfills.js","mappings":"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","names":["require","global","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","Error","nativeMicroTaskQueuePromise","parent","zoneSpec","_classCallCheck","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","key","zone","getZoneWith","current","hasOwnProperty","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","_currentZoneFrame","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","Promise","patches","ZoneAwarePromise","fn","ignoreDuplicate","perfName","_api","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","Object","prototype","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","result","listener","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","stack","_loop2","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","readableObjectToString","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","AggregateError","executor","_a","C","Symbol","species","onFinally","values","iterator","promises","_step","_iterator","finished","errors","res","rej","onResolve","onReject","_step2","_iterator2","allWithCallback","thenCallback","status","errorCallback","reason","_step3","_this","unresolvedCount","valueIndex","resolvedValues","_iterator3","curValueIndex","thenErr","_loop3","toStringTag","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","_this2","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","_loop4","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","prepend","isExisting","capture","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","assign","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","_api$getGlobalObjects2","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","_api$getGlobalObjects","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","findPendingTask","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","geolocation","patchPrototype","fnNames","_loop","findPromiseRejectionHandler","PromiseRejectionEvent","evt","module","__webpack_require__","staticProps","Constructor","it","F","n","done","f","normalCompletion","didErr","step","toPrimitive","BLOCK_MARKER$1","$localize$1","messageParts","expressions","_key","translate","translation","stripBlock","raw","BLOCK_MARKER","messagePart","rawMessagePart","charAt","findEndOfBlock","cooked","cookedIndex","rawIndex","globalThis","ɵ_global","ɵ$localize","_construct","_isNativeReflectConstruct_js__WEBPACK_IMPORTED_MODULE_0__","Reflect","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","isNativeReflectConstruct","Super","Derived","esm_typeof","assertThisInitialized","_possibleConstructorReturn","o","subClass","superClass","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__","input","_toPrimitive","arg","_isNativeFunction","Class","_cache","construct","setPrototypeOf","Wrapper","_wrapNativeSuper"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/polyfills.ts","./node_modules/zone.js/fesm2015/zone.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/toPrimitive.js","./node_modules/@babel/runtime/helpers/toPropertyKey.js","./node_modules/@babel/runtime/helpers/typeof.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./node_modules/@angular/localize/fesm2020/localize.mjs","./node_modules/@angular/localize/fesm2020/init.mjs","./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","./node_modules/@babel/runtime/helpers/esm/construct.js","./node_modules/@babel/runtime/helpers/esm/createClass.js","./node_modules/@babel/runtime/helpers/esm/createSuper.js","./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/inherits.js","./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","./node_modules/@babel/runtime/helpers/esm/typeof.js","./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"sourcesContent":["/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","'use strict';\n/**\n * @license Angular v15.1.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @license Angular v15.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * Represents a big integer using a buffer of its individual digits, with the least significant\n * digit stored at the beginning of the array (little endian).\n *\n * For performance reasons, each instance is mutable. The addition operation can be done in-place\n * to reduce memory pressure of allocation for the digits array.\n */\nclass BigInteger {\n    static zero() {\n        return new BigInteger([0]);\n    }\n    static one() {\n        return new BigInteger([1]);\n    }\n    /**\n     * Creates a big integer using its individual digits in little endian storage.\n     */\n    constructor(digits) {\n        this.digits = digits;\n    }\n    /**\n     * Creates a clone of this instance.\n     */\n    clone() {\n        return new BigInteger(this.digits.slice());\n    }\n    /**\n     * Returns a new big integer with the sum of `this` and `other` as its value. This does not mutate\n     * `this` but instead returns a new instance, unlike `addToSelf`.\n     */\n    add(other) {\n        const result = this.clone();\n        result.addToSelf(other);\n        return result;\n    }\n    /**\n     * Adds `other` to the instance itself, thereby mutating its value.\n     */\n    addToSelf(other) {\n        const maxNrOfDigits = Math.max(this.digits.length, other.digits.length);\n        let carry = 0;\n        for (let i = 0; i < maxNrOfDigits; i++) {\n            let digitSum = carry;\n            if (i < this.digits.length) {\n                digitSum += this.digits[i];\n            }\n            if (i < other.digits.length) {\n                digitSum += other.digits[i];\n            }\n            if (digitSum >= 10) {\n                this.digits[i] = digitSum - 10;\n                carry = 1;\n            }\n            else {\n                this.digits[i] = digitSum;\n                carry = 0;\n            }\n        }\n        // Apply a remaining carry if needed.\n        if (carry > 0) {\n            this.digits[maxNrOfDigits] = 1;\n        }\n    }\n    /**\n     * Builds the decimal string representation of the big integer. As this is stored in\n     * little endian, the digits are concatenated in reverse order.\n     */\n    toString() {\n        let res = '';\n        for (let i = this.digits.length - 1; i >= 0; i--) {\n            res += this.digits[i];\n        }\n        return res;\n    }\n}\n/**\n * Represents a big integer which is optimized for multiplication operations, as its power-of-twos\n * are memoized. See `multiplyBy()` for details on the multiplication algorithm.\n */\nclass BigIntForMultiplication {\n    constructor(value) {\n        this.powerOfTwos = [value];\n    }\n    /**\n     * Returns the big integer itself.\n     */\n    getValue() {\n        return this.powerOfTwos[0];\n    }\n    /**\n     * Computes the value for `num * b`, where `num` is a JS number and `b` is a big integer. The\n     * value for `b` is represented by a storage model that is optimized for this computation.\n     *\n     * This operation is implemented in N(log2(num)) by continuous halving of the number, where the\n     * least-significant bit (LSB) is tested in each iteration. If the bit is set, the bit's index is\n     * used as exponent into the power-of-two multiplication of `b`.\n     *\n     * As an example, consider the multiplication num=42, b=1337. In binary 42 is 0b00101010 and the\n     * algorithm unrolls into the following iterations:\n     *\n     *  Iteration | num        | LSB  | b * 2^iter | Add? | product\n     * -----------|------------|------|------------|------|--------\n     *  0         | 0b00101010 | 0    | 1337       | No   | 0\n     *  1         | 0b00010101 | 1    | 2674       | Yes  | 2674\n     *  2         | 0b00001010 | 0    | 5348       | No   | 2674\n     *  3         | 0b00000101 | 1    | 10696      | Yes  | 13370\n     *  4         | 0b00000010 | 0    | 21392      | No   | 13370\n     *  5         | 0b00000001 | 1    | 42784      | Yes  | 56154\n     *  6         | 0b00000000 | 0    | 85568      | No   | 56154\n     *\n     * The computed product of 56154 is indeed the correct result.\n     *\n     * The `BigIntForMultiplication` representation for a big integer provides memoized access to the\n     * power-of-two values to reduce the workload in computing those values.\n     */\n    multiplyBy(num) {\n        const product = BigInteger.zero();\n        this.multiplyByAndAddTo(num, product);\n        return product;\n    }\n    /**\n     * See `multiplyBy()` for details. This function allows for the computed product to be added\n     * directly to the provided result big integer.\n     */\n    multiplyByAndAddTo(num, result) {\n        for (let exponent = 0; num !== 0; num = num >>> 1, exponent++) {\n            if (num & 1) {\n                const value = this.getMultipliedByPowerOfTwo(exponent);\n                result.addToSelf(value);\n            }\n        }\n    }\n    /**\n     * Computes and memoizes the big integer value for `this.number * 2^exponent`.\n     */\n    getMultipliedByPowerOfTwo(exponent) {\n        // Compute the powers up until the requested exponent, where each value is computed from its\n        // predecessor. This is simple as `this.number * 2^(exponent - 1)` only has to be doubled (i.e.\n        // added to itself) to reach `this.number * 2^exponent`.\n        for (let i = this.powerOfTwos.length; i <= exponent; i++) {\n            const previousPower = this.powerOfTwos[i - 1];\n            this.powerOfTwos[i] = previousPower.add(previousPower);\n        }\n        return this.powerOfTwos[exponent];\n    }\n}\n/**\n * Represents an exponentiation operation for the provided base, of which exponents are computed and\n * memoized. The results are represented by a `BigIntForMultiplication` which is tailored for\n * multiplication operations by memoizing the power-of-twos. This effectively results in a matrix\n * representation that is lazily computed upon request.\n */\nclass BigIntExponentiation {\n    constructor(base) {\n        this.base = base;\n        this.exponents = [new BigIntForMultiplication(BigInteger.one())];\n    }\n    /**\n     * Compute the value for `this.base^exponent`, resulting in a big integer that is optimized for\n     * further multiplication operations.\n     */\n    toThePowerOf(exponent) {\n        // Compute the results up until the requested exponent, where every value is computed from its\n        // predecessor. This is because `this.base^(exponent - 1)` only has to be multiplied by `base`\n        // to reach `this.base^exponent`.\n        for (let i = this.exponents.length; i <= exponent; i++) {\n            const value = this.exponents[i - 1].multiplyBy(this.base);\n            this.exponents[i] = new BigIntForMultiplication(value);\n        }\n        return this.exponents[exponent];\n    }\n}\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Return the message id or compute it using the XLIFF1 digest.\n */\nfunction digest(message) {\n    return message.id || computeDigest(message);\n}\n/**\n * Compute the message id using the XLIFF1 digest.\n */\nfunction computeDigest(message) {\n    return sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * Return the message id or compute it using the XLIFF2/XMB/$localize digest.\n */\nfunction decimalDigest(message) {\n    return message.id || computeDecimalDigest(message);\n}\n/**\n * Compute the message id using the XLIFF2/XMB/$localize digest.\n */\nfunction computeDecimalDigest(message) {\n    const visitor = new _SerializerIgnoreIcuExpVisitor();\n    const parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor {\n    visitText(text, context) {\n        return text.value;\n    }\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    visitIcu(icu, context) {\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\nconst serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    visitIcu(icu, context) {\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = [...textEncoder.encode(str)];\n    const words32 = bytesToWords32(utf8, Endian.Big);\n    const len = utf8.length * 8;\n    const w = new Uint32Array(80);\n    let a = 0x67452301, b = 0xefcdab89, c = 0x98badcfe, d = 0x10325476, e = 0xc3d2e1f0;\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const h0 = a, h1 = b, h2 = c, h3 = d, h4 = e;\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const fkVal = fk(j, b, c, d);\n            const f = fkVal[0];\n            const k = fkVal[1];\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            e = d;\n            d = c;\n            c = rol32(b, 30);\n            b = a;\n            a = temp;\n        }\n        a = add32(a, h0);\n        b = add32(b, h1);\n        c = add32(c, h2);\n        d = add32(d, h3);\n        e = add32(e, h4);\n    }\n    // Convert the output parts to a 160-bit hexadecimal string\n    return toHexU32(a) + toHexU32(b) + toHexU32(c) + toHexU32(d) + toHexU32(e);\n}\n/**\n * Convert and format a number as a string representing a 32-bit unsigned hexadecimal number.\n * @param value The value to format as a string.\n * @returns A hexadecimal string representing the value.\n */\nfunction toHexU32(value) {\n    // unsigned right shift of zero ensures an unsigned 32-bit number\n    return (value >>> 0).toString(16).padStart(8, '0');\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = textEncoder.encode(str);\n    const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n    let hi = hash32(view, utf8.length, 0);\n    let lo = hash32(view, utf8.length, 102072);\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nfunction computeMsgId(msg, meaning = '') {\n    let msgFingerprint = fingerprint(msg);\n    if (meaning) {\n        const meaningFingerprint = fingerprint(meaning);\n        msgFingerprint = add64(rol64(msgFingerprint, 1), meaningFingerprint);\n    }\n    const hi = msgFingerprint[0];\n    const lo = msgFingerprint[1];\n    return wordsToDecimalString(hi & 0x7fffffff, lo);\n}\nfunction hash32(view, length, c) {\n    let a = 0x9e3779b9, b = 0x9e3779b9;\n    let index = 0;\n    const end = length - 12;\n    for (; index <= end; index += 12) {\n        a += view.getUint32(index, true);\n        b += view.getUint32(index + 4, true);\n        c += view.getUint32(index + 8, true);\n        const res = mix(a, b, c);\n        a = res[0], b = res[1], c = res[2];\n    }\n    const remainder = length - index;\n    // the first byte of c is reserved for the length\n    c += length;\n    if (remainder >= 4) {\n        a += view.getUint32(index, true);\n        index += 4;\n        if (remainder >= 8) {\n            b += view.getUint32(index, true);\n            index += 4;\n            // Partial 32-bit word for c\n            if (remainder >= 9) {\n                c += view.getUint8(index++) << 8;\n            }\n            if (remainder >= 10) {\n                c += view.getUint8(index++) << 16;\n            }\n            if (remainder === 11) {\n                c += view.getUint8(index++) << 24;\n            }\n        }\n        else {\n            // Partial 32-bit word for b\n            if (remainder >= 5) {\n                b += view.getUint8(index++);\n            }\n            if (remainder >= 6) {\n                b += view.getUint8(index++) << 8;\n            }\n            if (remainder === 7) {\n                b += view.getUint8(index++) << 16;\n            }\n        }\n    }\n    else {\n        // Partial 32-bit word for a\n        if (remainder >= 1) {\n            a += view.getUint8(index++);\n        }\n        if (remainder >= 2) {\n            a += view.getUint8(index++) << 8;\n        }\n        if (remainder === 3) {\n            a += view.getUint8(index++) << 16;\n        }\n    }\n    return mix(a, b, c)[2];\n}\n// clang-format off\nfunction mix(a, b, c) {\n    a -= b;\n    a -= c;\n    a ^= c >>> 13;\n    b -= c;\n    b -= a;\n    b ^= a << 8;\n    c -= a;\n    c -= b;\n    c ^= b >>> 13;\n    a -= b;\n    a -= c;\n    a ^= c >>> 12;\n    b -= c;\n    b -= a;\n    b ^= a << 16;\n    c -= a;\n    c -= b;\n    c ^= b >>> 5;\n    a -= b;\n    a -= c;\n    a ^= c >>> 3;\n    b -= c;\n    b -= a;\n    b ^= a << 10;\n    c -= a;\n    c -= b;\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    const low = (a & 0xffff) + (b & 0xffff);\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(a, b) {\n    const ah = a[0], al = a[1];\n    const bh = b[0], bl = b[1];\n    const result = add32to64(al, bl);\n    const carry = result[0];\n    const l = result[1];\n    const h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(num, count) {\n    const hi = num[0], lo = num[1];\n    const h = (hi << count) | (lo >>> (32 - count));\n    const l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction bytesToWords32(bytes, endian) {\n    const size = (bytes.length + 3) >>> 2;\n    const words32 = [];\n    for (let i = 0; i < size; i++) {\n        words32[i] = wordAt(bytes, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(bytes, index) {\n    return index >= bytes.length ? 0 : bytes[index];\n}\nfunction wordAt(bytes, index, endian) {\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * Create a shared exponentiation pool for base-256 computations. This shared pool provides memoized\n * power-of-256 results with memoized power-of-two computations for efficient multiplication.\n *\n * For our purposes, this can be safely stored as a global without memory concerns. The reason is\n * that we encode two words, so only need the 0th (for the low word) and 4th (for the high word)\n * exponent.\n */\nconst base256 = new BigIntExponentiation(256);\n/**\n * Represents two 32-bit words as a single decimal number. This requires a big integer storage\n * model as JS numbers are not accurate enough to represent the 64-bit number.\n *\n * Based on https://www.danvk.org/hex2dec.html\n */\nfunction wordsToDecimalString(hi, lo) {\n    // Encode the four bytes in lo in the lower digits of the decimal number.\n    // Note: the multiplication results in lo itself but represented by a big integer using its\n    // decimal digits.\n    const decimal = base256.toThePowerOf(0).multiplyBy(lo);\n    // Encode the four bytes in hi above the four lo bytes. lo is a maximum of (2^8)^4, which is why\n    // this multiplication factor is applied.\n    base256.toThePowerOf(4).multiplyByAndAddTo(hi, decimal);\n    return decimal.toString();\n}\n\n// This module specifier is intentionally a relative path to allow bundling the code directly\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts, translation.placeholderNames.map(placeholder => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        })\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map(part => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0 ?\n        ` [${message.legacyIds.map(l => `\"${l}\"`).join(', ')}]` :\n        '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see `clearTranslations()` for removing translations loaded using this function.\n * @see `$localize` for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach(key => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see `loadTranslations()` for loading translations at runtime.\n * @see `$localize` for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case. Note: Typeof/Instanceof\n// checks are considered side-effects in Terser. We explicitly mark this as side-effect free:\n// https://github.com/terser/terser/issues/250.\nconst _global = ( /* @__PURE__ */(() => (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof global !== 'undefined' && global) || (typeof window !== 'undefined' && window) ||\n    (typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self))());\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n\n// This file exports all the `utils` as private exports so that other parts of `@angular/localize`\n\n// This file contains the public API of the `@angular/localize` entry-point\n\n// DO NOT ADD public exports to this file.\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, _global as ɵ_global, computeMsgId as ɵcomputeMsgId, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v15.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ_global, ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n// Attach $localize to the global context, as a side-effect of this module.\nɵ_global.$localize = ɵ$localize;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}