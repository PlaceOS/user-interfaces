{"version":3,"file":"polyfills.js","mappings":"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","names":["require","_objectSpread","_createForOfIteratorHelper","_classCallCheck","_createClass","global","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","Error","nativeMicroTaskQueuePromise","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","key","get","value","zone","getZoneWith","current","hasOwnProperty","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","_currentZoneFrame","invoke","length","undefined","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","newZone","concat","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","Promise","patches","ZoneAwarePromise","fn","ignoreDuplicate","perfName","_api","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","Object","prototype","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","result","listener","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","stack","_loop2","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","readableObjectToString","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","AggregateError","_Symbol$toStringTag","_Symbol$species","executor","_this$constructor","C","Symbol","species","onFinally","_this$constructor2","values","iterator","promises","_step","_iterator","s","n","done","f","finished","errors","res","rej","onResolve","onReject","_step2","_iterator2","allWithCallback","thenCallback","status","errorCallback","reason","_step3","_this","unresolvedCount","valueIndex","resolvedValues","_iterator3","_loop3","curValueIndex","thenErr","toStringTag","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","_this2","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","_loop4","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","prepend","isExisting","capture","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","patchEvent","eventTargetPatch","_api$getGlobalObjects2","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","_api$getGlobalObjects","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","findPendingTask","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","geolocation","patchPrototype","fnNames","_loop","findPromiseRejectionHandler","PromiseRejectionEvent","evt","module","exports","_arrayLikeToArray","arr","len","arr2","__esModule","default","Constructor","toPropertyKey","__webpack_require__","_defineProperties","props","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","isArray","F","_e","normalCompletion","didErr","step","_e2","return","_defineProperty","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_typeof","_toPrimitive","input","hint","prim","toPrimitive","String","Number","_toPropertyKey","arg","arrayLikeToArray","_unsupportedIterableToArray","minLen","from","test","BLOCK_MARKER$1","$localize$1","messageParts","_len","expressions","_key","translate","translation","stripBlock","raw","BLOCK_MARKER","messagePart","rawMessagePart","charAt","findEndOfBlock","cooked","cookedIndex","rawIndex","globalThis","$localize","ɵ$localize","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","Z","esm_typeof"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/polyfills.ts","./node_modules/zone.js/fesm2015/zone.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/defineProperty.js","./node_modules/@babel/runtime/helpers/objectSpread2.js","./node_modules/@babel/runtime/helpers/toPrimitive.js","./node_modules/@babel/runtime/helpers/toPropertyKey.js","./node_modules/@babel/runtime/helpers/typeof.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./node_modules/@angular/localize/fesm2022/localize.mjs","./node_modules/@angular/localize/fesm2022/init.mjs","./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","./node_modules/@babel/runtime/helpers/esm/createClass.js","./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes recent versions of Safari, Chrome (including\n * Opera), Edge on the desktop, and iOS and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js'; // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @license Angular v16.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * Represents a big integer using a buffer of its individual digits, with the least significant\n * digit stored at the beginning of the array (little endian).\n *\n * For performance reasons, each instance is mutable. The addition operation can be done in-place\n * to reduce memory pressure of allocation for the digits array.\n */\nclass BigInteger {\n    static zero() {\n        return new BigInteger([0]);\n    }\n    static one() {\n        return new BigInteger([1]);\n    }\n    /**\n     * Creates a big integer using its individual digits in little endian storage.\n     */\n    constructor(digits) {\n        this.digits = digits;\n    }\n    /**\n     * Creates a clone of this instance.\n     */\n    clone() {\n        return new BigInteger(this.digits.slice());\n    }\n    /**\n     * Returns a new big integer with the sum of `this` and `other` as its value. This does not mutate\n     * `this` but instead returns a new instance, unlike `addToSelf`.\n     */\n    add(other) {\n        const result = this.clone();\n        result.addToSelf(other);\n        return result;\n    }\n    /**\n     * Adds `other` to the instance itself, thereby mutating its value.\n     */\n    addToSelf(other) {\n        const maxNrOfDigits = Math.max(this.digits.length, other.digits.length);\n        let carry = 0;\n        for (let i = 0; i < maxNrOfDigits; i++) {\n            let digitSum = carry;\n            if (i < this.digits.length) {\n                digitSum += this.digits[i];\n            }\n            if (i < other.digits.length) {\n                digitSum += other.digits[i];\n            }\n            if (digitSum >= 10) {\n                this.digits[i] = digitSum - 10;\n                carry = 1;\n            }\n            else {\n                this.digits[i] = digitSum;\n                carry = 0;\n            }\n        }\n        // Apply a remaining carry if needed.\n        if (carry > 0) {\n            this.digits[maxNrOfDigits] = 1;\n        }\n    }\n    /**\n     * Builds the decimal string representation of the big integer. As this is stored in\n     * little endian, the digits are concatenated in reverse order.\n     */\n    toString() {\n        let res = '';\n        for (let i = this.digits.length - 1; i >= 0; i--) {\n            res += this.digits[i];\n        }\n        return res;\n    }\n}\n/**\n * Represents a big integer which is optimized for multiplication operations, as its power-of-twos\n * are memoized. See `multiplyBy()` for details on the multiplication algorithm.\n */\nclass BigIntForMultiplication {\n    constructor(value) {\n        this.powerOfTwos = [value];\n    }\n    /**\n     * Returns the big integer itself.\n     */\n    getValue() {\n        return this.powerOfTwos[0];\n    }\n    /**\n     * Computes the value for `num * b`, where `num` is a JS number and `b` is a big integer. The\n     * value for `b` is represented by a storage model that is optimized for this computation.\n     *\n     * This operation is implemented in N(log2(num)) by continuous halving of the number, where the\n     * least-significant bit (LSB) is tested in each iteration. If the bit is set, the bit's index is\n     * used as exponent into the power-of-two multiplication of `b`.\n     *\n     * As an example, consider the multiplication num=42, b=1337. In binary 42 is 0b00101010 and the\n     * algorithm unrolls into the following iterations:\n     *\n     *  Iteration | num        | LSB  | b * 2^iter | Add? | product\n     * -----------|------------|------|------------|------|--------\n     *  0         | 0b00101010 | 0    | 1337       | No   | 0\n     *  1         | 0b00010101 | 1    | 2674       | Yes  | 2674\n     *  2         | 0b00001010 | 0    | 5348       | No   | 2674\n     *  3         | 0b00000101 | 1    | 10696      | Yes  | 13370\n     *  4         | 0b00000010 | 0    | 21392      | No   | 13370\n     *  5         | 0b00000001 | 1    | 42784      | Yes  | 56154\n     *  6         | 0b00000000 | 0    | 85568      | No   | 56154\n     *\n     * The computed product of 56154 is indeed the correct result.\n     *\n     * The `BigIntForMultiplication` representation for a big integer provides memoized access to the\n     * power-of-two values to reduce the workload in computing those values.\n     */\n    multiplyBy(num) {\n        const product = BigInteger.zero();\n        this.multiplyByAndAddTo(num, product);\n        return product;\n    }\n    /**\n     * See `multiplyBy()` for details. This function allows for the computed product to be added\n     * directly to the provided result big integer.\n     */\n    multiplyByAndAddTo(num, result) {\n        for (let exponent = 0; num !== 0; num = num >>> 1, exponent++) {\n            if (num & 1) {\n                const value = this.getMultipliedByPowerOfTwo(exponent);\n                result.addToSelf(value);\n            }\n        }\n    }\n    /**\n     * Computes and memoizes the big integer value for `this.number * 2^exponent`.\n     */\n    getMultipliedByPowerOfTwo(exponent) {\n        // Compute the powers up until the requested exponent, where each value is computed from its\n        // predecessor. This is simple as `this.number * 2^(exponent - 1)` only has to be doubled (i.e.\n        // added to itself) to reach `this.number * 2^exponent`.\n        for (let i = this.powerOfTwos.length; i <= exponent; i++) {\n            const previousPower = this.powerOfTwos[i - 1];\n            this.powerOfTwos[i] = previousPower.add(previousPower);\n        }\n        return this.powerOfTwos[exponent];\n    }\n}\n/**\n * Represents an exponentiation operation for the provided base, of which exponents are computed and\n * memoized. The results are represented by a `BigIntForMultiplication` which is tailored for\n * multiplication operations by memoizing the power-of-twos. This effectively results in a matrix\n * representation that is lazily computed upon request.\n */\nclass BigIntExponentiation {\n    constructor(base) {\n        this.base = base;\n        this.exponents = [new BigIntForMultiplication(BigInteger.one())];\n    }\n    /**\n     * Compute the value for `this.base^exponent`, resulting in a big integer that is optimized for\n     * further multiplication operations.\n     */\n    toThePowerOf(exponent) {\n        // Compute the results up until the requested exponent, where every value is computed from its\n        // predecessor. This is because `this.base^(exponent - 1)` only has to be multiplied by `base`\n        // to reach `this.base^exponent`.\n        for (let i = this.exponents.length; i <= exponent; i++) {\n            const value = this.exponents[i - 1].multiplyBy(this.base);\n            this.exponents[i] = new BigIntForMultiplication(value);\n        }\n        return this.exponents[exponent];\n    }\n}\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Return the message id or compute it using the XLIFF1 digest.\n */\nfunction digest(message) {\n    return message.id || computeDigest(message);\n}\n/**\n * Compute the message id using the XLIFF1 digest.\n */\nfunction computeDigest(message) {\n    return sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * Return the message id or compute it using the XLIFF2/XMB/$localize digest.\n */\nfunction decimalDigest(message) {\n    return message.id || computeDecimalDigest(message);\n}\n/**\n * Compute the message id using the XLIFF2/XMB/$localize digest.\n */\nfunction computeDecimalDigest(message) {\n    const visitor = new _SerializerIgnoreIcuExpVisitor();\n    const parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor {\n    visitText(text, context) {\n        return text.value;\n    }\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    visitIcu(icu, context) {\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\nconst serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    visitIcu(icu, context) {\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    textEncoder ??= new TextEncoder();\n    const utf8 = [...textEncoder.encode(str)];\n    const words32 = bytesToWords32(utf8, Endian.Big);\n    const len = utf8.length * 8;\n    const w = new Uint32Array(80);\n    let a = 0x67452301, b = 0xefcdab89, c = 0x98badcfe, d = 0x10325476, e = 0xc3d2e1f0;\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const h0 = a, h1 = b, h2 = c, h3 = d, h4 = e;\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const fkVal = fk(j, b, c, d);\n            const f = fkVal[0];\n            const k = fkVal[1];\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            e = d;\n            d = c;\n            c = rol32(b, 30);\n            b = a;\n            a = temp;\n        }\n        a = add32(a, h0);\n        b = add32(b, h1);\n        c = add32(c, h2);\n        d = add32(d, h3);\n        e = add32(e, h4);\n    }\n    // Convert the output parts to a 160-bit hexadecimal string\n    return toHexU32(a) + toHexU32(b) + toHexU32(c) + toHexU32(d) + toHexU32(e);\n}\n/**\n * Convert and format a number as a string representing a 32-bit unsigned hexadecimal number.\n * @param value The value to format as a string.\n * @returns A hexadecimal string representing the value.\n */\nfunction toHexU32(value) {\n    // unsigned right shift of zero ensures an unsigned 32-bit number\n    return (value >>> 0).toString(16).padStart(8, '0');\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    textEncoder ??= new TextEncoder();\n    const utf8 = textEncoder.encode(str);\n    const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n    let hi = hash32(view, utf8.length, 0);\n    let lo = hash32(view, utf8.length, 102072);\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nfunction computeMsgId(msg, meaning = '') {\n    let msgFingerprint = fingerprint(msg);\n    if (meaning) {\n        const meaningFingerprint = fingerprint(meaning);\n        msgFingerprint = add64(rol64(msgFingerprint, 1), meaningFingerprint);\n    }\n    const hi = msgFingerprint[0];\n    const lo = msgFingerprint[1];\n    return wordsToDecimalString(hi & 0x7fffffff, lo);\n}\nfunction hash32(view, length, c) {\n    let a = 0x9e3779b9, b = 0x9e3779b9;\n    let index = 0;\n    const end = length - 12;\n    for (; index <= end; index += 12) {\n        a += view.getUint32(index, true);\n        b += view.getUint32(index + 4, true);\n        c += view.getUint32(index + 8, true);\n        const res = mix(a, b, c);\n        a = res[0], b = res[1], c = res[2];\n    }\n    const remainder = length - index;\n    // the first byte of c is reserved for the length\n    c += length;\n    if (remainder >= 4) {\n        a += view.getUint32(index, true);\n        index += 4;\n        if (remainder >= 8) {\n            b += view.getUint32(index, true);\n            index += 4;\n            // Partial 32-bit word for c\n            if (remainder >= 9) {\n                c += view.getUint8(index++) << 8;\n            }\n            if (remainder >= 10) {\n                c += view.getUint8(index++) << 16;\n            }\n            if (remainder === 11) {\n                c += view.getUint8(index++) << 24;\n            }\n        }\n        else {\n            // Partial 32-bit word for b\n            if (remainder >= 5) {\n                b += view.getUint8(index++);\n            }\n            if (remainder >= 6) {\n                b += view.getUint8(index++) << 8;\n            }\n            if (remainder === 7) {\n                b += view.getUint8(index++) << 16;\n            }\n        }\n    }\n    else {\n        // Partial 32-bit word for a\n        if (remainder >= 1) {\n            a += view.getUint8(index++);\n        }\n        if (remainder >= 2) {\n            a += view.getUint8(index++) << 8;\n        }\n        if (remainder === 3) {\n            a += view.getUint8(index++) << 16;\n        }\n    }\n    return mix(a, b, c)[2];\n}\n// clang-format off\nfunction mix(a, b, c) {\n    a -= b;\n    a -= c;\n    a ^= c >>> 13;\n    b -= c;\n    b -= a;\n    b ^= a << 8;\n    c -= a;\n    c -= b;\n    c ^= b >>> 13;\n    a -= b;\n    a -= c;\n    a ^= c >>> 12;\n    b -= c;\n    b -= a;\n    b ^= a << 16;\n    c -= a;\n    c -= b;\n    c ^= b >>> 5;\n    a -= b;\n    a -= c;\n    a ^= c >>> 3;\n    b -= c;\n    b -= a;\n    b ^= a << 10;\n    c -= a;\n    c -= b;\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    const low = (a & 0xffff) + (b & 0xffff);\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(a, b) {\n    const ah = a[0], al = a[1];\n    const bh = b[0], bl = b[1];\n    const result = add32to64(al, bl);\n    const carry = result[0];\n    const l = result[1];\n    const h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(num, count) {\n    const hi = num[0], lo = num[1];\n    const h = (hi << count) | (lo >>> (32 - count));\n    const l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction bytesToWords32(bytes, endian) {\n    const size = (bytes.length + 3) >>> 2;\n    const words32 = [];\n    for (let i = 0; i < size; i++) {\n        words32[i] = wordAt(bytes, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(bytes, index) {\n    return index >= bytes.length ? 0 : bytes[index];\n}\nfunction wordAt(bytes, index, endian) {\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * Create a shared exponentiation pool for base-256 computations. This shared pool provides memoized\n * power-of-256 results with memoized power-of-two computations for efficient multiplication.\n *\n * For our purposes, this can be safely stored as a global without memory concerns. The reason is\n * that we encode two words, so only need the 0th (for the low word) and 4th (for the high word)\n * exponent.\n */\nconst base256 = new BigIntExponentiation(256);\n/**\n * Represents two 32-bit words as a single decimal number. This requires a big integer storage\n * model as JS numbers are not accurate enough to represent the 64-bit number.\n *\n * Based on https://www.danvk.org/hex2dec.html\n */\nfunction wordsToDecimalString(hi, lo) {\n    // Encode the four bytes in lo in the lower digits of the decimal number.\n    // Note: the multiplication results in lo itself but represented by a big integer using its\n    // decimal digits.\n    const decimal = base256.toThePowerOf(0).multiplyBy(lo);\n    // Encode the four bytes in hi above the four lo bytes. lo is a maximum of (2^8)^4, which is why\n    // this multiplication factor is applied.\n    base256.toThePowerOf(4).multiplyByAndAddTo(hi, decimal);\n    return decimal.toString();\n}\n\n// This module specifier is intentionally a relative path to allow bundling the code directly\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts, translation.placeholderNames.map(placeholder => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        })\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map(part => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0 ?\n        ` [${message.legacyIds.map(l => `\"${l}\"`).join(', ')}]` :\n        '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see {@link clearTranslations} for removing translations loaded using this function.\n * @see {@link $localize} for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach(key => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see {@link loadTranslations} for loading translations at runtime.\n * @see {@link $localize} for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n\n// This file exports all the `utils` as private exports so that other parts of `@angular/localize`\n\n// This file contains the public API of the `@angular/localize` entry-point\n\n// DO NOT ADD public exports to this file.\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, computeMsgId as ɵcomputeMsgId, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v16.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n// Attach $localize to the global context, as a side-effect of this module.\nglobalThis.$localize = ɵ$localize;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}