{"version":3,"file":"apps_concierge_src_app_facilities_facilities_module_ts.js","mappings":"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","names":["i0","FacilitiesTopbarComponent","BaseClass","constructor","_state","_org","_route","_router","super","this","id","name","types","map","i","d","setDate","active_levels","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","setFilters","hide_type","reduce","list","item","includes","push","ngOnInit","_this","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","zones","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","levels","filter","zone","lvl","updateZones","updateTypes","type_list","core","selectors","ctx","FacilitiesStatusComponent","FacilitiesMapComponent","_explore","map_url","map_styles","map_positions","map_features","map_actions","setLevel","FacilitiesComponent","ROUTES","path","component","FacilitiesModule","CommonModule","FormsModule","UIModule","SharedExploreModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/facilities/facilities-topbar.component.ts","./apps/concierge/src/app/facilities/facilities-status.component.ts","./apps/concierge/src/app/facilities/facilities-map.component.ts","./apps/concierge/src/app/facilities/facilities.component.ts","./apps/concierge/src/app/facilities/facilities.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'facilities-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-full\"></div>\n            <searchbar class=\"mr-2\"></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            .flex-full {\n                flex: 1;\n                width: 0.5em;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n        `,\n    ],\n})\nexport class FacilitiesTopbarComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'facilities-status',\n    template: `\n        <div class=\"rounded-lg flex-1 w-full shadow-sm p-6 bg-white dark:bg-neutral-700\">\n            <h3 class=\"mt-0 mb-4\">People Count</h3>\n            <div class=\"w-full flex items-center border border-gray-400 dark:border-neutral-500 mb-2 rounded-lg\">\n                <div name=\"status\" class=\"rounded-full\">\n                    <app-icon>account_circle</app-icon>\n                </div>\n                <div class=\"flex-1 text-bold text-xs\">{{ 'Admin Services' }}</div>\n                <div class=\"text-bold p-4\">{{ '24' }}</div>\n            </div>\n            <div class=\"text-right text-bold mr-4\">Total: {{ total || 0 }}</div>\n        </div>\n        <div class=\"rounded w-full shadow-sm p-6 bg-white dark:bg-neutral-700\">\n            <h3 class=\"mt-0 mb-2\">Mood</h3>\n            <div name=\"mood\" class=\"flex items-center w-full border border-gray-400 dark:border-neutral-500 rounded-lg overflow-hidden\">\n                <app-icon class=\"bg-light text-2xl px-1\" [icon]=\"{ class: 'material-icons', content: 'sentiment_very_satisfied' }\"></app-icon>\n                <div class=\"px-4 text-sm text-bold\">4/5 Satisfied</div>\n            </div>\n            <h4>Feedback:</h4>\n            <p>{{ feedback }}</p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                width: 20em;\n                padding: 2em;\n            }\n\n            .bg-light {\n                background-color: rgba(0,0,0,0.05);\n            }\n\n            [name=\"mood\"] app-icon {\n\n            }\n\n            [name=\"status\"] {\n                margin: .5em;\n                border: 4px solid #21a453;\n                border-radius: 100%;\n            }\n        `\n    ],\n})\nexport class FacilitiesStatusComponent {\n    public feedback: string;\n    public total: number;\n\n}\n","import { Component } from '@angular/core';\n\nimport { BaseClass } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'facilities-map',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async).zoom\"\n            [center]=\"(positions | async).center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class FacilitiesMapComponent extends BaseClass {\n    /** Observable for the active map */\n    public readonly url = this._explore.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._explore.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._explore.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._explore.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._explore.map_actions;\n\n    constructor(\n        private _explore: ExploreStateService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'active_zone',\n            this._state.zones.subscribe((z) => this._explore.setLevel(z[0]))\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-facilities]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\"\n        >\n            <facilities-topbar></facilities-topbar>\n            <div class=\"flex flex-1\">\n                <facilities-map class=\"flex-1 h-full\"></facilities-map>\n                <facilities-status class=\"h-full space-y-4\"></facilities-status>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            facilities-map {\n                min-width: 50%;\n            }\n        `,\n    ],\n})\nexport class FacilitiesComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { FacilitiesComponent } from './facilities.component';\nimport { FacilitiesTopbarComponent } from './facilities-topbar.component';\nimport { FacilitiesStatusComponent } from './facilities-status.component';\nimport { FacilitiesMapComponent } from './facilities-map.component';\n\nimport { InteractiveMapComponent } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\n\nconst ROUTES: Route[] = [{ path: '', component: FacilitiesComponent }];\n\n@NgModule({\n    declarations: [\n        FacilitiesComponent,\n        FacilitiesTopbarComponent,\n        FacilitiesStatusComponent,\n        FacilitiesMapComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedExploreModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class FacilitiesModule {}\n"],"x_google_ignoreList":[]}