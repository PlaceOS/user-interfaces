{"version":3,"file":"main.js","mappings":"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AE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAInM,EAAUsL,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKtL,EAAUqL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","sd","ev","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","triggerPoll","parse","interval","stopPolling","clearInterval","setAsDeleted","push","_toggleType","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","item_r4","request_r1","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","time","changes","AssetRequest","new_value","order","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","idx","new_order","_changed","_items$find","__","getHours","getMinutes","item_count","setValue","request","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","addMinutes","_data$asset_ids","_data$extension_data","_data$extension_data2","_data$extension_data3","_data$extension_data4","startOfMinute","randomInt","event_id","asset_ids","reduce","amount","status","notes","_status","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","_r8","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","_r11","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","c","getOptions","min","diff","differenceInMinutes","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","t","selected_ids","state","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","rejected","localeCompare","queryAssetCategories","zone_id","_ref9","_$assets","category_id","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_booking$asset_ids","_removeAssetRequests","requests","_$asset_ids","removeBooking","_updateAssetRequestsForResource","new_assets","ical_uid","from_booking","location_name","location_id","reset_state","booking_id","_request$items","createBooking","user_email","approved","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","booking_details_modal_component_1","async_handler_class_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","has","_this$booking7","_this$booking8","_this$booking9","is_today","format","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r17","request_r15","BookingDetailsModalComponent_ng_container_36_div_5_div_10_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_c6","_r21","_r23","_booking","hide_map","has_assets","linked_bookings","_this$booking6","ts","booking_start","booking_end","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","groups","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_ref11","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","call","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","getTime","removeEmptyFields","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r21","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","optionList","CateringListFieldComponent_div_1_div_25_span_3_Template","order_r1","removeOrderItem","currency_code","CateringListFieldComponent_div_1_div_8_Template","duplicateOrder","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_25_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","filtered","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","GoogleMaps","Mapbox","_map_service","_map_token","_ready","_injected","use_mapspeople$","injectMapsApiKeys","maps_key","mapsindoors","script","google_key","mapbox_key","google","mapbox","rel","head","KeepAliveService","_system_id","_delay","_bindTo","module","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","RemoteLoggingService","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","blob","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","_r22","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r10","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r7","json_tooltip","DebugConsoleComponent_div_0_div_8_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_8_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_8_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_8_div_8_Template","log_r5","filtered_logs","DebugConsoleComponent_div_0_div_8_Template","DebugConsoleComponent_div_0_span_17_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","_api_service","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","floor_mapping","custom_coordinates","_getUserLocation","initMapView","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","actions_hashmap","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","services","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_setLocationToBuilding","watchPosition","_updateGeolocation","_handleGeolocationError","_this$_org$building$l","_this$_org$building$l2","long","parseFloat","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this7$directions_ren","setRoute","_error$message","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this8$actions","currentValue","_setPolygonFill2","_this$maps_service6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","padLength","MediaDurationPipe","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r30","request_r28","_r32","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","_r34","show_attendees","_r36","ctx_r35","no_edit_message","_r38","ctx_r37","act_r39","_r41","ctx_r40","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_interactive_map_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","startWith","_assertThisInitialize","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","differenceInDays","_ref17","_this$_event$getValue","_newForm","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","catering_charge_code","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data4","_form$getRawValue","changed_times","is_owner","breakdown","overflow","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","catering_notes","setup_time","breakdown_time","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","toJSON","_checkSelectedSpacesAreAvailable","exclude","exclude_range","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_count_key","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","_uploadImages","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r11","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r14","start_date","_r20","SpaceFiltersComponent_div_30_div_6_Template","SpaceFiltersComponent_div_30_div_7_Template","feat_r24","feature_display","SpaceFiltersComponent_section_41_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_41_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_div_29_Template","SpaceFiltersComponent_div_30_Template","SpaceFiltersComponent_section_41_Template","SpaceFiltersComponent_div_43_Template","tmp_17_0","tmp_19_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","i_r7","available_weekdays","changed","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const sd = d.filter(\n                (_) => !e.find((ev) => `${ev.meeting_id}` === `${_.id}`)\n            );\n            return [...e, ...v, ...sd, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, randomString } from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < request.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) => new AssetRequest({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_, idx) => (item as any).assets[idx].id);\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public _changed = false;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'accepted';\n        this.event = data.event || data || null;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[]\n) {\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    await Promise.all(\n        bookings.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        new_assets.map((request) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    request.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type: 'asset-request',\n                    booking_type: 'asset-request',\n                    date,\n                    duration,\n                    all_day,\n                    description: location_name,\n                    user_email: host,\n                    asset_id: request.id,\n                    asset_ids: flatten(request.items.map((_) => _.item_ids)),\n                    asset_name: request.items.map((_) => _.name).join(', '),\n                    title: request.items.map((_) => _.name).join(', '),\n                    approved:\n                        !reset_state && booking?.approved && !request._changed,\n                    rejected:\n                        !reset_state && booking?.rejected && !request._changed,\n                    extension_data: {\n                        parent_id: id,\n                        location_id,\n                        request: new AssetRequest({ ...request, event: null }),\n                    },\n                    zones: zones || [],\n                }),\n                { ical_uid, event_id: from_booking ? '' : id }\n            ).toPromise();\n        })\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_request[request.id]\n                                                ? 'Hide requested items'\n                                                : 'Show requested items'\n                                        \"\n                                        (click)=\"\n                                            show_request[request.id] =\n                                                !show_request[request.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get valid_assets() {\n        return (this.extension_data.assets || []).filter(\n            (request) =>\n                request.deliver_at_time < this.date + this.duration * 60 * 1000\n        );\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { notifyError } from './notifications';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n\n    public readonly use_mapspeople$ = this._org.active_building.pipe(\n        tap((_) => this.injectMapsApiKeys()),\n        map(\n            (_) =>\n                this._settings.get('app.maps_indoor_api_key') &&\n                (this._settings.get('app.google_maps_api_key') ||\n                    this._settings.get('app.mapbox_api_key'))\n        )\n    );\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public injectMapsApiKeys() {\n        this._ready.next(false);\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (!maps_key) return;\n        if (maps_key && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        const mapbox_key = this._settings.get('app.mapbox_api_key');\n        if (google_key && mapbox_key) {\n            notifyError(\n                \"You can't use both Google and Mapbox maps at the same time\"\n            );\n            return;\n        }\n        if (google_key && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox_key && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox_key);\n            this._injected.mapbox = true;\n        }\n\n        if (google_key || mapbox_key)\n            this.timeout('ready', () => this._ready.next(true), 300);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"178eb00\",\n    \"hash\": \"178eb00\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"178eb00\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1705382241967\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div class=\"flex items-center justify-between bg-base-100\">\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-base-300 p-2 flex items-center space-x-2 w-[20rem] border-t border-x border-base-100\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-base-100/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() =>\n                this._logs.setSystem(this._org.binding('remote_logger'))\n            )\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.bg-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.bg-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    HashMap,\n    InjectMapApiService,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/inject-map-api.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-base-100 rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-base-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: InjectMapApiService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n        await this.initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) {\n                found_action.callback(e);\n            }\n        });\n    }\n\n    initMapView(): Promise<void> {\n        if (!this._api_service.is_ready) {\n            this.timeout('init', () => this.initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) return;\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider();\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (e && this.floor_mapping) {\n                const level_id: string = this.floor_mapping[e];\n                this._state.setLevel(level_id);\n            }\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => resolve(this._setLocationToBuilding()),\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else resolve(this._setLocationToBuilding());\n        });\n    }\n\n    private _setLocationToBuilding() {\n        const [lat, long] = this._org.building?.location.split(',');\n        this.user_latitude = parseFloat(lat);\n        this.user_longitude = parseFloat(long);\n        return {\n            coords: {\n                latitude: this.user_latitude,\n                longitude: this.user_longitude,\n                accuracy: 10,\n            },\n            timestamp: new Date().getTime(),\n        } as GeolocationPosition;\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.directions_service\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.directions_renderer?.setRoute(directionsResult);\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center\"\n                                        [class.bg-success]=\"\n                                            request.status === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.status === 'tentative'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.status === 'rejected'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.status === 'approved'\n                                                    ? 'done'\n                                                    : request.status ===\n                                                      'tentative'\n                                                    ? 'schedule'\n                                                    : request.status ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : ''\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_request[request.id]\n                                                ? 'Hide requested items'\n                                                : 'Show requested items'\n                                        \"\n                                        (click)=\"\n                                            show_request[request.id] =\n                                                !show_request[request.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    addMinutes,\n    differenceInDays,\n    endOfDay,\n    getUnixTime,\n    startOfDay,\n} from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: event.extension_data.assets || [],\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                date_end,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            let changed_times = false;\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    id\n                        ? {\n                              start: getUnixTime(\n                                  all_day ? startOfDay(date) : date\n                              ),\n                              end: getUnixTime(\n                                  all_day ? endOfDay(date_end) : date_end\n                              ),\n                          }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                    this._loading.next('');\n                }\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                        reset_state: changed_times,\n                    },\n                    assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    public get valid_assets() {\n        return (this.ext('assets') || []).filter(\n            (request) => request.deliver_at < this.date_end\n        );\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_check[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.use_mapspeople$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n    area_count_key: string;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ];\n            const filled = count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) this._updateSettingOverrides();\n        });\n        this.active_region.subscribe((region) => {\n            if (region) this._updateSettingOverrides();\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}