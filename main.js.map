{"version":3,"file":"main.js","mappings":"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AAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI3K,EAAU8J,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK9J,EAAU6J,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","formatRecurrence","_objectSpread","recurrence","start","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","zone_id","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c4","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","_ref13","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","previous_time","previous_duration","previous_all_day","_v$all_day","booker","emitEvent","_resource$zone","_resource$zone2","roundingMethod","setHours","setMinutes","disable","max","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","queryAllBookings","query_params","endpoint","resp","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_9_0","tmp_17_0","tmp_19_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_8_0","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","stringToMinutes","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","nativeElement","cookie","apiKey","fetch","blob","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","authority","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","ɵɵpureFunction4","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r20","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","newSupportTicket","UserControlsComponent_button_45_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","tmp_15_0","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","has_assets","linked_bookings","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","removeEvent","_makeBooking2","_updateVisitorList","toJSON","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","max_length","_rulesForSpace","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","is_restricted","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","pair_r5","ExploreMapViewComponent_div_12_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_11_Template","ExploreMapViewComponent_div_12_Template","hide_zones","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","old_date","new_date","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","use_24hr","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i12","MatSelect","i13","RichTextInputComponent","ImageListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formatted_value","RecurrenceFieldComponent","getDate","instance_of_month","RecurrenceModalComponent","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","geolocation","getCurrentPosition","_this4$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","bld_list","_this5$region","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","_r23","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","tmp_7_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","today","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","scrollTop","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zone_id: bld.id || zone || '',\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    roundToNearestMinutes,\n    setHours,\n    setMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now()) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 12 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, endOfDay, format, startOfDay } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day ? startOfDay(event.date) : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? endOfDay(event.date)\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"9ef0119\",\n    \"hash\": \"9ef0119\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"9ef0119\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1694064250727\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-gray-300 divide-y divide-gray-300 dark:border-neutral-500 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-black/5 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column]\n                            }}<span\n                                *ngIf=\"\n                                    row[column] == null || row[column] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                N/A\n                            </span></ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column,\n                                        name: display_column[i] || column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 divide-x divide-gray-300\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration } = this._form.getRawValue();\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterSpacesFromRules(\n                    spaces,\n                    { date, duration, space: null, host: currentUser() },\n                    this._org.building.booking_rules\n                );\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup || setup;\n                (value as any).breakdown = value.breakdown || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(result.id).toPromise();\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly update_master: boolean;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            delete obj.extension_data.setup;\n            delete obj.extension_data.breakdown;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving setup and breakdown durations...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.ext('setup') || 0),\n        breakdown: new FormControl(this._event.ext('breakdown') || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        await saveEvent(\n            new CalendarEvent({ ...this._event, ...this.form.value }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup: new FormControl(event.extension_data?.setup || 0),\n        breakdown: new FormControl(event.extension_data?.breakdown || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now()) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (form.value.recurrence) {\n            const value = form.value.recurrence;\n            if (\n                value._pattern !== 'custom_display' &&\n                value._pattern !== 'none'\n            ) {\n                form.patchValue({\n                    recurrence: {\n                        ...value,\n                        days_of_week: [new Date(date).getDay()],\n                    },\n                });\n            }\n        }\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 12 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, timer } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AssetRestriction,\n    BookingFormService,\n} from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            console.log('On Level update bindings:', system_id);\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in =\n                    checked_in.some((i) => id === i) ||\n                    (is_used && this._settings.get(`app.desk.auto_checkin`));\n                const restriction_list = restrictions.filter((_) =>\n                    _.assets.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-red-600 text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}