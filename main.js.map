{"version":3,"mappings":"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","names":["MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatBottomSheetModule","MatCheckboxModule","MatRadioModule","CDK_MODULES","ScrollingModule","SharedComponentsModule","CommonModule","FormsModule","ReactiveFormsModule","ComponentsModule","RouterModule","EditorModule","i0","ctx_r5","ctx_r7","ctx_r9","TakePhotoComponent","constructor","this","EventEmitter","audio","video","width","min","max","height","ngOnInit","setTimeout","getCanvasContext","ngOnDestroy","stopCapture","canvasContext","canvas","imgSrc","startCapture","console","log","document","getElementById","navigator","mediaDevices","getUserMedia","constraints","then","stream","srcObject","x","_a","getVideoTracks","forEach","track","stop","getContext","takePhoto","drawImage","hasPhoto","cancelPhoto","clearRect","acceptPhoto","toDataURL","photoAccepted","emit","err","error","selectors","TopbarHeaderComponent","time","format","date","Date","now","MOCK_MENU","id","name","unit_price","category","tags","options","group","event","duration","differenceInMinutes","event_start","event_end","mx","predictableRandomInt","length","event_id","invoice_number","charge_code","deliver_at","addMinutes","Math","floor","items","Array","fill","map","_","idx","Object","quantity","DOMAIN","PREDEF_USERS","ACTIVE_USER","email","groups","MOCK_STAFF","i","split","join","toLowerCase","concat","MOCK_GUESTS","visit_expected","extension_data","vaccination_proof","url","id_data","MOCK_ORGS","created_at","updated_at","description","count","capacity","parent_id","triggers","MOCK_BUILDINGS","levels","MOCK_LEVELS","bld","level","building","num","map_id","substr","endsWith","code","type","location","display_name","mockLevel","reduce","p","c","MOCK_METADATA","current","contacts","details","first_name","last_name","PARKING_SPACES","ZONE_MOCKS","registerMockEndpoint","path","metadata","method","callback","request","query_params","status","message","bindings","area_management","location_services","contact_tracing","catering","parts","route_params","generateMockDeskMetadata","position","padString","assignee","bookable","assigned_to","assigned_name","generateParkingSpaces","map_regions","areas","properties","label_location","y","geometry","coordinates","body","DESK_FEATURES","desks","features","filter","zone","lvl","registerMocks","randomSpaceFeatures","f","numFeatures","res","push","el","r","indexOf","MOCK_SPACES","zones","d","generateMockSpace","EVENT_TIME","dayjs","startOf","hour","nextEventTime","save","next","add","unix","event_status","randomStatus","rnd","MOCK_EVENTS","index","PEOPLE","attendees","sort","a","b","space","resource","unshift","unique","meeting_url","host","calendar","creator","organizer","checked_in","response_status","title","private","timezone","all_day","E","recurring","recurrence","attachments","system","meeting_id","meeting_provider","generateCateringOrder","setup","breakdown","event_spaces","USER_MOCKS","person","user","q","search","includes","decodeURIComponent","generateLocation","find","LOCATION_TYPES","level_spaces","s","meeting","last_seen","subtract","geo","lat","lon","_data","help","content","icon","inputs","controls","connected","active","input_list","output_list","env_sources","keys","outputs","t","source","key","$power","state","$share","$route","input","output","$updateState","routes","following","$unroute","$connect","$disconnect","$link","$merge","$split","$notify","$preset","$volume","value","volume","$mute","mute","$unmute","$environment","$lock","locked","$unlock","data","Mic1","mod","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display3","Display4","Display5","states","createSystemModule","overrides","RoomModule","_space","$start_meeting","last_booking_started","$end_meeting","$book_now","len","o","$poll_bookings","bookings","dt","u","At","current_booking","timePeriodsIntersect","next_booking","start","pending","subSeconds","pending_before","addSeconds","pending_period","l","updateBookings","createBookingsModule","MockBookingModule","$locate_user","username","$update","area","randomInt","updateLocations","MAC_LOOKUP","$check_ownership_of","mac_address","staff","no","str","MockAreaManagementModule","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","area_id","users","fixed","at_location","mac","Md5","coordinates_from","s2_cell_id","variance","valueOf","map_width","map_height","presets","$pan","dir","$tilt","tilt","$recall","$save_preset","interval","remaining","$start","setInterval","clearInterval","$pause","$resume","$stop","createCaptureModule","CaptureModule","$econtrol","args","createMeetingPushModule","MeetingPushModule","test","Status","$show_camera_pip","visible","selfview","$mic_mute","mic_mute","$presentation_mode","presentation_mode","$hangup","$call_place_on_hold","calls","$call_resume","$video_layout","layout","video_layout","$dtmf_send","digit","$dial","dial_number","Promise","createVideoConferenceModule","VideoConferenceModule","CONTACT_EVENTS","filterFn","end","itm","contact_time","$close_contacts","events","beginning","addDays","ending","isBefore","randomString","getUnixTime","setHours","e","createContactTracingModule","ContactTracingModule","SYSTEM_MOCKS","registerSystem","System","Bookings","ContactTracing","AreaManagement","createAreaManagementModule","LocationServices","MockLocationServicesModule","Camera","CameraModule","createCameraModule","Display","DisplayModule","createDisplayModule","Microphone","MicrophoneModule","createMicrophoneModule","Capture","MeetingPush","VidConf","mockSystem","createSystem","EVENT_MOCKS","zone_ids","period_start","period_end","new_event","item","CALENDAR_MOCKS","user2","user3","summary","primary","can_edit","hidden","handleSpaceAvailability","systems","system_ids","has","MOCK_ASSETS","images","set","subDays","hours","minutes","seconds","milliseconds","TYPES","TRACKING","MOCK_BOOKINGS","lvls","lvl_spaces","X","approved","approver","asset_count","booking_start","booking_end","user_id","user_name","user_email","booked_by_name","booked_by_email","asset_id","asset_name","booking_type","access","rejected","approver_id","approver_name","approver_email","plate_number","assets","amount","tracking","space_id","Oe","_t","vt","te","me","m","BOOKING_MOCKS","updateBooking","req","ASSET_MOCKS","updateAsset","window","global","AppComponent","BaseClass","_tracing","_settings","_org","_spaces","_cache","_snackbar","_hotkey","_clipboard","super","MOCKS","listen","localStorage","setItem","getItem","reload","copy","token","refreshToken","notifySuccess","L","clipboard","readText","tkn","clientId","addHours","setNotifyOutlet","initialised","pipe","first","toPromise","setAppName","get","settings","mock","origin","setupPlace","catch","setupCache","local_login","timeout","onInitError","current_user","clearTimeout","setDefaultCreator","currentUser","setInternalUserDomain","_b","dsn","sample_rate","Sentry","tracesSampleRate","initSentry","isMock","is_logged_in","invalidateToken","ctx_r12","ctx_r28","BootstrapComponent","_route","_router","buildings","active_building","levelsForBuilding","locations","active_level","subscription","queryParamMap","subscribe","params","osk_enabled","removeItem","levelWithID","bootstrapKiosk","checkBootstrap","updateRotations","orientations","rotations","active_rotation","loading","active_location","navigate","building_id","level_id","route","VirtualKeyboardComponent","component","background","paramMap","WelcomeComponent","loadChildren","AppExploreModule","VisitorCheckinModule","redirectTo","AppRoutingModule","useHash","AppModule","bootstrap","provide","ErrorHandler","useValue","showDialog","deps","Router","imports","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","enabled","HttpClientModule","SharedSpacesModule","__NgCli_bootstrap_1","bootstrapModule","Space","availability","starts_at","ends_at","org","query","toQueryString","Calendar","queryCalendarAvailability","list","cal","calendarsToSpaces","discount_cap","accept_points","total_cost","options_string","localeCompare","system_id","CateringItem","item_count","getTime","INVALID_STANDALONE_KEYS","HotkeysService","addEventListener","mapKey","last_down","keydown_states","BehaviorSubject","keydown_observers","asObservable","counter","combo_end","preventDefault","combo","combination","validCombination","registered_combos","last_key","updateCombinationEndList","presses","getValue","total","v","replace","non_meta","factory","DEFAULT_SETTINGS","debug","composer","domain","protocol","port","use_domain","app","short_name","logo_light","src","logo_dark","general","menu","children","copyright","checkin","stages","home","tiles","class","link","columns","booking","booking_types","display","show_fields","html_body","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","colors","can_select_building","show_legend_group_names","legend","Spaces","Desks","Zones","Icons","_current_user","jest","C","showUser","delay","retry","StaffUser","SettingsService","_title","built","isSameDay","init","_overrides","_applyCssVariables","_observables","_subjects","post","getTitle","setTitle","_app_name","pathname","trim","toUpperCase","_initialised","application","_user_settings","_applyUserSettings","showMetadata","app_name","z","S","_pending_settings","getItemWithKeys","override_settings","override","slice","saveUserSetting","_savePendingChanges","variable_map","css_string","element","createElement","head","appendChild","innerText","updateMetadata","dark_mode","classList","remove","font_size","style","fontSize","trigger","transition","opacity","animate","ANIMATION_SHOW_CONTRACT_EXPAND","_service","_timer","snackbar","action","on_action","config","Error","snackbar_ref","open","panelClass","dismiss","onAction","msg","notify","info","cache","isEnabled","__awaiter","checkForUpdate","activateUpdate","notifyInfo","hostname","href","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","hasOwnProperty","is_initialised","destroy","_timers","_intervals","_subscriptions","unsub","fn","Function","Subscription","unsubscribe","unsubWith","contains","subs","k","force","array","pos","arr","ceil","random","chars","dialog","ref","ConfirmModalComponent","CONFIRM_METADATA","race","componentInstance","reason","afterClosed","close","csv","delimiter","objPattern","RegExp","arrMatches","arrData","exec","headers","splice","row","JSON","parse","filename","contents","setAttribute","encodeURIComponent","click","removeChild","an_array","stack","pop","isArray","reverse","start1","end1","start2","end2","rand","sfc32","h","imul","charCodeAt","xmur3","seed","localeString","toLocaleTimeString","querySelector","getAttribute","language","is24HourTime","form","invalid","valid","ActionIconComponent","ctx_r3","bt","PopoutMenuComponent","show","ctx","ctx_r2","MapPinComponent","_details","stroke","show_message","MAP_FEATURE_DATA","MapRadiusComponent","_el","radius","zoom","last_seen_at","formatDistanceToNow","ngAfterViewInit","updateRadius","box","nativeElement","getBoundingClientRect","StatusOverlayComponent","MapLocateModalComponent","processFeature","processStyles","styles","style_map","focus","track_id","z_index","MAT_DIALOG_DATA","MAT_MODULES","MatDatepickerModule","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","MAT_DATE_LOCALE","IconComponent","i2","i1","GlobalBannerComponent","InteractiveMapComponent","i3","ctx_r4","maxHeight","maxWidth","_dialog_ref","confirm_text","cancel_text","disableClose","onConfirm","CustomTooltipData","CustomTooltipComponent","_element","_overlay","_injector","hover","ngOnChanges","changes","_updateInjector","_overlay_ref","x_pos","y_pos","_updateType","_portal","create","hasBackdrop","backdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","injector","Injector","providers","parent","CdkPortal","ctx_r1","has_viewed","banner","GlobalLoadingComponent","online","isOnline","InjectionToken","ratio$","_on_changes","ratio","svg_ratio$","svg_ratio","zoom$","center","onResize","updateDisplay","applyGlobalStyles","viewer","removeViewer","createView","updateInjectors","focusOn","labels","actions","updateView","getViewer","updateFeatureList","updateViewer","feature_list","desired_zoom","desired_center","M","_outlet_el","createViewer","K","j","_c","A","_d","rect","mappings","w","trackByFn","feature","stringify","_feature_list","toArray","old_injectors","injectors","D","_extra_data","MapPolygonComponent","_cdr","color","scale","zoom_value","data$","processPoints","points","P","diff","x_min","x_max","y_min","y_max","range","point_list","detectChanges","SafePipe","sanitizer","transform","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","pure","SecurityContext","SanitizePipe","sanitize","RESOURCE_URL","URL","SCRIPT","STYLE","HTML","ctx_r6","ctx_r8","oxw","DEFAULT_KEYS","focusInput","g","blur","bottom","centerHorizontally","handleKeyPress","cursor_pos","selectionStart","dispatchEvent","InputEvent","updateKeyState","selectionEnd","keyset","_default_user","roundToNearestMinutes","nearestTo","User","resources","online_meeting_url","online_meeting_id","online_meeting_provider","recurring_master_id","organiser","master","CalendarEvent","range_start","range_end","pattern","days_of_week","F","old_system","eventStatus","R","W","is_external","CateringOrder","ext","guests","is_today","toJSON","obj","can_check_in","isAfter","every","some","DURATION_MAP","month","months","week","weeks","day","days","minute","DEFAULT_RULES","auto_approve","stringToMinutes","spaces","rulemap","ruleset","checkRulesMatch","rules","matches","conditions","is_before","addToDate","is_after","min_length","max_length","PlaceZone","qr_code","raw_data","setting","disc_info","discovery_info","zone_id","extras","extra_id","extra_name","loan_items","BuildingLevel","_roles","roles","_lockers","lockers","locker_structure","_systems","_phone_numbers","phone_numbers","_location","longitude","latitude","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","address","booking_details","booking_rules","catering_restricted_from","currency","role","role_names","featuresForLevel","OrganisationService","_buildings","_levels","_active_building","combineLatest","onlineState","buildingSettings","building_settings","_building_settings","bld_id","organisation","_organisation","binding","id_list","tries","load","notifyError","orgs","loadOrganisation","loadBuildings","loadLevels","loadSettings","org_list","queryZones","auth","authority","org_zone","Organisation","building_list","limit","Z","Building","level_list","available_room_configs","prev","curr","app_settings","global_settings","saveBuilding","SpaceSelectItemComponent","ctx_r11","ctx_r21","SpaceSelectModalComponent","switchMap","querySpaceAvailability","H","shareReplay","available_spaces","filterSpacesFromRules","tap","filtered_spaces","multiple","space_map","spaceSelected","i8","SPACE_COUNT","linked","long_name","USER_DOMAIN","searchable","controlable","cost_hour","support_url","linked_rooms","image","configurations","SpacesService","_list","flatten","loadSpaces","space_list","predicate","_compare","valid_spaces","querySystems","sys","phone","notes","photo","required","sys_admin","support","department","assistance_required","preferred_beverage","accepted_terms_conditions","card_number","staff_id","fields","FormControl","Validators","FormGroup"],"sources":["./apps/visitor-kiosk/src/app/components/shared-components.module.ts","./apps/visitor-kiosk/src/app/components/take-photo.component.ts","./apps/visitor-kiosk/src/app/components/topbar-header.component.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/components/src/lib/app.component.ts","./apps/visitor-kiosk/src/app/bootstrap.component.ts","./apps/visitor-kiosk/src/app/welcome.component.ts","./apps/visitor-kiosk/src/app/app-routing.module.ts","./apps/visitor-kiosk/src/app/app.module.ts","./apps/visitor-kiosk/src/environments/environment.ts","./apps/visitor-kiosk/src/main.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/common/src/lib/hotkeys.service.ts","./apps/visitor-kiosk/src/environments/settings.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/settings.service.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/base.class.ts","./libs/common/src/lib/general.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/helpers.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.utilities.ts"],"sourcesContent":["import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { TopbarHeaderComponent } from './topbar-header.component';\nimport { TakePhotoComponent } from './take-photo.component';\n\nconst COMPONENTS: Type<any>[] = [TopbarHeaderComponent, TakePhotoComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatBottomSheetModule,\n    MatCheckboxModule,\n    MatRadioModule,\n];\n\nconst CDK_MODULES: any[] = [ScrollingModule];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        RouterModule,\n        EditorModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n    ],\n    exports: [\n        ComponentsModule,\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n    ],\n})\nexport class SharedComponentsModule {}\n","import {\n    Component,\n    OnInit,\n    HostBinding,\n    OnDestroy,\n    Output,\n    EventEmitter,\n} from '@angular/core';\n\n@Component({\n    selector: 'a-take-photo',\n    template: `\n        <div\n            name=\"camera\"\n            class=\"flex flex-col items-center justify-center rounded overflow-hidden relative\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n            <div class=\"text\">Please wait...</div>\n            <video\n                id=\"video\"\n                #video\n                autoplay\n                width=\"360\"\n                height=\"400\"\n                class=\"absolute inset-0\"\n            ></video>\n            <canvas\n                id=\"canvas\"\n                #canvas\n                class=\"absolute inset-0\"\n                width=\"360\"\n                height=\"400\"\n            ></canvas>\n        </div>\n        <div class=\"flex items-center justify-center mt-4 space-x-2\">\n            <button\n                class=\"take-photo\"\n                *ngIf=\"!hasPhoto; else accept_state\"\n                mat-button\n                (click)=\"takePhoto()\"\n            >\n                Take Photo\n            </button>\n        </div>\n        <ng-template #accept_state>\n            <button class=\"inverse\" mat-button (click)=\"cancelPhoto()\">\n                Cancel\n            </button>\n            <button mat-button (click)=\"acceptPhoto()\">Accept</button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n            }\n\n            [name='camera'] {\n                width: 22.5rem;\n                height: 25rem;\n            }\n\n            button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class TakePhotoComponent implements OnInit, OnDestroy {\n    @Output() public photoAccepted = new EventEmitter();\n    @HostBinding('class.has-photo') public hasPhoto = false;\n    public video: HTMLVideoElement;\n    public canvas: HTMLCanvasElement;\n    private canvasContext = null;\n\n    private constraints = {\n        audio: false,\n        video: {\n            width: { min: 360, max: 360 },\n            height: { min: 400, max: 400 },\n        },\n    };\n\n    public imgSrc = null;\n\n    public ngOnInit() {\n        setTimeout(() => this.getCanvasContext(), 500);\n    }\n\n    public ngOnDestroy() {\n        this.stopCapture();\n        this.video = null;\n        this.canvasContext = null;\n        this.canvas = null;\n        this.imgSrc = null;\n    }\n\n    private startCapture() {\n        this.imgSrc = null;\n        console.log('TakePhotoComponent::startCapture');\n        this.video = document.getElementById('video') as any;\n        if (!this.video) {\n            return setTimeout(() => this.startCapture(), 200);\n        } else {\n            navigator.mediaDevices\n                .getUserMedia(this.constraints)\n                .then((stream) => {\n                    this.video.srcObject = stream;\n                });\n        }\n    }\n\n    private stopCapture() {\n        console.log('TakePhotoComponent::stopCapture');\n        if (this.video?.srcObject) {\n            (this.video.srcObject as any)\n                .getVideoTracks()\n                .forEach((track) => track.stop());\n        }\n    }\n\n    private getCanvasContext() {\n        console.log('TakePhotoComponent::getCanvasContext');\n        this.canvas = document.getElementById('canvas') as any;\n        if (!this.canvas) {\n            return setTimeout(() => this.getCanvasContext(), 200);\n        }\n        this.canvasContext = this.canvas.getContext('2d');\n        setTimeout(() => this.startCapture(), 200);\n    }\n\n    public takePhoto() {\n        console.log('TakePhotoComponent::takePhoto');\n        this.canvasContext.drawImage(\n            this.video,\n            0,\n            0,\n            this.canvas.width,\n            this.canvas.height\n        );\n        this.hasPhoto = true;\n        this.stopCapture();\n    }\n\n    public cancelPhoto() {\n        console.log('TakePhotoComponent::cancelPhoto');\n        this.canvasContext.clearRect(\n            0,\n            0,\n            this.canvas.width,\n            this.canvas.height\n        );\n        this.hasPhoto = false;\n        this.startCapture();\n    }\n\n    public acceptPhoto() {\n        try {\n            this.imgSrc = this.canvas.toDataURL('image/jpeg', 0.75);\n            this.photoAccepted.emit(this.imgSrc);\n            console.log('TakePhotoComponent::acceptPhoto Success');\n        } catch (err) {\n            console.error(\n                'TakePhotoComponent::acceptPhoto Error converting image',\n                err\n            );\n            this.photoAccepted.emit(null);\n            this.cancelPhoto();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { format } from 'date-fns';\n\n@Component({\n    selector: 'a-topbar-header',\n    template: `\n        <div class=\"flex items-center justify-between bg-secondary shadow\">\n            <a\n                mat-button\n                [routerLink]=\"['/']\"\n                class=\"h-full flex flex-col justify-center px-4\"\n            >\n                <img class=\"h-10 my-2\" src=\"assets/logo-dark.svg\" />\n            </a>\n            <div\n                class=\"ml-auto h-full flex flex-col justify-center text-white px-4\"\n            >\n                {{ time }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 3.5rem;\n            }\n\n            a {\n                border-radius: 0;\n            }\n\n            img {\n                max-height: 2.5rem;\n                max-width: 50vw;\n            }\n        `,\n    ],\n})\nexport class TopbarHeaderComponent {\n    public date: number;\n\n    public get time() {\n        return format(this.date || Date.now(), 'EEEE, MMMM do, h:mma');\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0,0.0],\n                                            [0.0,0.5],\n                                            [0.5,0.5],\n                                            [0.5,0.0]\n                                        ]\n                                    }\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    group: '',\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures() }));\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system.id]) {\n        event_spaces[event.system.id] = [];\n    }\n    event_spaces[event.system.id].push(event);\n});\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly environment;\n\n    public readonly help = {\n        'help': {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`\n        }\n    }\n\n    public tabs =[\n        {\n           icon: \"laptop\",\n           name: \"Laptop\",\n           type: 'Display',\n           inputs: ['Display_1'],\n           help: \"laptop-help\"\n         },\n        {\n           icon: \"call\",\n           name: \"VC\",\n           inputs: [\"VidConf_1\"],\n           help: \"vidconf-help\",\n           controls: \"vidconf-controls\"\n         },\n      ]\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        const types = unique(this.env_sources.map((_) => _.type));\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        console.log('Power:', state);\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Display 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Display 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display3: {\n        name: 'Display 3',\n        type: 'Display',\n        source: 'PC2',\n        mod: 'Display_3',\n    },\n    Display4: {\n        name: 'Display 4',\n        type: 'Display',\n        mod: 'Display_4',\n    },\n    Display5: {\n        name: 'Display 5',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5.hashStr(users[predictableRandomInt(users.length)].email),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return MOCK_SPACES;\n        },\n    });\n}\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","\nexport const MOCK_ASSETS = [\n    {\n        id: '1',\n        name: 'iPad',\n        category: 'Technology',\n        images: [\n            { name: 'chrome.svg', url: 'assets/support/chrome-logo.svg' },\n            { name: 'firefox.svg', url: 'assets/support/firefox-logo.svg' },\n            { name: 'safari.svg', url: 'assets/support/safari-logo.svg' },\n        ],\n    },\n    { id: '2', name: 'iPhone', category: 'Technology' },\n    { id: '3', name: 'iWatch', category: 'Technology' },\n    { id: '4', name: 'Chair', category: 'Furniture' },\n    { id: '5', name: 'Lounge', category: 'Furniture' },\n    { id: '6', name: 'Table', category: 'Furniture' },\n    { id: '7', name: 'Couch', category: 'Furniture' },\n    { id: '8', name: 'Something', category: 'Other' },\n];\n","import { padString, predictableRandomInt, randomString } from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = next;\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location']\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces = MOCK_SPACES.filter(_ => _.zones.includes(lvl?.id));\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id: type === 'parking' ? `park-${position}` : `desk-${lvl?.id}-${index}`,\n        asset_name: type === 'parking' ? position : `${lvl?.id}-${index}`,\n        description: type === 'parking' ? position : `Desk ${index}`,\n        title: `${type} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(8, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'),\n            assets: new Array(asset_count).fill(0).map(_ => ({ ...MOCK_ASSETS[predictableRandomInt(asset_count)], amount: predictableRandomInt(5, 1)})),\n            tracking: approved === 0 ? TRACKING[predictableRandomInt(TRACKING.length)] : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id\n        },\n    };\n});\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            console.log('New Booking:', new_event);\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_ASSETS } from './assets.data';\n\nexport const ASSET_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateAsset = (id, data) => {\n        const index = MOCK_ASSETS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_ASSETS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateAsset(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Integrations } from '@sentry/tracing';\nimport { first } from 'rxjs/operators';\nimport {\n    clientId,\n    invalidateToken,\n    isMock,\n    refreshToken,\n    token,\n} from '@placeos/ts-client';\n\nimport {\n    BaseClass,\n    current_user,\n    currentUser,\n    HotkeysService,\n    notifySuccess,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\nimport { addHours } from 'date-fns';\n\nimport * as Sentry from '@sentry/angular';\nimport * as MOCKS from '@placeos/mocks';\n\nexport function initSentry(dsn: string, sample_rate: number = 0.2) {\n    if (!dsn) return;\n    Sentry.init({\n        dsn,\n        tracesSampleRate: sample_rate,\n    });\n}\n\n(window as any).global = window;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <global-banner></global-banner>\n        <div class=\"flex-1 w-full relative h-1/2\">\n            <router-outlet></router-outlet>\n        </div>\n        <global-loading></global-loading>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            width: 100%;\n        }\n    `],\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    constructor(\n        private _tracing: Sentry.TraceService,\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _spaces: SpacesService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        log('APP', 'MOCKS:', MOCKS);\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem(\n                'mock',\n                `${localStorage.getItem('mock') !== 'true'}`\n            );\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(`${token()}|${refreshToken()}`);\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard?.readText().then((tkn) => {\n                const parts = tkn.split('|');\n                const id = clientId();\n                localStorage.setItem(`${id}_access_token`, `${parts[0]}`);\n                localStorage.setItem(`${id}_refresh_token`, `${parts[1]}`);\n                localStorage.setItem(\n                    `${id}_expires_at`,\n                    `${addHours(new Date(), 6).valueOf()}`\n                );\n                notifySuccess('Successfully pasted token.');\n                setTimeout(() => location.reload(), 2000);\n            });\n        });\n        setNotifyOutlet(this._snackbar);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch((_) =>  console.error(_));\n        setupCache(this._cache);\n        if (!settings.local_login) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n        initSentry(this._settings.get('app.sentry_dsn'));\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        console.error('Error initialising user.');\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { BaseClass, Identity, SettingsService } from '@placeos/common';\nimport { VirtualKeyboardComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: '[bootstrap]',\n    template: `\n        <div\n            form\n            class=\"absolute top-2 left-1/2 transform -translate-x-1/2 bg-white overflow-hidden flex flex-col items-center shadow rounded\"\n        >\n            <header\n                class=\"px-4 py-2 bg-primary text-white w-full text-lg font-medium mb-2\"\n            >\n                Map Kiosk Setup\n            </header>\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div *ngIf=\"buildings && buildings.length\">\n                    <label>Select a building from the dropdown below</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            building\n                            [(ngModel)]=\"active_building\"\n                            (ngModelChange)=\"updateRotations()\"\n                            placeholder=\"Select building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of buildings\"\n                                [value]=\"option\"\n                            >\n                                {{ option.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"levels && levels.length\">\n                    <label>Select a level from the dropdown below</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            level\n                            [(ngModel)]=\"active_level\"\n                            placeholder=\"Select level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of levels\"\n                                [value]=\"option\"\n                            >\n                                {{ option.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"rotations && rotations.length\">\n                    <label>\n                        Please select an orientation from the dropdown below\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            [(value)]=\"active_rotation\"\n                            placeholder=\"Select orientation\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of rotations\"\n                                [value]=\"option\"\n                            >\n                                {{ option.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div *ngIf=\"locations && locations.length\">\n                    <label>\n                        Please select an fixed location from the dropdown below\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            #select\n                            [(value)]=\"active_location\"\n                            placeholder=\"Select location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let option of locations\"\n                                [value]=\"option\"\n                            >\n                                {{ option.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <button\n                    mat-button\n                    class=\"mb-2\"\n                    [disabled]=\"!active_building && !active_level\"\n                    (click)=\"bootstrapKiosk()\"\n                >\n                    Finish Setup\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 m-auto\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n\n            [form] > div {\n                padding: 0 1em;\n            }\n        `,\n    ],\n})\nexport class BootstrapComponent extends BaseClass implements OnInit {\n    /** Loading state of the bootstrap */\n    public loading: string;\n    /** Actively selected building */\n    public active_building: Building;\n    /** Actively selected level */\n    public active_level: BuildingLevel;\n    /** Actively selected level */\n    public active_rotation: Identity;\n    /** Actively selected location */\n    public active_location: Identity;\n\n    public rotations: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** List of available levels */\n    public get levels(): readonly BuildingLevel[] {\n        if (!this.active_building) {\n            return [];\n        }\n        return this._org.levelsForBuilding(this.active_building) || [];\n    }\n\n    /** List of available locations */\n    public get locations(): readonly Identity[] {\n        if (!this.active_level) {\n            return [];\n        }\n        return this.active_level.locations || [];\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('osk')) {\n                    const osk_enabled = params.get('osk') === 'true';\n                    localStorage.setItem('OSK.enabled', `${osk_enabled}`);\n                }\n                if (params.has('clear') && params.get('clear') === 'true') {\n                    localStorage.removeItem('KIOSK.building');\n                    localStorage.removeItem('KIOSK.level');\n                    localStorage.removeItem('KIOSK.orientation');\n                }\n                if (params.has('level')) {\n                    const level = this._org.levelWithID([params.get('level')]);\n                    if (level) {\n                        this.active_level = level;\n                        this.bootstrapKiosk();\n                    }\n                }\n            })\n        );\n        this.timeout('check', () => this.checkBootstrap(), 1000);\n    }\n\n    public updateRotations() {\n        const orientations = this.active_building.orientations;\n        const rotations: Identity[] = [];\n        for (const key in orientations) {\n            if (orientations[key]) {\n                rotations.push({\n                    id: key,\n                    name: `${key.split('_').join(' ')} (${\n                        orientations[key] * 90\n                    }°)`,\n                    value: orientations[key],\n                });\n            }\n        }\n        this.rotations = rotations;\n        this.active_rotation = this.rotations[0];\n    }\n\n    /**\n     * Store bootstrapped values and navigate to the main page\n     */\n    public bootstrapKiosk() {\n        this.loading = 'Bootstrapping application...';\n        if (this.active_level) {\n            if (localStorage) {\n                localStorage.setItem(\n                    'KIOSK.building',\n                    this.active_building?.id || this.active_level.parent_id\n                );\n                localStorage.setItem('KIOSK.level', this.active_level.id);\n                if (this.active_rotation) {\n                    localStorage.setItem(\n                        'KIOSK.orientation',\n                        `${this.active_rotation.id}`\n                    );\n                }\n                if (this.active_location) {\n                    localStorage.setItem(\n                        'KIOSK.location',\n                        `${this.active_location.id}`\n                    );\n                }\n            }\n            this._router.navigate(['/explore']);\n        }\n        this.loading = null;\n    }\n\n    /**\n     * Check for any existing bootstrapped values\n     */\n    private checkBootstrap() {\n        this.loading = 'Checking for existing parameters...';\n        if (localStorage) {\n            const building_id = localStorage.getItem('KIOSK.building');\n            const level_id = localStorage.getItem('KIOSK.level');\n            if (building_id && level_id) {\n                const path = this._settings.get('app.root') || 'welcome';\n                const route = path.split('/');\n                route[0] = `/${route[0]}`;\n                this._router.navigate(route);\n            }\n        }\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.loading = null;\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'app-welcome',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-transparent z-50 flex flex-col items-center justify-center bg-center bg-cover\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <a-topbar-header class=\"w-full\"></a-topbar-header>\n            <div\n                class=\"flex flex-col flex-1 w-full items-center justify-center text-white bg-black bg-opacity-50 space-y-4\"\n            >\n                <h3 class=\"text-2xl mb-4\">\n                    Welcome to PlaceOS Self Service Kiosk\n                </h3>\n                <a\n                    matRipple\n                    [routerLink]=\"['/checkin']\"\n                    class=\"text-xl py-2 px-8 mt-4 border-2 border-white text-white w-40 whitespace-nowrap flex items-center justify-center\"\n                >\n                    Check In\n                </a>\n                <a\n                    *ngIf=\"level\"\n                    matRipple\n                    [routerLink]=\"['/explore', level]\"\n                    class=\"text-xl py-2 px-8 mt-4 border-2 border-white text-white w-40 whitespace-nowrap flex items-center justify-center\"\n                >\n                    Explore\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            a {\n                height: 3.5rem;\n                background-color: rgba(255, 255, 255, 0.25);\n            }\n        `,\n    ],\n})\nexport class WelcomeComponent extends BaseClass implements OnInit, OnDestroy {\n    /** Level to initially load on explore */\n    public level = '';\n\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this.route.paramMap.subscribe((params) => {\n                if (params.has('level')) {\n                    this.level = params.get('level');\n                }\n            })\n        );\n        this.subscription(\n            'level',\n            this._settings\n                .listen('KIOSK.level')\n                .subscribe((lvl) => (this.level = lvl))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BootstrapComponent } from './bootstrap.component';\nimport { WelcomeComponent } from './welcome.component';\n\nconst routes: Routes = [\n    { path: 'bootstrap', component: BootstrapComponent },\n    { path: 'welcome', component: WelcomeComponent },\n    {\n        path: 'explore',\n        loadChildren: () =>\n            import('./explore/explore.module').then((m) => m.AppExploreModule),\n    },\n    {\n        path: 'checkin',\n        loadChildren: () =>\n            import('./checkin/checkin.module').then(\n                (m) => m.VisitorCheckinModule\n            ),\n    },\n    { path: '**', redirectTo: 'bootstrap' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppComponent } from '../../../../libs/components/src/lib/app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedComponentsModule } from './components/shared-components.module';\nimport { BootstrapComponent } from './bootstrap.component';\nimport { WelcomeComponent } from './welcome.component';\nimport { environment } from '../environments/environment';\n\nimport * as Sentry from '@sentry/angular';\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedSpacesModule } from '@placeos/spaces';\n@NgModule({\n    declarations: [AppComponent, BootstrapComponent, WelcomeComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n        HttpClientModule,\n        FormsModule,\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useValue: Sentry.createErrorHandler({\n                showDialog: false,\n            }),\n        },\n        {\n            provide: Sentry.TraceService,\n            deps: [Router],\n        },\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced durinx build by using the `fileReplacements` array.\n// `nx build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n\n    public readonly options_string: string;\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.options = data.options || [];\n        this.tags = data.tags || [];\n        this.total_cost =\n            (this.unit_price +\n                this.options\n                    .map((i) => i.unit_price || 0)\n                    .reduce((c, a) => c + a, 0)) *\n            this.quantity;\n\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            new Date().getTime();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","\n\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [\n            {\n                name: 'Home',\n                route: '/home',\n            },\n            {\n                name: 'Booking',\n                route: '/book',\n                children: [\n                    {\n                        name: 'Spaces',\n                        route: '/book/spaces',\n                    },\n                    {\n                        name: 'Desks',\n                        route: '/book/desks',\n                    },\n                ],\n            },\n            {\n                name: 'Explore',\n                route: '/explore',\n                children: [\n                    {\n                        name: 'People',\n                        route: '/explore/people',\n                    },\n                    {\n                        name: 'Spaces',\n                        route: '/explore/spaces',\n                    },\n                ],\n            },\n            {\n                name: 'Help',\n                route: '/help',\n            },\n            {\n                name: 'Schedule',\n                route: '/schedule',\n            },\n            {\n                name: 'Control',\n                route: '/control',\n            },\n            {\n                name: 'Directory',\n                route: '/directory',\n            },\n        ],\n        copyright: 'Place Technology',\n        position: 'left',\n    },\n    checkin: {\n        stages: [\n            'qrcode',\n            'details',\n            // 'photo',\n            // 'visitor-pass',\n            'result',\n            'preferences',\n            'final',\n        ],\n    },\n} as any;\n\n/**\n * HOME PAGE SETTINGS\n */\nconst home = {\n    background: 'assets/img/skyline.jpg',\n    tiles: [\n        {\n            name: 'Booking',\n            route: '/book/spaces',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'event',\n            },\n        },\n        {\n            name: 'Desks',\n            route: '/book/desks',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'pin_drop',\n            },\n        },\n        {\n            name: 'Explore',\n            route: '/explore',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'map',\n            },\n        },\n        {\n            name: 'Help',\n            route: '/help',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'help_outline',\n            },\n        },\n        {\n            name: 'Schedule',\n            route: '/schedule',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'today',\n            },\n        },\n        {\n            name: 'Control',\n            route: '/control',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'settings_remote',\n            },\n        },\n        {\n            name: 'Directory',\n            route: '/directory',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'search',\n            },\n        },\n    ],\n};\n\n/**\n * HELP/SUPPORT SETTINGS\n */\n\nconst help = {\n    tiles: [\n        {\n            name: 'About Engine',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact Place',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n\n/**\n * BOOKING FLOW SETTINGS\n */\n\nconst booking = {\n    booking_types: [\n        { display: 'Internal', value: 'internal' },\n        { display: 'Client', value: 'client' },\n        { display: 'External', value: 'external' },\n        { display: 'Setup', value: 'setup' },\n        { display: 'Training', value: 'training' },\n        { display: 'Interview', value: 'interview' },\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n    ],\n    html_body: true,\n    multiple_spaces: false,\n    desk_start: 9,\n};\n\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\n\nconst space_display = {\n    show_images: false,\n};\n\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\n\nconst directory = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\n\nconst explore = {\n    colors: {\n        'space-available': '#43a047',\n        'space-requestable': '#ffb300',\n        'space-unavailable': '#e53935',\n        'space-not-bookable': '#ccc',\n\n        'desk-available': '#43a047',\n        'desk-available-stroke': '#1b5e20',\n        'desk-unavailable': '#e53935',\n        'desk-unavailable-stroke': '#b71c1c',\n        'desk-reserved': '#ffb300',\n        'desk-reserved-stroke': '#ff6f00',\n        'desk-not-bookable': '#fff',\n        'desk-not-bookable-stroke': '#ccc',\n\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: false,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-available', name: 'Space Available' },\n            { key: 'space-requestable', name: 'Space available by request' },\n            { key: 'space-unavailable', name: 'Space in use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n        ],\n        Desks: [\n            { key: 'desk-available', name: 'Desk Available' },\n            { key: 'desk-reserved', name: 'Desk Reserved' },\n            { key: 'desk-unavailable', name: 'Desk in use' },\n            { key: 'desk-not-bookable', name: 'Desk not bookable' },\n        ],\n        Zones: [\n            { key: 'zone-low', name: 'Low Zone Utilisation' },\n            { key: 'zone-medium', name: 'Medium Zone Utilisation' },\n            { key: 'zone-high', name: 'High Zone Utilisation' },\n        ],\n        Icons: [\n            {\n                key: 'icon-bin',\n                name: 'Bin',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n            },\n        ],\n    },\n};\n\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    name: 'VisitorKiosk',\n    title: 'Visitor Kiosk',\n    description: 'Kiosk UI written with Angular Framework',\n    short_name: 'KIOSK',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg'\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg'\n    },\n    general,\n    home,\n    help,\n    booking,\n    space_display,\n    directory,\n    explore\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/visitor-kiosk',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n    mock: false,\n};\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue();\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { currentUser } from './user-state';\nimport { current_user } from '..';\nimport { first } from 'rxjs/operators';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        });\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.dark_mode) {\n            document.body.classList.add('dark');\n        } else {\n            document.body.classList.remove('dark');\n        }\n        if (settings.font_size) {\n            document.body.style.fontSize = `${settings.font_size}px`;\n        }\n    }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"ff81c58\",\n    \"hash\": \"ff81c58\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"ff81c58\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1652245747146\n};\n/* tslint:enable */\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        throw new Error(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.debug(msg);\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.error(msg);\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(async () => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    console.log(\n        'Mock:',\n        settings.mock,\n        location.href.includes('mock=true'),\n        localStorage.getItem('mock') === 'true'\n    );\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseClass implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | (() => void);\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n) {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]);\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE') \n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys.map((key) => JSON.stringify(item[key])).join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup) {\n    const invalid = [];\n    for (const key in form.controls) {\n        if (!form.controls[key].valid) {\n            invalid.push(key);\n        }\n    }\n    return invalid;\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            mat-icon-button\n            class=\"relative flex items-center justify-center h-8 w-8\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [name='message'] {\n                transform: translate(-50%, -120%);\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        mat-button\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { BaseClass } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapPinComponent } from '@placeos/components';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <header class=\"h-12 px-2\">\n            <app-icon>place</app-icon>\n            <h1 class=\"ml-2\">{{ item.name }}</h1>\n        </header>\n        <div\n            body\n            class=\"relative overflow-hidden pointer-events-none\"\n            *ngIf=\"level\"\n        >\n            <i-map\n                [src]=\"level.map_id\"\n                [styles]=\"style_map\"\n                [features]=\"features\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n            </i-map>\n            <div\n                class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow\"\n            >\n                {{ level?.name }}\n            </div>\n        </div>\n        <footer\n            class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                Close\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n                width: 80vw;\n                height: 65vh;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        console.log('Locate Data:', this._data);\n    }\n\n    public ngOnInit(): void {\n        this.timeout('init', () => {\n            this.processFeature();\n            this.processStyles();\n        }, 1000);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        console.log('Feature:', focus);\n        this.features = [focus];\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\n\nexport * from './action-icon.component';\nexport * from './binding.directive';\nexport * from './confirm-modal.component';\nexport * from './icon.component';\nexport * from './login.component';\nexport * from './popout-menu.component';\nexport * from './unauthorised.component';\nexport * from './user-avatar.component';\nexport * from './interactive-map.component';\nexport * from './map-pin.component';\nexport * from './map-radius.component';\nexport * from './misconfigured.component';\nexport * from './status-overlay.component';\nexport * from './custom-table.component';\nexport * from './custom-tooltip.component';\nexport * from './fixed.pipe';\nexport * from './safe.pipe';\nexport * from './sanitise.pipe';\nexport * from './virtual-keyboard.component';\nexport * from './global-loading.component';\nexport * from './map-locate-modal.component';\n\nexport * from './authorised-admin.guard';\nexport * from './authorised-user.guard';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, ...MAT_MODULES],\n    providers: [\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n    ],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button mat-button name=\"accept\" class=\"w-32\" (click)=\"onConfirm()\">\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends BaseClass\n    implements OnChanges, OnDestroy {\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this._updateType();\n        if (this._overlay_ref) this.close();\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            hasBackdrop: !!this.backdrop,\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withPositions([\n                    {\n                        originX: this.x_pos || 'end',\n                        originY:\n                            (this.y_pos === 'top'\n                                ? 'bottom'\n                                : this.y_pos == 'bottom'\n                                ? 'top'\n                                : this.y_pos) || 'bottom',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'top',\n                    },\n                ]),\n        });\n        this._overlay_ref.attach(this._portal);\n        if (this.backdrop) {\n            this.subscription(\n                'backdrop',\n                this._overlay_ref.backdropClick().subscribe(() => this.close())\n            );\n        }\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button mat-icon-button (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { first } from 'rxjs/operators';\nimport { isOnline } from '@placeos/ts-client';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 9999;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n    ) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        setTimeout(() => (this.loading = false), 300);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"app-icon\">\n            <i *ngIf=\"!icon || icon.type !== 'img'\" [class]=\"icon?.class || className\">\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img *ngIf=\"icon && icon.type === 'img'\" [src]=\"icon.src | safe: 'resource'\" />\n        </div>\n    `,\n    styles: [\n        `\n            .app-icon {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 1.25em;\n                width: 1.25em;\n            }\n\n            i {\n                font-size: 1em;\n            }\n\n            img {\n                height: 1em;\n                width: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\"></div>\n        <mat-spinner\n            *ngIf=\"!viewer || loading\"\n            class=\"absolute\"\n            [diameter]=\"48\"\n        ></mat-spinner>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends BaseClass\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            console.log('Loading:', this.loading);\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            console.log('Set features:', this.feature_list);\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () => this.createView());\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id || JSON.stringify({ ...feature });\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) => _.get(MAP_FEATURE_DATA)?.track_id && _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { BaseClass, HashMap } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends BaseClass implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: HashMap<number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent extends BaseClass implements OnDestroy {\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { HashMap, Identity, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Master event */\n    public master?: CalendarEvent;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees: HashMap = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => user.resource)\n                        .map((s) => new Space(s)),\n                'email'\n            ) || [];\n        this.title = data.title || '';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone = data.timezone || '';\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus(this) || 'none';\n        this.location = data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): HashMap {\n        const obj: HashMap = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(this.recurrence.end),\n            };\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(attendees, 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes, addSeconds,\n\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (details.resources.every((i) => i.response_status === 'accepted')) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: start.valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { PlaceZone } from '@placeos/ts-client';\n\nexport class Desk {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n    }\n\n    public format() {\n        const { id, name, bookable, groups, features } = this;\n        return {\n            id,\n            name,\n            bookable,\n            groups,\n            features\n        };\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","import { HashMap, Identity } from '@placeos/common';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: HashMap = {};\n    /** List of points of interest for the level */\n    public readonly locations: readonly Identity[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys, HashMap } from '@placeos/common';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: HashMap;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { HashMap, Identity, RoomConfiguration } from '@placeos/common';\nimport { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: HashMap;\n    locker_structure: HashMap;\n    roles: HashMap;\n    zone: string;\n    location: string;\n    neighbourhoods: HashMap;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n\n    public readonly orientations: HashMap<number>;\n    public readonly attributes: readonly Identity[];\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location ||\n            disc_info.location || { longitude: null, latitude: null };\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    HashMap,\n    notifyError,\n    RoomConfiguration,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: HashMap[] = [];\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: HashMap<HashMap> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings(): HashMap[] {\n        return this._settings;\n    }\n\n    /** Mapping of builgins to settings overrides */\n    public get building_settings(): HashMap<HashMap> {\n        return this._building_settings;\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): HashMap {\n        if (!bld_id && this.building) {\n            bld_id = this.building.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._service.overrides = [\n            ...this._settings,\n            this.buildingSettings(bld.id).details,\n        ];\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return this.building?.bindings[name] || this._organisation?.bindings[name];\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadBuildings();\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: HashMap = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const building_list = await queryZones({\n            tags: 'building',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) =>\n                    i.data.filter((_) => _.parent_id === this._organisation?.id)\n                )\n            )\n            .toPromise();\n        if (!building_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: HashMap = (\n                await showMetadata(bld.id, 'bindings').toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings }));\n        }\n        this._buildings.next(buildings);\n        const id = localStorage.getItem(`PLACEOS.building`);\n        if (id && this.buildings.find((bld) => bld.id === id)) {\n            this._active_building.next(\n                this.buildings.find((bld) => bld.id === id)\n            );\n        }\n        if (!this.building?.id && buildings?.length > 0) {\n            this.building = buildings[0];\n        }\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.app_name || 'workplace'\n        ).toLowerCase()}_app`;\n        const app_settings = await showMetadata(this._organisation.id, app_name).toPromise();\n        const global_settings = await showMetadata(this._organisation.id, 'settings').toPromise();\n        this._settings = [global_settings.details, app_settings.details];\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = await showMetadata(bld.id, app_name).toPromise();\n        }\n        this._service.overrides = [\n            ...this._settings,\n            this.buildingSettings(this.building.id).details,\n        ];\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                mat-icon-button\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button mat-button class=\"w-32\" [class.request]=\"space.by_request\">\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button mat-button (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends BaseClass {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.booking.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [CommonModule, MatDialogModule, ComponentsModule],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from '@placeos/organisation';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly image: string;\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.image = data.image || '';\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from './space.class';\nimport { flatten, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(map(_ => unique(flatten(_.map(i => i.features)))));\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.loadSpaces());\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    /**\n     * Find space with given id/email\n     * @param id ID/Email address associated with the space\n     */\n    public find(id: string) {\n        return this._list\n            .getValue()\n            .find((space) => space.id === id || space.email === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number; \n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n    department?: string;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser,\n    host: string = ''\n): FormGroup {\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n"],"sourceRoot":"webpack:///","file":"main.js"}