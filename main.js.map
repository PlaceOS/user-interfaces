{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/organisation.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/spaces.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/base.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/guards/authorised-user.guard.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/general.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/organisation.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space-select-modal/item/item.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space-select-modal/item/item.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/action-field/action-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/unauthorised/unauthorised.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/calendar/src/lib/calendar.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/lib/events.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/desk.class.ts","./src/environments/environment.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/room-configuration.interface.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/lib/event.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/realtime/desks.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/base-api.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-avatar/user-avatar.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-form/user-form.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-form/user-form.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/vorlon.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/user.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/zone.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/popout-menu/popout-menu.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/events.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/common.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/realtime/control.ts","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/new-user-modal/new-user-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/new-user-modal/new-user-modal.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/zone.data.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/time-field/time-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/time-field/time-field.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/hotkeys.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/map-pin.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/users.data.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/api.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/lib/event.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/realtime/events.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/settings.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/base.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/placeos.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/spaces.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/staff.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/lib/events.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/formatting.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/calendars.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-item.class.ts","./src/app/app.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/action-icon/action-icon.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space-select-modal/space-select-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space-select-modal/space-select-modal.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/guards/authorised-admin.guard.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/events.data.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/index.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/systems-bindings.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/binding/binding.directive.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/organisation.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/duration-field/duration-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/angular-animations.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/organisation.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/building.utilities.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/common.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/login/login.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/login/login.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/date-field/date-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/google-analytics.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/map-radius.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/app.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/interactive-map.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-search-field/user-search-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/application.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/confirm-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/space.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-list-field/user-list-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/user-list-field/user-list-field.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/guests.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/users.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/counter/counter.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/spaces/src/lib/spaces.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/building.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/events/src/lib/helpers.ts","/home/runner/work/user-interfaces/user-interfaces/libs/calendar/src/lib/calendar.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/version.ts","/home/runner/work/user-interfaces/user-interfaces/libs/organisation/src/lib/level.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/systems.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/icon/icon.component.ts","./src/app/app-routing.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/spaces.data.ts","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/settings.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/mocks/src/lib/api/zones.mock.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/booking-form/booking-form.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/booking-form/booking-form.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/components/src/lib/components.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/users/src/lib/user.class.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","/home/runner/work/user-interfaces/user-interfaces/libs/common/src/lib/notifications.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\nimport { HashMap } from '@user-interfaces/common';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3).fill(0).map(i => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { SpaceSelectItemComponent } from './space-select-modal/item/item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        MatDialogModule,\n        ComponentsModule\n    ],\n    providers: [],\n    exports: [...COMPONENTS]\n})\nexport class SharedSpacesModule {}\n","\nimport { Injectable } from '@angular/core';\nimport { get, post, put, patch, del } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, Subscriber, Subject } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from './base.class';\nimport { HashMap } from './types';\nimport { toQueryString } from './api';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\n@Injectable()\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n\n    protected _api_url: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    constructor() {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this._api_url = '/api/engine/v2';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route() {\n        return `/api/staff/v1/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (filterFn(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find((i) => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let cache = 1000;\n        let subroute = '';\n        if (query_params) {\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n            subroute = query_params.subroute;\n            delete query_params.subroute;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route()}${subroute ? '/' + subroute : ''}${\n                    query ? '?' + query : ''\n                }`;\n                let result: T[] | HashMap[] = [];\n                get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a specific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route()}${query ? '?' + query : ''}`;\n                let result: T = null;\n                post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Save changes to item. Create a new item if it doesn't exist\n     * @param data Updated state of the item\n     * @param q Query parameters to pass to request\n     */\n    public save(data: HashMap, q: HashMap = {}) {\n        return data.id ? this.update(data.id, data, q) : this.add(data, q);\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     * @param query_params Query Params\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post',\n        query_params: HashMap = {}\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const _query = toQueryString(query_params);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route()}/${id}/${task_name}${_query ? '?' + _query : ''}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? post(url, post_data)\n                        : get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make patch request for changes to the item with the given id\n     * @param id ID of the item being patched\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public patch(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `patch|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                patch(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        const query = toQueryString(query_params);\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                del(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n}\n","export * from './lib/common';\n","import { HashMap } from '@user-interfaces/common';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: '',\n        ...overrides\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(config =>\n            config.capacity = Math.floor(Math.random() * space.capacity) + 1\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { StaffService } from '../../../../users/src/lib/staff.service';\nimport { StaffUser } from '../../../../users/src/lib/user.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard implements CanActivate, CanLoad {\n    constructor(private _router: Router, private _users: StaffService) {}\n\n    public async canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await this._users.active_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(user && user.groups);\n        console.log('Activate:', can_activate);\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n\n    public async canLoad(\n        route: Route,\n        segments: UrlSegment[]\n    ): Promise<boolean> {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await this._users.active_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(user && user.groups);\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.debug || force) {\n        const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n        if (args) {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors, args);\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => JSON.stringify(item[key])).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)), (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        var t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'hh:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') || navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n","export * from './lib/spaces';\n","import { Injectable } from '@angular/core';\nimport {\n    onlineState,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n    listChildMetadata,\n} from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Desk } from './desk.class';\nimport { HashMap, notifyError, RoomConfiguration, SettingsService } from '@user-interfaces/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly buildings_subject = new BehaviorSubject<Building[]>([]);\n    private readonly active_building_subject = new BehaviorSubject<Building>(null);\n    private readonly levels_subject = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of buildings */\n    public readonly building_list = this.buildings_subject.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this.levels_subject.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this.active_building_subject.asObservable();\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([this.level_list, this.active_building]).pipe(\n        map((details) => (details[1] ? this.levelsForBuilding(details[1]) : []))\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: HashMap = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: HashMap<HashMap> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings(): HashMap {\n        return this._settings;\n    }\n\n    /** Mapping of builgins to settings overrides */\n    public get building_settings(): HashMap<HashMap> {\n        return this._building_settings;\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): HashMap {\n        if (!bld_id && this.building) {\n            bld_id = this.building.id;\n        }\n        return this._building_settings ? this._building_settings[bld_id] || {} : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this.buildings_subject.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this.active_building_subject.getValue();\n    }\n    public set building(bld: Building) {\n        this.active_building_subject.next(bld);\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id || i.email === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this.levels_subject.getValue();\n    }\n\n    constructor(private _service: SettingsService) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [this._settings, this.buildingSettings(bld.id)];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld.id);\n    }\n\n    private async init() {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(), 300);\n            throw err;\n        });\n        this._initialised.next(true);\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadBuildings();\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const bindings = (await showMetadata(org_list[0].id, { name: 'bindings' }).toPromise())?.details;\n            this._organisation = new Organisation({ ...org_list[0], bindings } as any);\n        }\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const building_list = await queryZones({\n            tags: 'building',\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const buildings = building_list.map((bld) => new Building(bld));\n        this.buildings_subject.next(buildings);\n        const id = localStorage.getItem(`CATERING.building`);\n        if (id && this.buildings.find((bld) => bld.id === id)) {\n            this.active_building_subject.next(this.buildings.find((bld) => bld.id === id));\n        }\n        if (!this.building && buildings && buildings.length > 0) {\n            this.building = buildings[0];\n        }\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({ tags: 'level', limit: 2500 } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this.levels_subject.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    /** Load metadata for the zone id */\n    public loadMetadata(zone_id: string, query?: HashMap) {\n        return showMetadata(zone_id, query);\n    }\n\n    /** Update Desks for zone */\n    public async updateDesks(zone_id: string, data: any) {\n        return updateMetadata(zone_id, {\n            name: 'desks',\n            description: 'desks',\n            details: data,\n        }).toPromise();\n    }\n\n    /** Load Desks zone */\n    public async loadZoneDesks(zone_id: string): Promise<Desk[]> {\n        const metadata: any = await this.loadMetadata(zone_id, { name: 'desks' }).toPromise();\n        const data = metadata.details;\n        if (!data) {\n            return [];\n        }\n        return data.map(\n            (i) =>\n                new Desk({\n                    ...i,\n                    parent_id: data.parent_id,\n                })\n        );\n    }\n\n    /** Load desks metadata for the parent zone_id */\n    public async loadDesks(zone_id): Promise<any[]> {\n        const levels = await listChildMetadata(zone_id, {\n            tags: 'level',\n            name: 'desks',\n        }).toPromise();\n        const desks = [];\n        levels.forEach((level) => {\n            if (level.metadata?.desks?.details) {\n                (level.metadata.desks.details as any).forEach((desk) => {\n                    desks.push(\n                        new Desk({\n                            ...desk,\n                            zone: level.zone,\n                        })\n                    );\n                });\n            }\n        });\n        return desks;\n    }\n\n    public async loadSettings() {\n        const app_name = `${(this._service.get('app.name') || 'workplace').toLowerCase()}_app`;\n        this._settings = await showMetadata(this._organisation.id, {\n            name: app_name\n        }).toPromise();\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = await showMetadata(bld.id, {\n                name: app_name,\n            }).toPromise();\n        }\n        this._service.overrides = [\n            this._settings.details,\n            this.buildingSettings(this.building.id).details,\n        ];\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`CATERING.building`, id);\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Space } from '../../space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class SpaceSelectItemComponent implements OnInit {\n    /** Space to display details for */\n    @Input() public space: Space;\n    /** Type of  */\n    @Input() public type: 'available' | 'selected';\n\n    @Input() public multiple: boolean;\n\n    constructor() {}\n\n    public ngOnInit(): void {}\n}\n","<div class=\"item\" *ngIf=\"space\">\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">{{ space.level?.name }}</div>\n    </div>\n    <div class=\"capacity\" *ngIf=\"space.capacity !== -1\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'account_circle' }\"></app-icon>\n        <div class=\"text\">{{ space.capacity }}</div>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button *ngIf=\"multiple; else single_button\" (click)=\"action.emit()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: type === 'available' ? 'add' : 'close'\n                }\"\n            ></app-icon>\n        </button>\n    </div>\n</div>\n<ng-template #single_button>\n    <button mat-button color=\"primary\" [class.request]=\"space.by_request\">\n        {{ space.by_request ? 'Request' : 'Book' }}\n    </button>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <div\n            class=\"action-field\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div class=\"display\" (click)=\"performAction()\" [innerHTML]=\"placeholder | safe\"></div>\n            <div class=\"icon\" (click)=\"performAction()\">\n                <app-icon\n                    [icon]=\"{\n                        type: 'icon',\n                        class: 'material-icons',\n                        content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./action-field.component.scss'],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">Access forbidden.</h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Calendar } from './calendar.class';\nimport { CalenderAvailabilityParams } from './calendar.interfaces';\n\nimport { BaseAPIService, HashMap, notifyError, SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { Space } from '../../../spaces/src/lib/space.class';\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CalendarService extends BaseAPIService<Calendar> {\n    private readonly calendars_subject = new BehaviorSubject<Calendar[]>([]);\n\n    /** Observable for the list of calendars */\n    public readonly calendar_list = this.calendars_subject.asObservable();\n\n    constructor(private _settings: SettingsService, private _org: OrganisationService) {\n        super();\n        this._name = 'Calendars';\n        this._api_route = 'calendars';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public async init() {\n        await this.load().catch((err) => {\n            notifyError('Error loading calendars data');\n        });\n        this._initialised.next(true);\n    }\n\n    public get calendars(): Calendar[] {\n        return this.calendars_subject.getValue();\n    }\n\n    /**\n     * List available rooms\n     * @param q Query parameters to pass to the request\n     * @param all_day Whether it is an all day booking\n     */\n    public availability(q: CalenderAvailabilityParams = {}, all_day: boolean = false) {\n        const query = { ...q };\n        const breakdown = this._settings.get('app.booking.breakdown') || 0;\n        if (all_day) {\n            query.period_start = dayjs(q.period_start * 1000)\n                .startOf('d')\n                .unix();\n            query.period_end = dayjs(q.period_end * 1000)\n                .endOf('d')\n                .unix();\n        } else {\n            query.period_start = dayjs(q.period_start * 1000)\n                .subtract(breakdown, 'm')\n                .unix();\n            query.period_end = dayjs(q.period_end * 1000)\n                .add(breakdown, 'm')\n                .unix();\n        }\n        return this.query({\n            ...query,\n            subroute: 'availability',\n        }).then((list) => {\n            return list\n                .map(\n                    (i) =>\n                        new Space({ ...i.resource, level: this._org.levelWithID(i.resource.zones) })\n                )\n                .filter((i) => i.bookable);\n        });\n    }\n\n    /** List periods where room or calendars are busy */\n    public freeBusy(q: CalenderAvailabilityParams = {}) {\n        const query = { ...q };\n        return this.query({\n            ...query,\n            subroute: 'free_busy',\n        });\n    }\n\n    /** Get Free busy for the selected day\n     * @param calendar_id User calendar\n     * @param date Selected day\n     */\n    public getFreeBusyDate(date: number, calendar_id: string) {\n        const period_start = dayjs(date).startOf('d').unix();\n        const period_end = dayjs(date).endOf('d').unix();\n        const calendars = calendar_id;\n        return this.freeBusy({\n            period_start,\n            period_end,\n            calendars,\n        });\n    }\n\n    /** Check rooms availability */\n    public async checkSpacesAvailability(\n        system_ids: string[],\n        period_start: number,\n        period_end: number,\n        old_booking?: CalendarEvent\n    ) {\n        const result = await this.freeBusy({\n            period_start,\n            period_end,\n            system_ids: system_ids.join(','),\n        });\n        const available = result.every((i) => {\n            const availability = i.availability;\n            if (old_booking && i.id === old_booking.system?.email) {\n                const start = dayjs(old_booking.date).valueOf();\n                const end = dayjs(start).add(old_booking.duration, 'm').valueOf();\n                const index = availability.findIndex((block) => {\n                    return (\n                        block.date >= start &&\n                        dayjs(block.date).add(block.duration, 'm').valueOf() <= end\n                    );\n                });\n                if (index !== -1) {\n                    availability.splice(index, 1);\n                }\n            }\n            return !availability.length;\n        });\n        return available ? true : false;\n    }\n\n    /** Load calendars */\n    public async loadCalendars(): Promise<void> {\n        const calendars = await this.query();\n        this.calendars_subject.next(calendars);\n    }\n\n    public async load(): Promise<void> {\n        await this.loadCalendars();\n    }\n\n    protected process(raw_data: HashMap): Calendar {\n        return new Calendar(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { get, post } from '@placeos/ts-client';\n\nimport { BaseAPIService, HashMap, toQueryString } from '@user-interfaces/common';\nimport { CalendarEvent } from './event.class';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventsService extends BaseAPIService<CalendarEvent> {\n    constructor() {\n        super();\n        this._name = 'Events';\n        this._api_route = 'events';\n    }\n\n    /** Check in guest\n     * @param query_params Need `system_id` and `state`\n     */\n    public checkinAttendee(id: string, guest_id: string, query_params: HashMap = {}) {\n        const query = toQueryString(query_params);\n        return this.task(id, `guests/${guest_id}/checkin${query}`, {}, 'post');\n    }\n\n    /** Retrieve events for selected date for the given calendar\n     * @param calendar_ids Array of user calendars\n     * @param date Date in unix ms\n     */\n    public getDayEvents(date: number, calendar_ids: string[]) {\n        const period_start = dayjs(date).startOf('d').unix();\n        const period_end = dayjs(date).endOf('d').unix();\n        const calendars = calendar_ids.join(',');\n        return this.query({\n            period_start,\n            period_end,\n            calendars,\n        });\n    }\n\n    /** Get event */\n    public getEvent(id: string, query_params: HashMap = {}) {\n        const query = toQueryString(query_params);\n        const url = `${this.route()}/${id}?${query}`;\n        return get(url)\n            .toPromise()\n            .then((res) => this.process(res));\n    }\n\n    /** Check in guest\n     * @param query_params Need `system_id` and `state`\n     */\n    public checkInGuest(event_id: string, guest_id: string, query_params: HashMap = {}) {\n        const query = toQueryString(query_params);\n        const url = `${this.route()}/${event_id}/guests/${guest_id}/checkin?${query}`;\n        return post(url, {}).toPromise();\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'approve', fields, 'post', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'reject', fields, 'post', fields);\n    }\n\n    protected process(raw_data: HashMap): CalendarEvent {\n        return new CalendarEvent(raw_data);\n    }\n}\n","\nexport class Desk {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: any;\n    /** Group/Department allocated to the desk */\n    public readonly group: string;\n\n    constructor(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.bookable = data.bookable;\n        this.zone = data.zone;\n        this.group = data.group;\n    }\n\n    public format() {\n        const { id, name, bookable, group } = this;\n        return {\n            id,\n            name,\n            bookable,\n            group,\n        };\n    }\n}\n","// This file can be replaced durinx build by using the `fileReplacements` array.\n// `nx build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport {\n    add,\n    isBefore,\n    isAfter,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { timePeriodsIntersect, unique } from '@user-interfaces/common';\n\nimport { CalendarEvent } from './event.class';\nimport { SpaceRuleOptions, SpaceRules, SpaceCheckOptions } from './event.interfaces';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nexport function generateEventForm(event: CalendarEvent): FormGroup {\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(event.host, [Validators.required]),\n        creator: new FormControl(event.creator, [Validators.required]),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title, [Validators.required]),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required, isFuture]),\n        duration: new FormControl(event.duration),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data.catering || []),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(event.needs_parking || false),\n        system: new FormControl(event.system),\n    });\n    return form;\n}\n\n/** Array is not empty */\nexport function isNotEmpty(control: AbstractControl): { [key: string]: boolean } | null {\n    if (Array.isArray(control.value) && !control.value.length) {\n        return { isNotEmpty: true };\n    }\n    return null;\n}\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(control: AbstractControl): { [key: string]: boolean } | null {\n    if (control.value !== undefined && isBefore(new Date(control.value), new Date())) {\n        return { isFuture: true };\n    }\n    return null;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type of Object.keys(options.rules)) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = new Date(options.time);\n        const recurr = options.recurr_end ? new Date(options.recurr_end) : new Date();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                // case 'groups':\n                //     /* istanbul ignore else */\n                //     if (options.user && options.user.groups) {\n                //         counter = 0;\n                //         condition.forEach((i) =>\n                //             options.user.groups.find((j) => j === i) ? counter++ : null\n                //         );\n                //         /* istanbul ignore else */\n                //         if (counter > 0) {\n                //             matches++;\n                //         }\n                //     }\n                //     break;\n                // case 'locations':\n                //     /* istanbul ignore else */\n                //     if (options.user && options.user.location) {\n                //         counter = 0;\n                //         condition.forEach((i) =>\n                //             (options.user.last_location.name || '').indexOf(i) >= 0\n                //                 ? counter++\n                //                 : null\n                //         );\n                //         /* istanbul ignore else */\n                //         if (counter >= options.rules[key].length) {\n                //             matches++;\n                //         }\n                //     }\n                //     break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = add(new Date(), { minutes: duration });\n                        let match = isBefore(time, check);\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && isBefore(recurr, check);\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = add(new Date(), { minutes: duration });\n                        if (isAfter(time, check)) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(options.duration, condition[0])\n                    ) {\n                        matches++;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(condition[0], options.duration)\n                    ) {\n                        matches++;\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = new Date(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = new Date(slot.start);\n        const end = new Date(slot.end);\n        return isAfter(start, now) || timePeriodsIntersect(date, date, slot.start, slot.end);\n    });\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free ? differenceInMinutes(end, now) : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: CalendarEvent[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: startOfMinute(new Date()).getTime() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = new Date(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = add(bkn_start, { minutes: booking.duration });\n        if (isAfter(bkn_start, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (startOfMinute(start).getTime() === startOfMinute(bkn_start).getTime()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.getTime(),\n        end: startOfMinute(new Date()).getTime() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: CalendarEvent[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = add(startOfMinute(new Date(date)), { seconds: 1 });\n    for (const block of slots) {\n        const start = startOfMinute(new Date(block.start));\n        const end = startOfMinute(new Date(block.end));\n        if (isAfter(start, time)) {\n            return block;\n        } else if (isBefore(time, end)) {\n            const duration = differenceInMinutes(end, time);\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find((space) => space.email === filter_options.space) ||\n            !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt } from '@user-interfaces/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockLocationServicesModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    $locate_user(email: string, username: string) {}\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createLocationServicesModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockLocationServicesModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n    }\n    updateLocations(mod, MOCK_LEVELS);\n    setInterval(() => updateLocations(mod, MOCK_LEVELS), 60 * 1000);\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockLocationServicesModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 5 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5.hashStr(\n                  users[predictableRandomInt(users.length)].email\n              ),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5.hashStr(\n                  users[predictableRandomInt(users.length)].email\n              ),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","\nimport { HashMap } from './types';\n\nexport class BaseDataClass {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = (raw_data.email || '').toLowerCase();\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from '../../../../users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n            <div class=\"initials\" *ngIf=\"!user.photo; else image_state\">{{ initials }}</div>\n        </div>\n        <ng-template #image_state>\n            <img [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [`\n        .user-avatar {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 2em;\n            width: 2em;\n            border-radius: 100%;\n            background-color: #f0f0f0;\n            overflow: hidden;\n        }\n\n        .initials {\n            font-size: 1em;\n            color: rgba(#000, .35);\n            text-transform: uppercase;\n        }\n\n        img {\n            height: 100%;\n            width: 100%;\n        }\n    `]\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                >Name<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" />\n                <mat-error *ngIf=\"form.controls.name.invalid\">Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" formControlName=\"email\" />\n                <mat-error *ngIf=\"form.controls.email.invalid\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.organisation\">\n            <label\n                for=\"organisation\"\n                [class.error]=\"\n                    form.controls.organisation.invalid && form.controls.organisation.touched\n                \"\n                >Organisation<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"organisation\"\n                    placeholder=\"Organisation\"\n                    formControlName=\"organisation\"\n                />\n                <mat-error *ngIf=\"form.controls.organisation.invalid\"\n                    >Organisation is required</mat-error\n                >\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.phone\">\n            <label\n                for=\"phone\"\n                [class.error]=\"form.controls.phone.invalid && form.controls.phone.touched\"\n                >Phone:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"phone\" placeholder=\"Phone\" formControlName=\"phone\" />\n                <mat-error *ngIf=\"form.controls.phone.invalid\">Phone format is invalid</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.assistance_required\">\n            <mat-checkbox color=\"primary\" formControlName=\"assistance_required\"\n                >Assistance required</mat-checkbox\n            >\n        </div>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { BaseClass } from './base.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends BaseClass {\n    /** Parent service */\n    public parent: any;\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent || !this.parent.has_settings || !this.parent.Organisation.details) {\n            return this.timeout('init', () => this.init());\n        }\n        this.load();\n    }\n\n    private async load() {\n        const org = this.parent.Organisation.details;\n        const system = org.setting('vorlon_system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state ? this.injectVorlonScript() : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const org = this.parent.Organisation.details;\n        const url = org.setting('vorlon_url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HashMap, predictableRandomInt, unique } from '@user-interfaces/common';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(predictableRandomInt(4) + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required]),\n        organisation: new FormControl(user.organisation || '', Validators.required),\n        phone: new FormControl(user.phone || ''),\n        assistance_required: new FormControl(user.assistance_required || false),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(user: GuestUser, host: string = ''): FormGroup {\n    const fields: HashMap<FormControl> = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required]),\n        organisation: new FormControl(user.organisation || '', Validators.required),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { BuildingLevel } from './level.class';\n\nexport class Zone {\n    public id: string;\n    public name: string;\n    public level: BuildingLevel;\n\n    constructor(raw_data: Partial<Zone> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.level = raw_data.level;\n    }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@user-interfaces/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show ? 'add' : 'more_vert'\n                }\"\n            ></app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                position: absolute;\n                font-size: 1rem;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\nimport { predictableRandomInt } from '@user-interfaces/common';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER } from './users.data';\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/events',\n    metadata: {},\n    method: 'GET',\n    callback: (_) => {\n        console.log('Event count:', MOCK_EVENTS.length);\n        const events = MOCK_EVENTS.filter(\n            (event) => !!event.attendees.find((user) => user.email === ACTIVE_USER.email)\n        );\n        return events;\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/events',\n    metadata: {},\n    method: 'POST',\n    callback: (request) => {\n        const new_event = { ...request.body, id: `-cal-event-${predictableRandomInt(999)}` };\n        new_event.attendees.forEach(user => {\n            if (user.zones) {\n                user.resource = true;\n            }\n        });\n        MOCK_EVENTS.push(new_event);\n        return new_event;\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/events/:id',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        const item = MOCK_EVENTS.find((event) => event.id === request.route_params.id);\n        if (item) {\n            return item;\n        }\n        throw { status: 404, message: 'Event not found' };\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/events/:id',\n    metadata: {},\n    method: 'PATCH',\n    callback: (request) => {\n        const index = MOCK_EVENTS.findIndex((event) => event.id === request.route_params.id);\n        if (index >= 0) {\n            return MOCK_EVENTS.splice(index, 1, request.body);\n        }\n        throw { status: 404, message: 'Event not found' };\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/events/:id/guests/:email/checkin',\n    metadata: {},\n    method: 'POST',\n    callback: (request) => {\n        const event = MOCK_EVENTS.find(event => event.id === request.route_params.id);\n        if (event) {\n            const checked_in = (event.extension_data as any).checked_in || [];\n            (event.extension_data as any).checked_in = checked_in.concat([request.route_params.email]);\n            return event;\n        }\n        throw { status: 404, message: 'Guest not found' };\n    },\n});\n","export { BaseClass } from './base.class';\nexport { BaseAPIService } from './base.service';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './base-api.class';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\n","import { HashMap } from '@user-interfaces/common';\n\nexport function createSystemModule(space: HashMap, overrides: HashMap = {}) {\n    const mod = {\n        name: 'Test System',\n        connected: true,\n        power: false,\n\n        $power_on: function () {\n            console.log('Power On');\n            this.power = true;\n        },\n        $power_off: function () {\n            this.power = false;\n        }\n    };\n    mod.name = space.name;\n    return mod;\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass, DialogEvent } from '@user-interfaces/common';\n\nimport { User } from '../user.class';\nimport { generateUserForm } from '../user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                type: 'external',\n                visit_expected: !this.form.value.email.endsWith('pwc.com'),\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>{{ user?.id ? 'Edit' : 'Add' }} External Attendee</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <user-form [form]=\"form\"></user-form>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer *ngIf=\"!loading\">\n        <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Saving attendee...</div>\n        </div>\n    </div>\n</ng-template>\n","\nexport const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n    },\n    {\n        name: 'Melbourne',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-03',\n    },\n];\n\nconst levels = ['lvl-00', 'lvl-01', 'lvl-02', 'lvl-03', 'lvl-04', 'lvl-05', 'lvl-06'];\nconst mockLevel = (id: string, idx: number, building: any): any => {\n    let map_id = id.substr(4);\n    map_id = `/assets/maps/dubai/level_${map_id.endsWith('0') ? 'G' : map_id}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('0') ? 'G' : idx}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: 'Overrides name for staff app',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    levels.map((level, idx, arr) => mockLevel(level, idx, bld))\n).reduce((p, c) => p.concat(c), []);\n","import {\n    Component,\n    forwardRef,\n    Input,\n    ViewChild,\n    OnInit,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { BaseClass, Identity, timeFormatString } from '@user-interfaces/common';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends BaseClass\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date)\n            .hour(+time[0])\n            .minute(+time[1]);\n        if (\n            date.minute() % 15 !== 0 &&\n            !this._time_options.find((time) => time.id === date.format('HH:mm'))\n        ) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm'),\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date)\n                .hour(+time[0])\n                .minute(+time[1])\n                .startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm'),\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <ng-container *ngIf=\"show\">\n        <div *ngIf=\"message && show_message\" class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\">\n            {{ message }}\n        </div>\n        <svg\n            version=\"1.1\"\n            id=\"Layer_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            x=\"0px\"\n            y=\"0px\"\n            viewBox=\"0 0 380 560\"\n            enable-background=\"new 0 0 380 560\"\n            xml:space=\"preserve\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n</ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%)\n                }\n                100% {\n                    opacity: 1;\n                    transform translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.show = true, 300);\n        setTimeout(() => this.show_message = true, 1000);\n    }\n}\n","import { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Alexandre Chuvand',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Landell Archer',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley'\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech'\n}\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name,\n    email: `${name.split(' ').join('.').toLowerCase()}@not-${DOMAIN}`\n}));\n\nconsole.log('STAFF:', MOCK_STAFF);\nconsole.log('GUESTS:', MOCK_GUESTS);\n","export * from './lib/components.module';\n\nexport { AuthorisedAdminGuard } from './lib/guards/authorised-admin.guard';\nexport { AuthorisedUserGuard } from './lib/guards/authorised-user.guard';\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","import { PlaceSystem } from '@placeos/ts-client';\nimport {\n    startOfDay,\n    differenceInMinutes,\n    isSameDay,\n    add,\n    isBefore,\n    roundToNearestMinutes,\n    addMinutes,\n} from 'date-fns';\n\nimport { HashMap, Identity, unique } from '@user-interfaces/common';\nimport { CateringOrder } from '../../../catering/src/lib/catering-order.class';\nimport { User } from '../../../users/src/lib/user.class';\nimport { Space } from '../../../spaces/src/lib/space.class';\n\nimport { EventNote } from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nexport interface FileDetails {\n    /** Name of the file */\n    name: string;\n    /** Blob contents of the file */\n    blob: Blob;\n}\n\nexport interface ExtDataDetails extends HashMap {\n    /** Setup in minutes */\n    setup?: number;\n    /** Breakdown in minutes */\n    breakdown?: number;\n    /** Whether event is cleaned */\n    cleaned?: boolean;\n    /** Catering */\n    catering?: CateringOrder[];\n    /** Parking */\n    needs_parking?: boolean;\n    /** Configuration */\n    configuration?: any;\n    /** Notes */\n    notes?: EventNote[];\n}\n\nexport interface RecurrenceDetails {\n    /** Start of the recurrence in unix ms */\n    start: number;\n    /** End of the recurrence in unix ms */\n    end: number;\n    /** Days of the week (or month) on which the event should be repeated */\n    days_of_week: number;\n    /** Frequency of the event */\n    pattern: 'daily' | 'weekly' | 'monthly';\n    /** Interval to be used with pattern */\n    interval: number;\n}\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'confirmed' | 'tentative' | 'cancelled' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** URL to a conference call application instance */\n    public readonly meeting_link: string;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: ExtDataDetails;\n    /** System */\n    public readonly system: PlaceSystem;\n    /** Old System id */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: Identity;\n    /** Whether user is allowed to access the lift */\n    public readonly can_access_lift: boolean;\n    /** Whether the host has requested catering for this event */\n    public readonly has_catering: boolean;\n    /** Whether the event has external attendees */\n    public readonly has_visitors: boolean;\n    /** List of catering orders for the event */\n    public readonly catering: CateringOrder[];\n    /** Whether a parking spot is needed for attendees */\n    public readonly needs_parking: boolean;\n    /** Name of the type of external attendees */\n    public readonly visitor_type: string;\n    /** Setup time before event start in minutes */\n    public readonly setup: number;\n    /** Breakdown/Cleanup time after event start in minutes */\n    public readonly breakdown: number;\n    /** List of email addresses associated with the event attendees */\n    public readonly attendee_emails: readonly string[];\n    /** List of external attendees associated with the event */\n    public readonly guests: readonly Identity[];\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** List of notes associated with the event */\n    public readonly notes: readonly EventNote[];\n    /** First space in the resources list */\n    public readonly space: Identity;\n    /** Whether the time of the booking has been changed */\n    public time_changed: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n\n    constructor(data: Partial<CalendarEvent> = {}) {\n        this.id = data.id || '';\n        this.calendar = data.calendar || '';\n        this.creator = (data.creator || _default_user.email).toLowerCase();\n        this.host = (data.host || this.creator || '').toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees.filter((user: any) => !user.resource).map(u => new User(u));\n        this.resources =\n            data.resources ||\n            attendees.filter((user: any) => user.resource).map(s => new Space(s as any));\n        this.title = data.title || '';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        const time = data.event_start * 1000 || data.date;\n        const start = time\n            ? new Date(time)\n            : roundToNearestMinutes(new Date().setMinutes(new Date().getMinutes() + 3), {\n                  nearestTo: 5,\n              });\n        this.date = this.all_day ? startOfDay(start).valueOf() : start.valueOf();\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration || differenceInMinutes(new Date(data.event_end * 1000), start) || 60;\n        this.timezone = data.timezone;\n        this.location = data.location || '';\n        this.recurring = data.recurring;\n        this.recurring_master_id = data.recurring_master_id;\n        this.meeting_link = data.meeting_link || '';\n        this.organiser = this.attendees.find((user) => user.email === this.host);\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    start.valueOf() ||\n                    new Date((data.recurrence as any).range_start * 1000).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date((data.recurrence as any).range_end * 1000).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        this.system = data.system;\n        if (this.system?.email) {\n            this.resources.push(new Space(this.system as any));\n        }\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.extension_data.catering = (data.catering || this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n        this.extension_data.needs_parking = !!data.needs_parking;\n        this.extension_data.visitor_type =\n            data.visitor_type || this.extension_data.visitor_type || '';\n        this.can_access_lift = data.can_access_lift || this.extension_data.can_access_lift || false;\n        this.resources = unique(this.resources, 'email');\n        this.status = eventStatus(this) || 'none';\n        /** Simplified extension properties */\n        this.has_visitors = !!this.attendees.find(\n            (user) => user.visit_expected || user.is_external\n        );\n        this.has_catering = this.extension_data.catering && !!this.extension_data.catering.length;\n        this.catering = this.extension_data.catering || [];\n        this.needs_parking = !!this.extension_data.needs_parking;\n        this.setup = this.extension_data.setup || 0;\n        this.breakdown = this.extension_data.breakdown || 0;\n        this.visitor_type = this.extension_data.visitor_type || '';\n        this.type =\n            this.status === 'cancelled' ? 'cancelled' : this.has_visitors ? 'external' : 'internal';\n        this.attendee_emails = this.attendees.map((u) => u.email);\n        this.guests = this.attendees.filter((f) => !!f.visit_expected) as any;\n        this.notes = this.extension_data.notes || [];\n        this.space = this.resources[0] || null;\n    }\n\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /** Cleaning status */\n    public get cleaning_status(): 'pending' | 'done' | '' {\n        return this.extension_data.cleaned ? 'done' : '';\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): HashMap {\n        const obj: HashMap = { ...this };\n        const end = Math.floor(\n            add(new Date(this.date), { minutes: this.duration }).valueOf() / 1000\n        );\n        obj.event_start = Math.floor(this.date / 1000);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: Math.floor(new Date(this.recurrence.end).valueOf() / 1000),\n            };\n        } else {\n            obj.recurrence = null;\n        }\n        obj.attendees = unique(attendees, 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.date;\n        delete obj.duration;\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = new Date();\n        const date = new Date(this.date);\n        if (isBefore(now, add(date, { minutes: -15 }))) {\n            return 'future';\n        } else if (isBefore(now, date)) {\n            return 'upcoming';\n        } else if (isBefore(now, add(date, { minutes: 15 }))) {\n            return 'started';\n        } else if (isBefore(now, add(date, { minutes: this.duration }))) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    public get event_start(): number {\n        return Math.floor(new Date(this.date).valueOf() / 1000);\n    }\n\n    public get event_end(): number {\n        return Math.floor(addMinutes(new Date(this.date), this.duration).valueOf() / 1000);\n    }\n\n    public get can_check_in(): boolean {\n        return isSameDay(new Date(), new Date(this.date));\n    }\n}\n","import { addSeconds, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@user-interfaces/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    /** Current status of the space */\n    status: 'pending' | 'busy' | 'free' | 'not-bookable' = 'free';\n}\n\nexport function createBookingsModule(space: HashMap, overrides: Partial<MockBookingModule> = {}) {\n    const mod = {\n        ...new MockBookingModule(),\n        ...overrides,\n        /** Start the meeting at the given time */\n        $start_meeting: function (t: number) {\n            this.last_booking_started = t;\n        },\n        /** End the meeting at the given time */\n        $end_meeting: function (t: number) {},\n        /** Book meeting for the current time */\n        $book_now: function (len: number, t?: string, o?: string) {},\n    };\n    updateBookings(space, mod);\n    setInterval(() => updateBookings(space, mod), 1000);\n    return mod;\n}\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings = MOCK_EVENTS.filter((event) =>\n        event.attendees.find((u) => u.email === space.email)\n    );\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    if (!space.bookable) {\n        return (mod.status = 'not-bookable');\n    }\n    const date = new Date();\n    const current = bookings.find((bkn) =>\n        timePeriodsIntersect(\n            date.valueOf(),\n            date.valueOf(),\n            bkn.event_start,\n            bkn.event_end\n        )\n    );\n    const next = bookings.find((bkn) =>\n        isBefore(date.valueOf(), bkn.event_start)\n    );\n    const start = new Date((current || next)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = current\n        ? pending\n            ? 'pending'\n            : 'busy'\n        : next && pending\n        ? 'pending'\n        : 'free';\n}\n","\nconst general = {\n}\n\n\nconst app = {\n    name: 'MapKiosk',\n    title: 'PlaceOS',\n    description: 'Map Kiosk UI',\n    short_name: 'PlaceOS',\n    logo: {\n        type: 'img',\n        src: 'assets/logo-light.svg'\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg'\n    },\n    general\n}\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/kiosk',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app\n};\n","\nimport { Injectable } from '@angular/core';\nimport { Subscription, BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n    const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    console.log('Config:', config);\n    if (localStorage) {\n        localStorage.setItem('mock', `${!!mock && !location.href.includes('mock=false')}`);\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { Injectable } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Space } from './space.class';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) => space.zones.includes(this._org.building.id);\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.loadSpaces());\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    /**\n     * Find space with given id/email\n     * @param id ID/Email address associated with the space\n     */\n    public find(id: string) {\n        return this._list.getValue().find((space) => space.id === id || space.email === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) => new Space({ ...(sys as any), level: this._org.levelWithID([...sys.zones]) })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { currentUser, onlineState } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService, HashMap } from '@user-interfaces/common';\n\nimport { StaffUser } from './user.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StaffService extends BaseAPIService<StaffUser> {\n    /** Currently logged in user */\n    private _active_user = new BehaviorSubject<StaffUser>(null);\n    /** Observable for the active user */\n    public readonly active_user = this._active_user.asObservable();\n\n    /** Currently logged in user */\n    public get current(): StaffUser {\n        return this._active_user.getValue();\n    }\n\n    constructor() {\n        super();\n        this._name = 'Staff';\n        this._api_route = 'people';\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => {\n                this.timeout('init', () => this.init());\n            });\n    }\n\n    /** Load current user */\n    public async load() {\n        const user = await currentUser().toPromise();\n        if (user) {\n            this._active_user.next(new StaffUser({ ...user, is_logged_in: true } as any));\n        }\n    }\n\n    public format(item) {\n        return item;\n    }\n\n    public process(raw_data: HashMap) {\n        return new StaffUser(raw_data);\n    }\n\n    /**\n     * Get location of a staff member\n     * @param id Email address of the staff member\n     */\n    public locate(id: string): Promise<StaffUser> {\n        return this.show(id);\n    }\n}\n","\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './event.utilities';\nexport * from './events.service';\nexport * from './helpers';\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@user-interfaces/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/calendars/availability',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        const start = dayjs(+request.query_params.period_start * 1000);\n        const end = dayjs(+request.query_params.period_end * 1000);\n        const zones = (request.query_params.zone_ids || '').split(',').filter(i => !!i);\n        const systems = (request.query_params.system_ids || '').split(',').filter(i => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce((has, zone) => has && space.zones.includes(zone), true)\n                : systems.length\n                    ? systems.includes(space.id)\n                    : true\n        )\n            .filter((space) => {\n                const bookings = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find((user) => user.id === space.id)\n                );\n                for (const event of bookings) {\n                    const event_start = dayjs(event.event_start * 1000);\n                    const event_end = dayjs(event.event_end * 1000);\n                    if (\n                        (start.isAfter(event_start, 's') && start.isBefore(event_end, 'm')) ||\n                        (end.isAfter(event_start, 'm') && end.isBefore(event_end, 'm')) ||\n                        (event_start.isAfter(start, 'm') && event_start.isBefore(end, 'm'))\n                    ) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        const output = {};\n        spaces.forEach(space => output[space.email] = space);\n        return output;\n    },\n});\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Total cost for the item */\n    public readonly total_cost: number;\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.options = data.options || [];\n        this.tags = data.tags || [];\n        this.total_cost =\n            (this.unit_price + this.options.map((i) => i.unit_price || 0).reduce((c, a) => c + a, 0)) *\n            this.quantity;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { UnauthorisedComponent } from '@user-interfaces/components';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from '../../../../libs/components/src/lib/app.component';\nimport { environment } from '../environments/environment';\n\nimport '@user-interfaces/mocks';\n\n@NgModule({\n    declarations: [AppComponent, UnauthorisedComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        MatSnackBarModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@user-interfaces/common';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <div class=\"action-icon\" [class.fade]=\"state || loading\">\n            <app-icon [icon]=\"icon\"></app-icon>\n            <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: state === 'success' ? 'done' : 'close'\n                    }\"\n                ></app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .action-icon {\n                position: relative;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 2em;\n                width: 2em;\n            }\n\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseClass, DialogEvent, HashMap, Identity, notifyError, SettingsService } from '@user-interfaces/common'\nimport { Building, OrganisationService } from '@user-interfaces/organisation';\nimport { CalendarService } from '../../../../calendar/src/lib/calendar.service';\nimport { StaffService } from '../../../../users/src/lib/staff.service';\nimport { filterSpacesRules } from '../../../../bookings/src/lib/booking.utilities';\nimport { Space } from '../space.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss'],\n})\nexport class SpaceSelectModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [];\n    /** List of available spaces */\n    public available_spaces: Space[] = [];\n    /** List of filtered spaces */\n    public filtered_spaces: Space[] = [];\n    /** Building to filter available spaces */\n    public building: Building;\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.booking.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _calendar: CalendarService,\n        private _staff: StaffService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.building = this._org.building || this.buildings[0];\n        this.spaces = this._data.spaces && this._data.spaces.length ? [...this._data.spaces] : [];\n        this.loadAvailableSpaces();\n    }\n\n    public async loadAvailableSpaces() {\n        this.loading = true;\n        const date = dayjs(this._data.date);\n        this.available_spaces = await this._calendar\n            .availability({\n                zone_ids: this.building.id,\n                period_start: date.unix(),\n                period_end: date.add(this._data.duration, 'm').unix(),\n            })\n            .catch((err) => {\n                notifyError(`Error finding available spaces: ${err.message || err}`);\n                return [];\n            });\n        this.filtered_spaces = this.filterSpaces(this.available_spaces);\n        this.loading = false;\n    }\n\n    /** Check booking rules and filter spaces */\n    public filterSpaces(list: Space[]): Space[] {\n        const settings = this._org.building_settings;\n        const res = filterSpacesRules(list, settings, this._staff.current, { ...this._data });\n        return res;\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","<header>\n    <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'place' }\"></app-icon>\n    <div class=\"title\">Select space{{ multiple ? 's' : '' }}</div>\n</header>\n<mat-dialog-content>\n    <div class=\"heading\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <mat-select\n                name=\"booking-type\"\n                [(value)]=\"building\"\n                (selectionChange)=\"loadAvailableSpaces()\"\n                placeholder=\"Select building\"\n            >\n                <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                    {{ bld.display_name || bld.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"space_types && space_types.length > 1\">\n            <mat-select\n                name=\"booking-type\"\n                [(ngModel)]=\"type\"\n                (ngModelChange)=\"loadAvailableSpaces()\"\n                placeholder=\"Any space type\"\n            >\n                <mat-option *ngFor=\"let type of space_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"filtered_spaces?.length; else empty_state\">\n                <ng-container *ngFor=\"let space of filtered_spaces\">\n                    <a-space-select-item\n                        *ngIf=\"!space_map[space.id]\"\n                        [space]=\"space\"\n                        [multiple]=\"multiple\"\n                        type=\"available\"\n                        (click)=\"spaceSelected(space)\"\n                    ></a-space-select-item>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n        <div class=\"space-list\" *ngIf=\"multiple\" [class.show]=\"show_selected\">\n            <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                <a-space-select-item\n                    *ngFor=\"let space of spaces\"\n                    [space]=\"space\"\n                    [multiple]=\"multiple\"\n                    type=\"selected\"\n                ></a-space-select-item>\n            </ng-container>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"multiple\">\n    <footer>\n        <button mat-button color=\"primary\" (click)=\"save()\">\n            Save selected spaces({{ spaces.length || '0' }})\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No spaces</div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Finding available spaces...</div>\n    </div>\n</ng-template>\n","import { FormGroup } from '@angular/forms';\nimport { formatDuration } from 'date-fns';\n\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\n\nimport { CateringItem } from '../../../catering/src/lib/catering-item.class';\nimport { HashMap, predictableRandomInt } from '@user-interfaces/common';\nimport { User } from '../../../users/src/lib/user.class';\nimport { generateMockUser } from '../../../users/src/lib/user.utilities';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '../../../spaces/src/lib/space.class';\n\nimport * as dayjs from 'dayjs';\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs.extend(customParseFormat);\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\nconst randomQuarterHours = () => predictableRandomInt(5, 2) * 15;\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}, resetDate = false) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    if (!!resetDate) {\n        BOOKING_DATE = dayjs().hour(6).minute(0).startOf('m');\n    }\n    BOOKING_DATE = BOOKING_DATE.add(randomQuarterHours(), 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = randomQuarterHours();\n    const cateringItem = new CateringItem({\n        id: 'Cappucino',\n        quantity: 5,\n    });\n    return {\n        id,\n        icaluid: predictableRandomInt(99_999_999),\n        title: `A Meeting ${predictableRandomInt(99)}`,\n        attendees: Array(predictableRandomInt(5) + 2)\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        date: start,\n        duration,\n        description: `A Description`,\n        notes: [{ type: 'other', message: `Some notes` }],\n        location: `Your City`,\n        catering: predictableRandomInt(34567) % 3 === 0,\n        extension_data: {\n            catering_order: [cateringItem],\n            catering_notes:\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Dui faucibus in ornare quam viverra orci. Metus dictum at tempor commodo ullamcorper a lacus.',\n        },\n        link: predictableRandomInt(10) > 5 ? 'https://browser.zoom.fake/j/12' : '',\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: CalendarEvent[], min_size: number = 30): IBookingSlot[] {\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: CalendarEvent[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst STORED_BOOKING_KEY = 'STAFF.booking_form';\nexport function storeBookingFormData(form: FormGroup) {\n    if (localStorage) {\n        const data = form ? form.value : {};\n        if (form && form.controls && form.controls.extension_data) {\n            data.extension_data = form.controls.extension_data.value;\n        }\n        localStorage.setItem(STORED_BOOKING_KEY, JSON.stringify(data));\n    }\n}\n\nexport function retrieveBookingFormData(): any {\n    let formData = {};\n    if (localStorage) {\n        const form_string = localStorage.getItem(STORED_BOOKING_KEY);\n        if (form_string) {\n            try {\n                formData = JSON.parse(form_string);\n            } catch (e) {}\n        }\n    }\n    return formData;\n}\n\nexport function clearBookingFormData() {\n    if (localStorage && !!retrieveBookingFormData()) {\n        localStorage.removeItem(STORED_BOOKING_KEY);\n    }\n}\n\nconst STORED_DESK_BOOKING_KEY = 'STAFF.desk_form';\nexport function storeDeskBookingFormData(form: FormGroup) {\n    if (localStorage) {\n        const data = form ? form.value : {};\n        if (form && form.controls && form.controls.extension_data) {\n            data.extension_data = form.controls.extension_data.value;\n        }\n        localStorage.setItem(STORED_DESK_BOOKING_KEY, JSON.stringify(data));\n    }\n}\n\nexport function retrieveDeskBookingFormData(): any {\n    let formData = {};\n    if (localStorage) {\n        const form_string = localStorage.getItem(STORED_DESK_BOOKING_KEY);\n        if (form_string) {\n            try {\n                formData = JSON.parse(form_string);\n            } catch (e) {}\n        }\n    }\n    return formData;\n}\n\nexport function clearDeskBookingFormData() {\n    if (localStorage && !!retrieveDeskBookingFormData()) {\n        localStorage.removeItem(STORED_DESK_BOOKING_KEY);\n    }\n}\n\n/** Filter spaces based on booking rules */\nexport function filterSpacesRules(\n    list: Space[] = [],\n    building_settings: HashMap<HashMap>,\n    host: User,\n    options: {\n        date: number;\n        duration: number;\n        all_day?: boolean;\n        visitor_type?: string;\n    }\n): Space[] {\n    return list.filter((space) => {\n        const booking_rules = building_settings[space.level.parent_id].details?.booking_rules;\n        const { date, all_day, duration, visitor_type } = options;\n        const rules = rulesForSpace({\n            space,\n            time: date,\n            duration: all_day ? 24 * 60 : duration,\n            visitor_type,\n            user: host,\n            rules: booking_rules,\n        });\n        if (visitor_type) {\n            return !rules.hide && rules.room_type === visitor_type;\n        } else {\n            return !rules.hide;\n        }\n    });\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: false,\n    };\n    if (options.space) {\n        for (const type of Object.keys(options.rules || {})) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                (options.space.zones || []).find((i) => i === type)\n            ) {\n                space_rules_for_user.hide = true;\n                for (const rule_block of options.rules[type]) {\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            visitor_type: options.visitor_type,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        if (ruleset.room_type !== undefined) {\n                            space_rules_for_user.room_type = ruleset.room_type;\n                        }\n                        break;\n                    }\n                }\n                if (!space_rules_for_user.hide) {\n                    break;\n                }\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'group':\n                case 'groups':\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'location':\n                case 'locations':\n                    // if (options.user && options.user.location) {\n                    //     counter = 0;\n                    //     condition.forEach(i =>\n                    //         (options.user.last_location.name || '').indexOf(i) >= 0\n                    //             ? counter++\n                    //             : null\n                    //     );\n                    //     if (counter >= options.rules[key].length) {\n                    //         matches++;\n                    //     }\n                    // }\n                    break;\n                case 'is_before':\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    if (options.time) {\n                        const [amount, unit] = condition[0].split(' ');\n                        const check = dayjs().add(+amount, unit as dayjs.OpUnitType);\n                        time.isAfter(check, unit as dayjs.OpUnitType) ? matches++ : '';\n                    }\n                    break;\n                case 'from_time':\n                    const after_time = dayjs(condition[0], 'HH:mm');\n                    if (dayjs().isAfter(after_time, 'm')) {\n                        matches++;\n                    }\n                    break;\n                case 'min_length':\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n                case 'visitor_types':\n                    if (options.visitor_type) {\n                        counter = 0;\n                        condition.forEach((i) => (i === options.visitor_type ? counter++ : null));\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: any): number {\n    return Object.values(rule_list).reduce((min, block: BookingRule[]) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = formatDuration({\n        minutes: currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n    });\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format('h:mma')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format('h:mma')}(${time_until_next_block})`,\n    };\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { PlaceUser, onlineState } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { StaffService } from '../../../../users/src/lib/staff.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard implements CanActivate, CanLoad {\n    constructor(private _router: Router, private _users: StaffService) {}\n\n    public async canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: PlaceUser = await this._users.active_user.pipe(first((_) => !!_)).toPromise() as any;\n        const can_activate = user && user.sys_admin;\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n\n    public async canLoad(route: Route, segments: UrlSegment[]): Promise<boolean> {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: PlaceUser = await this._users.active_user.pipe(first((_) => !!_)).toPromise() as any;\n        const can_activate = user && user.sys_admin;\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","\nimport './lib/api/zones.mock';\nimport './lib/api/users.mock';\nimport './lib/api/systems.mock';\nimport './lib/api/events.mock';\nimport './lib/api/calendars.mock';\n\nimport './lib/systems-bindings.mock';\n","export * from './lib/organisation';\n","import { predictableRandomInt, unique } from '@user-interfaces/common';\n\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nimport * as dayjs from 'dayjs';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2 ? event_status[2] : rnd < 5 ? event_status[0] : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    let attendees: any[] = MOCK_STAFF.concat(MOCK_GUESTS).filter((_) => predictableRandomInt(9999) % 3 === 0);\n        attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email');\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({\n        ...space,\n        resource: true,\n    });\n    const has_active_user = predictableRandomInt(9999) % 2 === 0;\n    if (has_active_user) {\n        attendees.push(ACTIVE_USER);\n    }\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: has_active_user ? ACTIVE_USER.email : attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: unique(attendees, 'email'),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start: nextEventTime(true),\n        event_end: nextEventTime(),\n        timezone: 'Sydney',\n        all_day: false,\n        location: 'clear text location',\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        extension_data: {},\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system.id]) {\n        event_spaces[event.system.id] = [];\n    }\n    event_spaces[event.system.id].push(event);\n});\n","export * from './lib/events';\n","import { registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@user-interfaces/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createLocationServicesModule } from './realtime/desks';\n\nexport function createSystem(space: HashMap) {\n    console.log('Create Bindings for ', space, space.id);\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        AreaManagement: [createLocationServicesModule(space)],\n    });\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind'\n})\nexport class BindingDirective<T = any> implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string;\n    /** Class name of the module to bind */\n    @Input() public mod: string;\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string;\n    /** Method to execute */\n    @Input() public exec: string;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string;\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T>();\n\n    /** Listener for event on host element */\n    private event_listener: () => void;\n    /** Listener for changes to the binding value */\n    private listener: Subscription;\n    /** Listener for initialisation state of composer */\n    private init_listener: Subscription;\n    /** Callback to unbind to the status variable */\n    private unbind: () => void;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {}\n\n    public ngOnInit(): void {\n        this.init_listener = onlineState().subscribe(init => {\n            if (init) {\n                this.bindVariable();\n                if (this.init_listener) {\n                    this.init_listener.unsubscribe();\n                    this.init_listener = null;\n                }\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.listener) {\n            this.listener.unsubscribe();\n            this.listener = null;\n        }\n        if (this.unbind) {\n            this.unbind();\n            this.unbind = null;\n        }\n        if (this.event_listener) {\n            this.event_listener();\n            this.event_listener = null;\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.ngOnDestroy();\n            this.bindVariable();\n        }\n        if (changes.on_event && this.on_event) {\n            if (this.event_listener) {\n                this.event_listener();\n                this.event_listener = null;\n            }\n            this.event_listener = this._renderer.listen(\n                this._element.nativeElement,\n                this.on_event,\n                () => this.execute()\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (authority() && this.bind && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            const binding = module.binding(this.bind);\n            this.unbind = binding.bind();\n            this.listener = binding.listen().subscribe(value => setTimeout(() => {\n                this.model = value;\n                this.modelChange.emit(this.model);\n            }, 10));\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            module.execute(this.exec, this.params).then(result => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        if (this.exec) {\n            this.execute();\n        }\n    }\n}\n","\nexport * from './building.class';\nexport * from './building.utilities';\nexport * from './level.class';\nexport * from './organisation.class';\nexport * from './organisation.service';\nexport * from './organisation.utilities';\nexport * from './zone.class';\nexport * from './desk.class';\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Identity } from '@user-interfaces/common';\nimport { formatDuration } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 60;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { BaseDataClass, getItemWithKeys, HashMap } from '@user-interfaces/common';\n\nexport class Organisation extends BaseDataClass {\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** Parent ID for the Organisation */\n    public readonly _parent_id: string;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: HashMap<string>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: Partial<Organisation> = {}) {\n        super(raw_data);\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = (raw_data as any).settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { HashMap } from '@user-interfaces/common';\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): HashMap {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map(i => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => ({ name: 'Test' }))\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            }\n        },\n        room_configurations: [\n            { id: 'boardroom', name: 'Boardroom', description: 'A boardroom setting'},\n            { id: 'cocktail', name: 'Cocktail', description: 'A cocktail setting'},\n        ]\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ApplicationIcon, BaseClass, SettingsService } from '@user-interfaces/common';\nimport { first } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseClass implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Name of the focused field */\n    public focus: string;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Whether there was an error with checking the user details */\n    public error: boolean;\n    /** User's username */\n    public username: string;\n    /** User's password */\n    public password: string;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._settings.get('app.logo_dark') || { type: 'icon' };\n        });\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n            this.focus = 'password';\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <div class=\"header\" [style.background-color]=\"logo?.background\">\n            <div class=\"logo\">\n                <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n            </div>\n        </div>\n        <div class=\"body\" [class.error]=\"error\">\n            <ng-container *ngIf=\"!loading; else loading_state\">\n                <div class=\"field\">\n                    <label\n                        for=\"username\"\n                        [class.focused]=\"username || focus === 'username'\"\n                        [class.in-focus]=\"focus === 'username'\"\n                        >Username</label\n                    >\n                    <input\n                        id=\"username\"\n                        [(ngModel)]=\"username\"\n                        (focus)=\"focus = 'username'\"\n                        (blur)=\"focus = ''\"\n                        (keyup.enter)=\"toPassword()\"\n                    />\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"password\"\n                        [class.focused]=\"password || focus === 'password'\"\n                        [class.in-focus]=\"focus === 'password'\"\n                        >Password</label\n                    >\n                    <input\n                        #pass_field\n                        id=\"password\"\n                        type=\"password\"\n                        [(ngModel)]=\"password\"\n                        (focus)=\"focus = 'password'\"\n                        (blur)=\"focus = ''\"\n                        (keyup.enter)=\"login()\"\n                    />\n                </div>\n                <div class=\"error-message\">Invalid username or password</div>\n            </ng-container>\n        </div>\n        <div class=\"footer\" *ngIf=\"!loading\">\n            <button mat-button color=\"primary\" (click)=\"login()\">Login</button>\n        </div>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseClass } from '@user-interfaces/common';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" overlay>\n            <input matInput [ngModel]=\"date\" [disabled]=\"disabled\" (ngModelChange)=\"setValue($event)\" [matDatepicker]=\"picker\" />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .startOf('m')\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new Date(new_date).toISOString();\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = new Date(value).toISOString();\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {\n        if (!window.ga) {\n            (function(i, s, o, g, r, a, m) {\n                i['GoogleAnalyticsObject'] = r;\n                (i[r] =\n                    i[r] ||\n                    function() { (i[r].q = i[r].q || []).push(arguments); }), (i[r].l = 1 * (new Date() as any));\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n            console.log('Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.ga;\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) { throw new Error('Google Analytics needs to be enabled before being initialised') }\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        console.log('Service', `Setup with tracking ID: ${tracking_id}`);\n        this.service('create', tracking_id, 'auto');\n        this.service('send', 'pageview');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`user|${id}`, () => {\n                console.log('Service', `Set user ID: ${id}`);\n                this.service('set', 'userId', id);\n                this.event('authentication', 'user-id available');\n            }, 100);\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(category: string, action: string, label?: string, value?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`event|${category}|${action}|${label}|${value}`, () => {\n                const l = label ? ', ' + label : '';\n                console.log('Service', `Event: ${category}, ${action}${l}${value ? ', ' + value : ''}`);\n                const prefix = this.app_prefix ? this.app_prefix + '_' : ''\n                this.service('send', 'event', `${prefix}${category}`, action, label, value);\n            }, 100);\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (name && this.enabled) {\n            this.timeout(`event|${name}|${app_name || this.app_name}`, () => {\n                console.log('Service', `Screen: ${name}${app_name ? ', ' + app_name : ''}`);\n                this.service('send', 'screenview', {\n                    appName: app_name || this.app_name,\n                    screenName: name\n                });\n            }, 100);\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(`page|${route}`, () => {\n                console.log('Service', `Page: ${route}`);\n                this.service('send', 'pageview', `${origin ? location.origin : ''}${route}`);\n            }, 100);\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(category: string, variable: string, value: string, label?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`page|${category}|${variable}|${value}|${label}`, () => {\n                console.log('Service', `Timing: ${category}, ${variable}, ${value}${label ? ', ' + label : ''}`);\n                this.service('send', 'timing', category, variable, value, label);\n            }, 100);\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            this.timers[name] = null;\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) { fn(); }\n            this.timers[name] = null;\n        }, delay);\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show\">\n            <div\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * 100 + '%'\"\n                [style.height]=\"radius * 100 + '%'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                name=\"message\"\n                [style.top]=\"'-' + radius * 100 + '%'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap\"\n            >\n                {{ message }}\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [name=\"message\"] {\n                transform: translateX(-50%);\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -100%)\n                }\n                100% {\n                    opacity: 1;\n                    transform translate(-50%, 0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Fill colour for the pin SVG */\n    public readonly radius = this._details.radius || 10;\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapRadiusData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { clientId, invalidateToken, token } from '@placeos/ts-client';\n\nimport { BaseClass, HotkeysService, notifySuccess, setAppName, setNotifyOutlet, SettingsService, setupCache, setupPlace } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { SpacesService } from '../../../spaces/src/lib/spaces.service';\nimport { StaffService } from '../../../users/src/lib/staff.service';\nimport { setDefaultCreator } from '../../../events/src/lib/event.class';\nimport { addHours } from 'date-fns';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <div *ngIf=\"loading | async\" class=\"loading-block\">\n            <div class=\"info-block center\">\n                <div class=\"icon\">\n                    <mat-spinner [diameter]=\"64\"></mat-spinner>\n                </div>\n            </div>\n        </div>\n    `,\n    styleUrls: [\n        '../../../../shared-styles/utility.scss',\n        '../../../../shared-styles/app.component.scss',\n        '../../../../shared-styles/custom-element.styles.scss',\n        '../../../../shared-styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Observable for whether the application is initialising */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _spaces: SpacesService, // For init\n        private _users: StaffService,\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar,\n        private _hotkey: HotkeysService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyM'], () => {\n            localStorage.setItem('mock', `${localStorage.getItem('mock') !== 'true'}`);\n            location.reload();\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyC'], () => {\n            this._clipboard.copy(token());\n            notifySuccess('Successfully copied token.');\n        });\n        this._hotkey.listen(['Control', 'Alt', 'Shift', 'KeyV'], () => {\n            navigator.clipboard?.readText().then(tkn => {\n                localStorage.setItem(`${clientId()}_access_token`, `${tkn}`);\n                localStorage.setItem(`${clientId()}_expires_at`, `${addHours(new Date(), 6).valueOf()}`);\n                notifySuccess('Successfully pasted token.');\n                setTimeout(() => location.reload(), 2000);\n            });\n        });\n        setNotifyOutlet(this._snackbar);\n        this._loading.next(true);\n        /** Wait for settings to initialise */\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.mock = !!this._settings.get('mock');\n        /** Wait for authentication details to load */\n        await setupPlace(settings).catch(() => this.onInitError());\n        this._loading.next(false);\n        setupCache(this._cache);\n        this.timeout('wait_for_user', () => this.onInitError(), 5 * 1000);\n        console.log('Waiting on user...')\n        await this._users.initialised.pipe(first((_) => _)).toPromise();\n        console.log('User loaded...')\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(this._users.current);\n    }\n\n    private onInitError() {\n        console.log('User Invalid...');\n        invalidateToken();\n        location.reload();\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    InjectionToken,\n    Injector,\n    Input,\n    QueryList,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@user-interfaces/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@yuion/svg-viewer';\n\nexport const MAP_FEATURE_DATA = new InjectionToken('Data for Map Features');\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\"></div>\n        <mat-spinner *ngIf=\"!viewer\" class=\"center\"></mat-spinner>\n        <div hidden>\n            <ng-container *ngFor=\"let element of features; let i = index\">\n                <div *ngIf=\"element\">\n                    <div #feature [attr.el-id]=\"element.location\" [attr.view-id]=\"viewer\">\n                        <ng-container\n                            *ngComponentOutlet=\"\n                                element.content;\n                                injector: injectors[i]\n                            \"\n                        ></ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n        :host {\n            position: relative\n            height: 100%;\n            width: 100%;\n        }\n    `,\n    ],\n})\nexport class InteractiveMapComponent extends BaseClass implements AfterViewInit {\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom: number = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    public injectors: Injector[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    public get feature_list() {\n        return (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (this.viewer) {\n            if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.injectors = (this.features || []).map((f: any) =>\n                    Injector.create({\n                        providers: [\n                            {\n                                provide: MAP_FEATURE_DATA,\n                                useValue: { ...f.data },\n                            },\n                        ],\n                        parent: this._injector,\n                    })\n                );\n                this.timeout('update_view', () => this.updateView(), 100);\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        if (!getViewer(this.viewer)) return this.timeout('update_view', () => this.updateView());\n        updateViewer(this.viewer, {\n            styles: this.styles,\n            features: this.feature_list,\n            labels: this.labels,\n            actions: this.actions,\n        });\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        updateViewer(this.viewer, {\n            zoom: this.zoom,\n            desired_zoom: this.zoom,\n            center: this.center,\n            desired_center: this.center,\n        });\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement) {\n            if (this.viewer) {\n                removeViewer(this.viewer);\n            }\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n            });\n        }\n    }\n}\n","import { randomInt } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map(i => new CateringItem(i));\n        this.system_id = data.system_id;\n        this.item_count = this.items.reduce((amount, item) => amount + item.quantity, 0);\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.deliver_at = data.deliver_at || (data as any).date || this.event?.date || new Date().getTime();\n    }\n}\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { User } from '../../../../users/src/lib/user.class';\nimport { StaffService } from '../../../../users/src/lib/staff.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event)\"\n                    [disabled]=\"disabled\"\n                    placeholder=\"Search for user...\"\n                    i18n-placeholder\n                    [matAutocomplete]=\"auto\"\n                    (blur)=\"resetSearchString()\"\n                />\n                <div class=\"prefix\" matPrefix>\n                    <app-icon\n                        [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n                    ></app-icon>\n                </div>\n                <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n                    <mat-spinner diameter=\"16\"></mat-spinner>\n                </div>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n                    <div class=\"name\">{{ option.name }}</div>\n                    <div class=\"email\">{{ option.email }}</div>\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                font-size: 1.5em;\n                position: relative;\n                top: 0.15em;\n                left: -0.15em;\n            }\n\n            .name {\n                height: 1em;\n            }\n\n            .email {\n                font-size: 0.6em;\n                color: rgba(#000, 0.65);\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent extends BaseClass implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: StaffService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                    ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<\n                          User[]\n                      >)\n                    : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item) =>\n                        item.name.toLowerCase().includes(search) ||\n                        item.email.toLowerCase().includes(search)\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { Subscription } from 'rxjs';\nimport { notifyInfo } from './notifications';\n\nlet _available: Subscription;\nlet _activated: Subscription;\nlet _timer: number;\n\nexport type Notification = (message: string, callback: () => void) => void;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    notify: Notification = () => null,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_available) _available.unsubscribe();\n        if (_activated) _activated.unsubscribe();\n        if (_timer) clearInterval(_timer);\n        _available = cache.available.subscribe((event) => {\n            const current = `current version is ${event.current.hash}`;\n            const available = `available version is ${event.available.hash}`;\n            log('CACHE', `Update available: ${current} ${available}`);\n            activateUpdate();\n        });\n        _activated = cache.activated.subscribe(() => {\n            log('CACHE', `Updates activated. Reloading...`);\n            notify('Newer version of the application is available', () =>\n                location.reload(true)\n            );\n        });\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            this._cache.checkForUpdate();\n        }, interval);\n    }\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nfunction activateUpdate() {\n    if (this._cache.isEnabled) {\n        log('CACHE', `Activating changes to the cache...`);\n        this._cache.activateUpdate().then(() => {\n            notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                location.reload(true)\n            );\n        });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, BaseClass, DialogEvent } from '@user-interfaces/common';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n        </header>\n        <mat-dialog-content>\n            <div class=\"body\" *ngIf=\"!loading; else load_state\">\n                <app-icon [icon]=\"icon\"></app-icon>\n                <div class=\"content\">\n                    <p [innerHTML]=\"content\"></p>\n                </div>\n            </div>\n        </mat-dialog-content>\n        <mat-dialog-actions *ngIf=\"!loading\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button name=\"accept\" (click)=\"accept()\">{{ action }}</button>\n        </mat-dialog-actions>\n        <ng-template #load_state>\n            <div class=\"body\">\n                <div class=\"info-block\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"32\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">{{ loading }}</div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .body {\n                display: flex;\n                align-items: center;\n                flex-direction: column;\n                padding: 1em;\n            }\n\n            .content {\n                min-width: 16rem;\n                text-align: center;\n                font-size: 0.8em;\n            }\n\n            app-icon {\n                font-size: 3em;\n            }\n\n            mat-dialog-actions {\n                justify-content: center;\n            }\n\n            mat-dialog-actions button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class ConfirmModalComponent extends BaseClass {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public action: string = this._data.action || 'Ok';\n    /** Display icon properties */\n    public icon: ApplicationIcon = this._data.icon || { class: 'material-icons', content: 'done' };\n    /** Loading state */\n    public loading: string;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this._dialog_ref.close('done');\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { RoomConfiguration } from '@user-interfaces/common';\nimport { BuildingLevel } from '@user-interfaces/organisation';\n\nexport type ResourceResponseStatus = 'needsAction' | 'declined' | 'tentative' | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly image: string;\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string;\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.image = data.image || '';\n        this.configurations = data.configurations || [];\n        this.features = data.features || '';\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n    }\n}\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BaseClass, csvToJson, downloadFile, notifyError } from '@user-interfaces/common';\nimport { Subject, Observable } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    filter,\n} from 'rxjs/operators';\n\nimport { User } from '../../../../users/src/lib/user.class';\nimport { StaffService } from '../../../../users/src/lib/staff.service';\nimport { GuestsService } from '../../../../users/src/lib/guests.service';\n\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseClass implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _users: StaffService, private _guests: GuestsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            filter((query) => query.length >= this.limit),\n            switchMap((query) => {\n                this.loading = true;\n                return Promise.all([\n                    this._users.query({\n                        q: query,\n                        cache: 60 * 1000,\n                    }),\n                    this._guests.query({ q: query }),\n                ])\n                    .then(([users, guests]) => [\n                        ...users,\n                        ...guests.map((i) => {\n                            i.visit_expected = true;\n                            return i;\n                        }),\n                    ])\n                    .catch(() => []);\n            }),\n            map((list: User[]) => {\n                this.loading = false;\n                const search = this.search_str.toLowerCase();\n                return list.filter(\n                    (item) =>\n                        item.name.toLowerCase().includes(search) ||\n                        item.email.toLowerCase().includes(search)\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.email === user.email);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.email !== user.email);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) => notifyError('Error reading file.'));\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_id;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.com`;\n            }\n            el.visit_expected = !el.email.endsWith('pwc.com');\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required\\nFake Org,John,Smith,john.smith@example.com,01234567898, yes`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete\n        #auto=\"matAutocomplete\"\n        (optionSelected)=\"addUser($event.option.value)\"\n        [displayWith]=\"displayFn\"\n    >\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"user\">\n                <a-user-avatar [user]=\"option\"></a-user-avatar>\n                <div class=\"details\">\n                    <div class=\"name\">{{ option.name }}</div>\n                    <div class=\"email\">{{ option.email }}</div>\n                </div>\n            </div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.visit_expected || user.is_external ? 'accent' : 'primary'\"\n                (click)=\"user.visit_expected || user.is_external ? new_user.emit(user) : null\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <div class=\"actions\">\n        <button\n            type=\"button\"\n            name=\"new-contact\"\n            matRipple\n            (click)=\"new_user.emit()\"\n            i18n=\"Add new external attendee\"\n        >\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button\n            type=\"button\"\n            name=\"download-template\"\n            matRipple\n            (click)=\"downloadCSVTemplate()\"\n            i18n=\"Download template CSV file\"\n        >\n            CSV Template\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { BaseAPIService, HashMap } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { GuestUser } from './user.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GuestsService extends BaseAPIService<GuestUser> {\n    constructor() {\n        super();\n        this._name = 'Guest';\n        this._api_route = 'guests';\n    }\n\n    protected process(raw_data: HashMap): GuestUser {\n        return new GuestUser(raw_data);\n    }\n\n    /**\n     * Update metadata associated with guest\n     * @param email Email of the guest\n     * @param data New state of the guest's metadata\n     */\n    public updateMetadata(email: string, data: HashMap | any[]) {\n        return updateMetadata(email, { id: email, name: 'guest-metadata', details: data });\n    }\n\n    /**\n     * Get upcoming meetings for a guest\n     * @param id Email Address of the guest\n     */\n    public async meetings(id: string): Promise<CalendarEvent[]> {\n        return (await this.task(id, 'meetings', {}, 'get')).map(i => new CalendarEvent(i));\n    }\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@user-interfaces/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nregisterMockEndpoint({\n    path: '/api/engine/v2/users/:id',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.route_params.id === 'current') {\n            return ACTIVE_USER;\n        }\n        const person = MOCK_STAFF.find(user => user.email === request.route_params.id);\n        if (person) {\n            return person;\n        }\n        throw { status: 404, message: 'User not found' };\n    },\n});\n\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/people',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.query_params.q) {\n            const search = request.query_params.q.toLowerCase();\n            return MOCK_STAFF.filter(\n                (user) =>\n                    user.name.toLowerCase().includes(search) ||\n                    user.email.toLowerCase().includes(search)\n            );\n        }\n        return MOCK_STAFF;\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/people/:id',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        const id = decodeURIComponent(request.route_params.id);\n        const person = MOCK_STAFF.find(user => user.email === id);\n        if (person) {\n            return {\n                ...person,\n                location: generateLocation()\n            };\n        }\n        throw { status: 404, message: 'User not found' };\n    },\n});\n\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/guests',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.query_params.q) {\n            const search = request.query_params.q.toLowerCase();\n            return MOCK_GUESTS.filter(\n                (user) =>\n                    user.name.toLowerCase().includes(search) ||\n                    user.email.toLowerCase().includes(search)\n            );\n        }\n        return MOCK_STAFF;\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/guests/:email',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        const person = MOCK_GUESTS.find(user => user.email === request.route_params.email);\n        if (person) {\n            return person;\n        }\n        throw { status: 404, message: 'Guest not found' };\n    },\n});\n\nregisterMockEndpoint({\n    path: '/api/staff/v1/guests/:email/meetings',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.route_params.email) {\n            console.log('Events:', MOCK_EVENTS);\n            const email = request.route_params.email.toLowerCase();\n            console.log('Email:', request.route_params.email);\n            const events = MOCK_EVENTS.filter(\n                (event) => event.attendees.find(user => user.email.toLowerCase() === email)\n            );\n            console.log('Matched Events:', events);\n            return events;\n        }\n        throw { status: 404, message: `Unable to find meetings with guest with email ${request.route_params.email}` };\n    },\n});\n\n\n\nconst LOCATION_TYPES = ['meeting', 'desk_id', 'laptop', 'mobile', 'geo', 'none'];\n\nfunction generateLocation() {\n    const type = LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n    const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n    const level_spaces = MOCK_SPACES.filter(s => s.zones.includes(level.id));\n    const space = level_spaces[predictableRandomInt(level_spaces.length)] || {};\n    const location: HashMap = {};\n    switch (type) {\n        case 'meeting':\n            location.meeting = {\n                building: level.parent_id,\n                level: level.id,\n                system: space.id,\n                map_id: space.map_id,\n                event_id: ''\n            };\n            break;\n        case 'desk_id':\n            location.meeting = {\n                building: level.parent_id,\n                level: level.id,\n                map_id: space.map_id,\n                checked_in: dayjs().unix()\n            };\n            break;\n        case 'laptop':\n        case 'mobile':\n            location[type] = {\n                building: level.parent_id,\n                level: level.id,\n                x: +predictableRandomInt(10000),\n                y: +predictableRandomInt(5000),\n                last_seen: dayjs().subtract(predictableRandomInt(60), 'm').unix()\n            };\n            break;\n        case 'geo':\n            location.geo = {\n                lat: predictableRandomInt(180) - 90,\n                lon: predictableRandomInt(360) - 180,\n                last_seen: dayjs().subtract(predictableRandomInt(60), 'm').unix()\n            };\n            break;\n    }\n    return location;\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            class=\"counter\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                mat-icon-button\n                name=\"remove\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n            </button>\n            <div class=\"value\">\n                {{ value || '0' }}\n            </div>\n            <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            .counter {\n                display: flex;\n                align-items: center;\n                font-size: 1rem;\n            }\n\n            .value {\n                padding: 0.25em;\n                min-width: 3em;\n                text-align: center;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * from './space-select-modal/item/item.component';\nexport * from './space-select-modal/space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\n","import { BaseDataClass, HashMap, Identity, RoomConfiguration } from '@user-interfaces/common';\nimport { BookingRule } from '@user-interfaces/events';\n\nimport { BuildingLevel } from './level.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number, end: number };\n\n    public readonly orientations: HashMap<number>;\n    public readonly attributes: readonly Identity[];\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (raw_data.loan_items || disc_info.loan_items || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location ||\n            disc_info.location || { longitude: null, latitude: null };\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes =\n            raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.orientations = raw_data.orientations || disc_info.orientations || settings.orientations || {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","import { HashMap } from '@user-interfaces/common';\nimport { format } from 'date-fns';\n\nexport function eventStatus(details: HashMap): 'confirmed' | 'tentative' | 'cancelled' {\n    if (details.resources?.length) {\n        if (details.resources.every((i) => i.response_status === 'accepted')) {\n            return 'confirmed';\n        } else if (\n            details.resources.some(\n                (i) => i.response_status === 'tentative' || i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'cancelled';\n    }\n    return 'confirmed';\n}\n\nexport function formatRecurrence(recurrence) {\n    let details = '';\n    if (recurrence) {\n        const { interval, pattern, start, end } = recurrence;\n        if (interval && interval > 1) {\n            details = details.concat(`Every ${interval}`);\n        }\n        switch (pattern) {\n            case 'daily':\n                if (interval && interval > 1) {\n                    details = details.concat(' days');\n                } else {\n                    details = details.concat('Daily');\n                }\n                break;\n            case 'weekly':\n                if (interval && interval > 1) {\n                    details = details.concat(' weeks');\n                } else {\n                    details = details.concat('Weekly');\n                }\n                break;\n            case 'monthly':\n                if (interval && interval > 1) {\n                    details = details.concat(' months');\n                } else {\n                    details = details.concat('Monthly');\n                }\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return '';\n}\n\n","\nimport { differenceInMinutes } from 'date-fns';\n\nimport { BaseDataClass } from '@user-interfaces/common';\nimport { Space } from '../../../spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar extends BaseDataClass {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Can edit */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Calendar> = {}) {\n        super(data);\n        this.primary = data.primary;\n        this.summary = data.summary;\n        this.can_edit = data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map((i: any) => {\n            return {\n                date: new Date(i.starts_at.dateTime).valueOf(),\n                duration: differenceInMinutes(\n                    new Date(i.ends_at.dateTime),\n                    new Date(i.starts_at.dateTime)\n                ),\n                status: i.status,\n            };\n        });\n    }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"d82768a\",\n    \"hash\": \"d82768a\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"d82768a\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1605072735471\n};\n/* tslint:enable */\n","import { HashMap, Identity } from '@user-interfaces/common';\n\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    public readonly settings: HashMap = {};\n    public readonly locations: readonly Identity[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n    }\n}\n","\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nMOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\nregisterMockEndpoint({\n    path: '/api/engine/v2/systems',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        return MOCK_SPACES;\n    }\n});\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '@user-interfaces/common';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"app-icon\">\n            <i *ngIf=\"!icon || icon.type !== 'img'\" [class]=\"icon?.class || className\">\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img *ngIf=\"icon && icon.type === 'img'\" [src]=\"icon.src | safe: 'resource'\" />\n        </div>\n    `,\n    styles: [\n        `\n            .app-icon {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                height: 1.25em;\n                width: 1.25em;\n            }\n\n            i {\n                font-size: 1em;\n            }\n\n            img {\n                height: 1em;\n                width: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string;\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UnauthorisedComponent } from '@user-interfaces/components';\n\nconst routes: Routes = [\n    {\n        path: 'unauthorised',\n        component: UnauthorisedComponent,\n    },\n    { path: '**', redirectTo: 'unauthorised' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { predictableRandomInt } from '@user-interfaces/common';\nimport { generateMockSpace } from '@user-interfaces/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i).join(' ');\n};\n\nexport const MOCK_SPACES = [\n    { name: 'Meeting Room 1.01', map_id: 'area-1.01-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.02', map_id: 'area-1.02-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.03', map_id: 'area-1.03-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.04', map_id: 'area-1.04-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.05', map_id: 'area-1.05-status', zones: ['lvl-01'], bookable: false },\n    { name: 'Meeting Room 1.06', map_id: 'area-1.06-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.07', map_id: 'area-1.07-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.08', map_id: 'area-1.08-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.09', map_id: 'area-1.01-status', zones: ['lvl-01'] },\n    { name: 'Meeting Room 1.10', map_id: 'area-1.10-status', zones: ['lvl-01'] },\n].map(d => generateMockSpace({ ...d, features: randomSpaceFeatures() }));\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { log, getItemWithKeys } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) { return value; }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nregisterMockEndpoint({\n    path: '/api/engine/v2/zones',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.query_params.tags === 'org') {\n            return MOCK_ORGS;\n        } else if (request.query_params.tags === 'building') {\n            return MOCK_BUILDINGS;\n        } else if (request.query_params.tags === 'level') {\n            return MOCK_LEVELS;\n        }\n        throw { status: 404, message: 'Zones not found' }\n    }\n});\n\nregisterMockEndpoint({\n    path: '/api/engine/v2/metadata/:id',\n    metadata: {},\n    method: 'GET',\n    callback: (request) => {\n        if (request.query_params.name === 'catering') {\n            return [];\n        }\n        return {}\n    }\n})\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseClass, Identity, RoomConfiguration, SettingsService, unique } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { NewUserModalComponent } from '../../../../users/src/lib/new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from '../../../../spaces/src/lib/space-select-modal/space-select-modal.component';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseClass implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n\n    public available_configs: RoomConfiguration[] = [];\n\n    public get catering_allowed() {\n        return this.form.controls.visitor_type?.value === 'client';\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (!this.form) {\n            this.timeout('init', this.ngOnInit);\n            return;\n        }\n        this.setBuildingOptions();\n    }\n\n    private setBuildingOptions() {\n        this.available_configs = this._org.available_room_configs;\n        console.log('available_configs', this.available_configs);\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return 'No Recurrence';\n    }\n\n    /** Display string for the catering value of the booking */\n    public get catering() {\n        return 'No Catering';\n    }\n\n    public get configuration(): RoomConfiguration | null {\n        if (\n            this.form &&\n            this.form.controls.configuration &&\n            this.form.controls.configuration.value\n        ) {\n            return this.available_configs.find(\n                (f) => f.id === this.form.controls.configuration.value\n            );\n        }\n        return null;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._settings.get('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._settings.get('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        return (\n            (this.form.controls.space_list.value || []).map((space) => space.name).join(', ') ||\n            'No Spaces selected'\n        );\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                },\n            }\n        );\n        this.subscription(\n            'change_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.form.controls.space_list.setValue([...ref.componentInstance.spaces]);\n                    this.unsub('change_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        console.log('Open Recurrence Modal');\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openCateringModal() {\n        console.log('Open Catering Modal');\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value || [];\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\">Title is required</mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\">Start Time: </label>\n            <a-time-field name=\"start-time\" formControlName=\"date\"></a-time-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <label for=\"duration\">Duration: </label>\n            <a-duration-field name=\"duration\" formControlName=\"duration\"></a-duration-field>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organizer\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.value\">\n                    {{ type.display }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"group configuration\" *ngIf=\"form.controls.configuration && available_configs.length > 1\">\n        <div class=\"field\">\n            <label for=\"booking-type\">Room Configuration: </label>\n            <mat-form-field appearance=\"outline\" title=\"{{configuration.description}}\">\n                <mat-select name=\"configuration\" formControlName=\"configuration\">\n                    <mat-option *ngFor=\"let config of available_configs\" [value]=\"config.id\">\n                        {{ config.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"field info\">\n            <div *ngIf=\"!!configuration\">{{configuration.description}}</div>\n        </div>\n    </div>\n    <div\n        class=\"field\"\n        *ngIf=\"catering_allowed && form.controls.catering\"\n    >\n        <label for=\"spaces\">Catering: </label>\n        <an-action-field\n            name=\"resources\"\n            [placeholder]=\"catering\"\n            (onAction)=\"openCateringModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\n\nimport { BindingDirective } from './binding/binding.directive';\nimport { ActionIconComponent } from './action-icon/action-icon.component';\nimport { IconComponent } from './icon/icon.component';\nimport { PopoutMenuComponent } from './popout-menu/popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar/user-avatar.component';\n\nimport { ActionFieldComponent } from './action-field/action-field.component';\nimport { DateFieldComponent } from './date-field/date-field.component';\nimport { DurationFieldComponent } from './duration-field/duration-field.component';\nimport { TimeFieldComponent } from './time-field/time-field.component';\nimport { UserListFieldComponent } from './user-list-field/user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field/user-search-field.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { CommonModule } from '@angular/common';\nimport { InteractiveMapComponent } from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\n\nexport * from './action-field/action-field.component';\nexport * from './action-icon/action-icon.component';\nexport * from './binding/binding.directive';\nexport * from './booking-form/booking-form.component';\nexport * from './confirm-modal.component';\nexport * from './counter/counter.component';\nexport * from './date-field/date-field.component';\nexport * from './duration-field/duration-field.component';\nexport * from './icon/icon.component';\nexport * from './login/login.component';\nexport * from './popout-menu/popout-menu.component';\nexport * from './time-field/time-field.component';\nexport * from './unauthorised/unauthorised.component';\nexport * from './user-avatar/user-avatar.component';\nexport * from './user-form/user-form.component';\nexport * from './user-list-field/user-list-field.component';\nexport * from './user-search-field/user-search-field.component';\nexport * from './interactive-map.component';\nexport * from './map-pin.component';\nexport * from './map-radius.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ActionFieldComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    CounterComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, APipesModule, ...MAT_MODULES],\n    providers: [],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, APipesModule],\n})\nexport class ComponentsModule {}\n","\nimport { BaseDataClass, HashMap } from '@user-interfaces/common';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport type EventResponseStatus = 'needsAction' | 'declined' | 'tentative' | 'accepted' | '';\n\nexport type UserGroup =\n    | 'tax'\n    | 'ladies'\n    | 'ifs'\n    | 'consulting'\n    | 'assurance'\n    | 'it'\n    | 'deals'\n    | 'partner'\n    | 'manager'\n    | 'director'\n    | '';\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: UserGroup[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: HashMap;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n\n    constructor(data: Partial<User> = {}) {\n        super(data);\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.organizer = !!data.organizer;\n        this.visit_expected = data.visit_expected;\n        this.checked_in = data.checked_in;\n        this.response_status = data.response_status || '';\n        this.groups = (data.groups || []).map((i) => (i || '').toLowerCase()) as any;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email.endsWith(USER_DOMAIN);\n        this.assistance_required = !!this.extension_data?.assistance_required;\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions = data.accepted_terms_conditions || false;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: number;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: HashMap;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || 0;\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ApplicationIcon } from './types';\n\nlet _service: MatSnackBar;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param icon Icon to render to the left of the notification message\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    icon: ApplicationIcon = {\n        type: 'icon',\n        class: 'material-icons',\n        content: 'info',\n    }\n): void {\n    if (!_service) {\n        throw new Error(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n */\nexport function notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n    const icon: ApplicationIcon = {\n        type: 'icon',\n        class: 'material-icons',\n        content: 'done',\n    };\n    console.debug(msg);\n    notify('success', msg, action, on_action, icon);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n */\nexport function notifyError(msg: string, action?: string, on_action?: () => void): void {\n    const icon: ApplicationIcon = {\n        type: 'icon',\n        class: 'material-icons',\n        content: 'error',\n    };\n    console.error(msg);\n    notify('error', msg, action, on_action, icon);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n */\nexport function notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n    const icon: ApplicationIcon = {\n        type: 'icon',\n        class: 'material-icons',\n        content: 'warning',\n    };\n    console.warn(msg);\n    notify('warn', msg, action, on_action, icon);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n */\nexport function notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n    console.info(msg);\n    notify('info', msg, action, on_action);\n}\n"],"sourceRoot":"webpack:///"}