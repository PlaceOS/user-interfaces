{"version":3,"file":"main.js","mappings":"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IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKpL,EAAUmL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,I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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","item_r15","BookingDetailsModalComponent_ng_container_40_div_5_Template","_c6","_c7","_booking","_this$booking2$linked","hide_map","has_assets","linked_bookings","ts","booking_start","booking_end","_this$booking9","_this$booking10","_this$booking11","_toggleCheckedIn","checkinBooking","notifySuccess","approved","rejected","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_ng_container_40_Template","viewLocation","BookingDetailsModalComponent_interactive_map_42_Template","BookingDetailsModalComponent_button_53_Template","BookingDetailsModalComponent_button_54_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","booking_rules","showMetadata","available_resources","merge","timer","restrictions","_this$form$getRawValu","zone_id","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booking_id","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","_ref13","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","response_type","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","use_24hr","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","toJSON","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r7","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","sendMessage","messages","toggleChat","ChatComponent_div_0_div_4_Template","ChatComponent","_chat","chat_hint","_this$user","scrollToBottom","connected","startChat","_input_el","_this4$_container_el","_container_el","scrollTop","scrollHeight","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_chat_system","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","diff","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","change","renderSpaceStatus","mapActions","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_this$mapsIndoors_ins2","_this$mapsIndoors_ins3","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","found_level_id","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","accumulator","currentValue","_setPolygonFill2","_this$mapsIndoors_ins4","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","asset_utilities_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","setup_time","breakdown_time","old_system","host_override","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","i12","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","tmp_7_0","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r8","BookingRulesFormComponent_div_58_div_1_Template","BookingRulesFormComponent_div_58_div_2_Template","available_conditions","time_r12","BookingRulesFormComponent_div_59_mat_option_5_Template","duration_blocks","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","time_r17","time_r18","BookingRulesFormComponent_div_61_ng_container_9_mat_option_1_Template","_r22","setIsBetween","BookingRulesFormComponent_div_61_mat_option_6_Template","BookingRulesFormComponent_div_61_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_div_56_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","getMinutes","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","feature_display","SpaceFiltersComponent_section_39_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_39_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_39_Template","SpaceFiltersComponent_div_41_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-pending]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) return ruleset.rules;\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"c2f0075\",\n    \"hash\": \"c2f0075\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"c2f0075\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1697760509545\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-white rounded-full border border-gray-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-gray-100 rounded-xl border border-gray-200 shadow overflow-hidden w-[20rem]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-white w-full p-2 border-b border-gray-200\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"show = false\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[24rem] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-white border-gray-200 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-black/60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div class=\"text-xs text-black/30 px-2 py-1\">\n                                {{ message.timestamp | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-white border-gray-200 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute bottom-16 right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-slate-400 border border-slate-600\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex items-center bg-white focus-within:outline outline-blue-500 border-t border-gray-200\"\n                >\n                    <input\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none\"\n                        [(ngModel)]=\"message\"\n                        (keyup.enter)=\"sendMessage()\"\n                    />\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, currentUser, log, randomString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(\n                id\n            )}?bearer_token=${encodeURIComponent(token())}`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        this._chat_messages.next([\n            ...this._chat_messages.getValue(),\n            {\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                timestamp: Date.now(),\n            },\n        ]);\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-gray-300 divide-y divide-gray-300 dark:border-neutral-500 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-black/5 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 divide-x divide-gray-300\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : `${hours} hour${hours === 1 ? '' : 's'}`;\n        } else if (diff < 30 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'dd MMM yyyy');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-white rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-gray-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary dark:bg-neutral-800 dark:text-white\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        this.loading = true;\n        await this.initMapView();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n            this.loading = false;\n        }\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name === e.buildingInfo.name;\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e) => {\n            const found_level_id = this.levels_list.find(\n                (level) => level.id === e\n            );\n            this._state.setLevel(found_level_id);\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"absolute inset-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-1 rounded-2xl text-white pl-1 pr-2 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-pending]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'question_mark'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime, set } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, organiser } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((space, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(\n                            result.id,\n                            spaces.length\n                                ? {\n                                      calendar:\n                                          this.form.value.host ||\n                                          currentUser()?.email,\n                                      system_id: spaces[0].id,\n                                  }\n                                : {}\n                        ).toPromise();\n                        notifyError('Unable to book the selected assets.');\n                        this._loading.next('');\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly update_master: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(data.event_end * 1000, this.date) ||\n            30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60, this.duration);\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? addMinutes(date, 24 * 60)\n            : addMinutes(date, this.duration);\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            delete obj.extension_data.setup_time;\n            delete obj.extension_data.breakdown_time;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(\n            Math.floor(this._event.ext('setup_time') / 60) || 0\n        ),\n        breakdown: new FormControl(\n            Math.floor(this._event.ext('breakdown_time') / 60) || 0\n        ),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    setup_time: this.form.value.setup * 60,\n                    breakdown_time: this.form.value.breakdown * 60,\n                },\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.extension_data?.setup_time || 0),\n        breakdown_time: new FormControl(\n            event.extension_data?.breakdown_time || 0\n        ),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => !events.find((e) => e.asset_id === _.id))\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { set } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\">Groups:</label>\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\">Minimum Booking Length:</label>\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\">Maximum Booking Length:</label>\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\">Start Day is before:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\">Start Day is after:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\">Start Time Must Be Between:</label>\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[1],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">Resources:</label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef, OnChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-gray-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-blue-600]=\"day.id !== active_date\"\n                    [class.hover:bg-opacity-20]=\"day.id !== active_date\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-white]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.dark:text-white]=\"day.id !== active_date\"\n                    [class.dark:text-opacity-30]=\"!day.is_month\"\n                    [class.bg-primary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-primary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-black/30 hover:border-black rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-white px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-red-600 text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}